<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors />
    <fr:uri>https://www.jonmsterling.com/jeanbénabou/</fr:uri>
    <fr:display-uri>jeanbénabou</fr:display-uri>
    <fr:route>/jeanbénabou/</fr:route>
    <fr:title text="Jean Bénabou">Jean Bénabou</fr:title>
    <fr:taxon>Person</fr:taxon>
  </fr:frontmatter>
  <fr:mainmatter />
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>11</fr:month>
              <fr:day>1</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-00CM/</fr:uri>
            <fr:display-uri>jms-00CM</fr:display-uri>
            <fr:route>/jms-00CM/</fr:route>
            <fr:title text="Successor algebras">Successor algebras</fr:title>
            <fr:meta name="source">
              <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">[joyal-moerdijk-1995]</fr:link>
            </fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>These results are attributed by <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">Joyal and Moerdijk</fr:link> to <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Jean Bénabou</fr:link> and <fr:link href="/mamukajibladze/" title="Mamuka Jibladze" uri="https://www.jonmsterling.com/mamukajibladze/" display-uri="mamukajibladze" type="local">Mamuka Jibladze</fr:link>.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2023</fr:year>
                  <fr:month>10</fr:month>
                  <fr:day>30</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/jms-00C9/</fr:uri>
                <fr:display-uri>jms-00C9</fr:display-uri>
                <fr:route>/jms-00C9/</fr:route>
                <fr:title text="Successor algebra">Successor algebra</fr:title>
                <fr:taxon>Definition</fr:taxon>
                <fr:meta name="source">
                  <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">[joyal-moerdijk-1995]</fr:link>
                </fr:meta>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>Let <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex> be a monad on a category <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex>. A <html:em>successor algebra</html:em> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex> is defined to be a <fr:link href="/jms-00C5/" title="Algebra for a monad" uri="https://www.jonmsterling.com/jms-00C5/" display-uri="jms-00C5" type="local">algebra</fr:link> <fr:tex display="inline"><![CDATA[X]]></fr:tex> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex> together with a morphism <fr:tex display="inline"><![CDATA[{X}\xrightarrow {{s_{X}}}{X}]]></fr:tex> in <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex> called the <html:em>successor map</html:em>.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2023</fr:year>
                  <fr:month>10</fr:month>
                  <fr:day>30</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/jms-00CA/</fr:uri>
                <fr:display-uri>jms-00CA</fr:display-uri>
                <fr:route>/jms-00CA/</fr:route>
                <fr:title text="Homomorphism of successor algebras">Homomorphism of successor algebras</fr:title>
                <fr:taxon>Definition</fr:taxon>
                <fr:meta name="source">
                  <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">[joyal-moerdijk-1995]</fr:link>
                </fr:meta>
              </fr:frontmatter>
              <fr:mainmatter><html:p>A homomorphism of <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebras</fr:link> is a <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">monad algebra homomorphism</fr:link> <fr:tex display="inline"><![CDATA[{X}\xrightarrow {{h}}{Y}]]></fr:tex> that preserves the successor operation:</html:p>
 
  
  <html:figure><fr:resource hash="c79ae3c30011fae9c1ab206e094c40b3"><fr:resource-content><html:img src="/c79ae3c30011fae9c1ab206e094c40b3.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path  coordinate (nw)
      ++(1.5,0) coordinate[label=above:$X$] (n/X)
      ++(0,-2) coordinate[label=below:$Y$] (s/Y)
      ++(1.5,0) coordinate (se)
      ;
    \draw [spath/save=line] (n/X) to (s/Y);
    \path 
      coordinate[dot,label=left:$s_{X}$] (suc) at (spath cs:line 0.33)
      coordinate[dot,label=left:$h$] (h) at (spath cs:line 0.66);
    \begin {scope}[on background layer]
      \fill [catc] (n/X) to (s/Y) to (se) to (nw -| se) to cycle;
    \end {scope}
  \end {tikzpicture}
  $=$
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path  coordinate (nw)
      ++(1.5,0) coordinate[label=above:$X$] (n/X)
      ++(0,-2) coordinate[label=below:$Y$] (s/Y)
      ++(1.5,0) coordinate (se)
      ;
    \draw [spath/save=line] (n/X) to (s/Y);
    \path 
      coordinate[dot,label=right:$s_{X}$] (suc) at (spath cs:line 0.66)
      coordinate[dot,label=right:$h$] (h) at (spath cs:line 0.33);
    \begin {scope}[on background layer]
      \fill [catc] (n/X) to (s/Y) to (se) to (nw -| se) to cycle;
    \end {scope}
  \end {tikzpicture}
]]></fr:resource-source></fr:resource></html:figure>
 
</fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2023</fr:year>
                  <fr:month>10</fr:month>
                  <fr:day>30</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/jms-00CC/</fr:uri>
                <fr:display-uri>jms-00CC</fr:display-uri>
                <fr:route>/jms-00CC/</fr:route>
                <fr:title text="The successor restriction of a successor algebra">The successor restriction of a successor algebra</fr:title>
                <fr:taxon>Definition</fr:taxon>
                <fr:meta name="source">
                  <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">[joyal-moerdijk-1995]</fr:link>
                </fr:meta>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>Let <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex> be a monad on a category <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex>, and let <fr:tex display="inline"><![CDATA[X]]></fr:tex> be an <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebra</fr:link> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex>. We define the <html:em>successor restriction</html:em> of <fr:tex display="inline"><![CDATA[X]]></fr:tex> to be the <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local"><html:em>weak</html:em> algebra</fr:link> <fr:tex display="inline"><![CDATA[s\cdot X :\equiv  s_{X}\cdot  X]]></fr:tex> defined by <fr:link href="/jms-00CQ/" title="Restricting endofunctor algebras along endomorphisms" uri="https://www.jonmsterling.com/jms-00CQ/" display-uri="jms-00CQ" type="local">restricting</fr:link> <fr:tex display="inline"><![CDATA[X]]></fr:tex> along its successor map.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2023</fr:year>
                  <fr:month>11</fr:month>
                  <fr:day>1</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/jms-00CN/</fr:uri>
                <fr:display-uri>jms-00CN</fr:display-uri>
                <fr:route>/jms-00CN/</fr:route>
                <fr:title text="The induced successor algebra on a fixed point">The induced <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebra</fr:link> on a fixed point</fr:title>
                <fr:taxon>Construction</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[\mathbb {T}\equiv {\mathopen {}\left (T,\eta ,\mu \right )\mathclose {}}]]></fr:tex> be a monad on a category <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex>, and let <fr:tex display="inline"><![CDATA[X]]></fr:tex> be a <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local">weak algebra</fr:link> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex>. The <fr:link href="/jms-00C5/" title="Algebra for a monad" uri="https://www.jonmsterling.com/jms-00C5/" display-uri="jms-00C5" type="local">monad algebra</fr:link> <fr:tex display="inline"><![CDATA[\bar {X}]]></fr:tex> <fr:link href="/jms-00CD/" title="The induced monad algebra" uri="https://www.jonmsterling.com/jms-00CD/" display-uri="jms-00CD" type="local">induced by</fr:link> <fr:tex display="inline"><![CDATA[X]]></fr:tex> can be equipped with the structure of a <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebra</fr:link> by defining <fr:tex display="inline"><![CDATA[{X}\xrightarrow {{s_{\bar {X}}}}{X}]]></fr:tex> to be the following map:</html:p>
 
  
  <html:figure><fr:resource hash="903bd2017e1e94b99a601b6d87d75a8b"><fr:resource-content><html:img src="/903bd2017e1e94b99a601b6d87d75a8b.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \begin {tikzpicture}[scale=0.5]
    \path  coordinate (nw)
      ++(1,0) coordinate[label=above:$X$] (n/X)
      ++(3,-3) coordinate[label=below:$X$] (s/X)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=wire] (n/X) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{X}$] (alg) at (spath cs:wire 0.5)
      (alg) ++(0,1) coordinate[dot,label=right:$\eta $] (unit);
    \draw  (unit.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/X) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
    \end {scope}
  \end {tikzpicture}
]]></fr:resource-source></fr:resource></html:figure>
 
</fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2023</fr:year>
                  <fr:month>11</fr:month>
                  <fr:day>5</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/jms-00DB/</fr:uri>
                <fr:display-uri>jms-00DB</fr:display-uri>
                <fr:route>/jms-00DB/</fr:route>
                <fr:title text="Converting between weak algebra and successor algebra homomorphisms">Converting between <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">weak algebra</fr:link> and <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra homomorphisms</fr:link></fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2023</fr:year>
                      <fr:month>11</fr:month>
                      <fr:day>1</fr:day>
                    </fr:date>
                    <fr:uri>https://www.jonmsterling.com/jms-00CR/</fr:uri>
                    <fr:display-uri>jms-00CR</fr:display-uri>
                    <fr:route>/jms-00CR/</fr:route>
                    <fr:title text="Lifting homomorphisms to the induced successor algebra">Lifting <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">homomorphisms</fr:link> to the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link></fr:title>
                    <fr:taxon>Lemma</fr:taxon>
                    <fr:meta name="source">
                      <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">[joyal-moerdijk-1995]</fr:link>
                    </fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[\mathbb {T} \equiv {\mathopen {}\left (T,\eta ,\mu \right )\mathclose {}}]]></fr:tex> be a monad on a category <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex> and let <fr:tex display="inline"><![CDATA[I]]></fr:tex> be an invertible <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local"><html:em>weak</html:em> algebra</fr:link> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex>; let <fr:tex display="inline"><![CDATA[X]]></fr:tex> be an arbitrary <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebra</fr:link>. Then a homomorphism <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{j}}{s\cdot X}]]></fr:tex> also tracks a <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra homomorphism</fr:link> <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{j}}{X}]]></fr:tex>, where <fr:tex display="inline"><![CDATA[\bar {I}]]></fr:tex> is the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link> of <fr:tex display="inline"><![CDATA[I]]></fr:tex> and <fr:tex display="inline"><![CDATA[s\cdot X]]></fr:tex> is the <fr:link href="/jms-00CC/" title="The successor restriction of a successor algebra" uri="https://www.jonmsterling.com/jms-00CC/" display-uri="jms-00CC" type="local">successor restriction</fr:link> of <fr:tex display="inline"><![CDATA[X]]></fr:tex>.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>11</fr:month><fr:day>1</fr:day></fr:date><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>We have <fr:link href="/jms-00CK/" title="Lifting homomorphisms to the induced monad algebra" uri="https://www.jonmsterling.com/jms-00CK/" display-uri="jms-00CK" type="local">already seen</fr:link> that <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{j}}{s\cdot X}]]></fr:tex> tracks an <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">algebra homomorphism</fr:link> <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{j}}{X}]]></fr:tex>. It remains to show that this homomorphism preserves the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">successor operation</fr:link>.</html:p>

  <html:ol><html:li>We first unfold the successor operation of the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link> on <fr:tex display="inline"><![CDATA[I]]></fr:tex>.

      
 
  
  <html:figure><fr:resource hash="ed8157f2074e3d8bf034e932a6bca63c"><fr:resource-content><html:img src="/ed8157f2074e3d8bf034e932a6bca63c.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path  coordinate (nw)
      ++(1.5,0) coordinate[label=above:$I$] (dom)
      ++(0,-2) coordinate[label=below:$X$] (cod)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=line] (dom) to (cod);
    \path 
      coordinate[dot,label=left:$s_{\bar {I}}$] (cell1) at (spath cs:line 0.33)
      coordinate[dot,label=left:$j$] (cell2) at (spath cs:line 0.66)
      ;
    \begin {scope}[on background layer]
      \fill [catc] (dom) to (cod) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(cell1)]{};
        
    \end {scope}
  \end {tikzpicture}


        $\equiv $
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++(1,0) coordinate[label=above:$I$] (n/I)
      ++(3,-3) coordinate[label=below:$X$] (s/X)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{I}$] (alg) at (spath cs:wire 0.5)
      coordinate[dot,label=5:$j$] (inj) at (spath cs:wire 0.75)
      (alg) ++(0,1) coordinate[dot,label=right:$\eta $] (unit)
      ;
    \draw  (unit.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(alg)(unit)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>Then we use the algebra property of <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{j}}{s\cdot X}]]></fr:tex>.

      
 
  
  <html:figure><fr:resource hash="6a5e43a3f032450104aa5a86f44bd531"><fr:resource-content><html:img src="/6a5e43a3f032450104aa5a86f44bd531.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++(1,0) coordinate[label=above:$I$] (n/I)
      ++(3,-3) coordinate[label=below:$X$] (s/X)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{I}$] (alg) at (spath cs:wire 0.5)
      coordinate[dot,label=5:$j$] (inj) at (spath cs:wire 0.75)
      (alg) ++(0,1) coordinate[dot,label=right:$\eta $] (unit)
      ;
    \draw  (unit.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(inj)(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

        $=$
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++(1,0) coordinate[label=above:$I$] (n/I)
      ++(3,-3) coordinate[label=below:$X$] (s/X)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{s\cdot X}$] (alg) at (spath cs:wire 0.5)
      coordinate[dot,label=-135:$j$] (inj) at (spath cs:wire 0.35)
      (alg) ++(0,1) coordinate[dot,label=right:$\eta $] (unit)
      ;
    \draw  (unit.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(inj)(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>Then we unfold the <fr:link href="/jms-00CC/" title="The successor restriction of a successor algebra" uri="https://www.jonmsterling.com/jms-00CC/" display-uri="jms-00CC" type="local">restricted algebra structure</fr:link>.

      
 
  
  <html:figure><fr:resource hash="91dccff415d9a25c61d77bb3fa5aff97"><fr:resource-content><html:img src="/91dccff415d9a25c61d77bb3fa5aff97.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++(1,0) coordinate[label=above:$I$] (n/I)
      ++(3,-3) coordinate[label=below:$X$] (s/X)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{s\cdot X}$] (alg) at (spath cs:wire 0.5)
      coordinate[dot,label=-135:$j$] (inj) at (spath cs:wire 0.35)
      (alg) ++(0,1) coordinate[dot,label=right:$\eta $] (unit)
      ;
    \draw  (unit.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

        $\equiv $
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++(1,0) coordinate[label=above:$I$] (n/I)
      ++(3,-3) coordinate[label=below:$X$] (s/X)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$j$] (inj) at (spath cs:wire 0.25)
      coordinate[dot,label=below:$s_{X}$] (suc) at (spath cs:wire 0.5)
      coordinate[dot,label=right:$\alpha _{X}$] (alg) at (spath cs:wire 0.75)
      (alg) ++(0,1) coordinate[dot,label=right:$\eta $] (unit)
      ;
    \draw  (unit.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(suc)(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>Finally we the unitality of the <fr:link href="/jms-00C5/" title="Algebra for a monad" uri="https://www.jonmsterling.com/jms-00C5/" display-uri="jms-00C5" type="local">monad algebra</fr:link> <fr:tex display="inline"><![CDATA[X]]></fr:tex>.

      
 
  
  <html:figure><fr:resource hash="d9d7f8b7f8bfe40f2477271229705896"><fr:resource-content><html:img src="/d9d7f8b7f8bfe40f2477271229705896.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++(1,0) coordinate[label=above:$I$] (n/I)
      ++(3,-3) coordinate[label=below:$X$] (s/X)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$j$] (inj) at (spath cs:wire 0.25)
      coordinate[dot,label=below:$s_{X}$] (suc) at (spath cs:wire 0.5)
      coordinate[dot,label=right:$\alpha _{X}$] (alg) at (spath cs:wire 0.75)
      (alg) ++(0,1) coordinate[dot,label=right:$\eta $] (unit)
      ;
    \draw  (unit.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(alg)(unit)]{};
        
    \end {scope}
  \end {tikzpicture}

        $=$
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path  coordinate (nw)
      ++(1.5,0) coordinate[label=above:$I$] (dom)
      ++(0,-2) coordinate[label=below:$X$] (cod)
      ++(1,0) coordinate (se)
      ;
    \draw [spath/save=line] (dom) to (cod);
    \path 
      coordinate[dot,label=left:$j$] (cell1) at (spath cs:line 0.33)
      coordinate[dot,label=left:$s_{X}$] (cell2) at (spath cs:line 0.66)
      ;
    \begin {scope}[on background layer]
      \fill [catc] (dom) to (cod) to (se) to (nw -| se) to cycle;
      
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li></html:ol>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2023</fr:year>
                      <fr:month>11</fr:month>
                      <fr:day>5</fr:day>
                    </fr:date>
                    <fr:uri>https://www.jonmsterling.com/jms-00D9/</fr:uri>
                    <fr:display-uri>jms-00D9</fr:display-uri>
                    <fr:route>/jms-00D9/</fr:route>
                    <fr:title text="From successor algebra homomorphisms to weak algebra homomorphisms">From <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra</fr:link> homomorphisms to <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local">weak algebra</fr:link> <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">homomorphisms</fr:link></fr:title>
                    <fr:taxon>Lemma</fr:taxon>
                    <fr:meta name="source">
                      <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">[joyal-moerdijk-1995]</fr:link>
                    </fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[\mathbb {T} \equiv {\mathopen {}\left (T,\eta ,\mu \right )\mathclose {}}]]></fr:tex> be a monad on a category <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex> and let <fr:tex display="inline"><![CDATA[I]]></fr:tex> be an invertible <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local"><html:em>weak</html:em> algebra</fr:link> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex>; let <fr:tex display="inline"><![CDATA[X]]></fr:tex> be an arbitrary <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebra</fr:link>. Then a <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra homomorphism</fr:link> <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{j}}{X}]]></fr:tex> also tracks a weak algebra homomorphism <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{j}}{s\cdot  X}]]></fr:tex>,  where <fr:tex display="inline"><![CDATA[\bar {I}]]></fr:tex> is the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link> of <fr:tex display="inline"><![CDATA[I]]></fr:tex> and <fr:tex display="inline"><![CDATA[s\cdot X]]></fr:tex> is the <fr:link href="/jms-00CC/" title="The successor restriction of a successor algebra" uri="https://www.jonmsterling.com/jms-00CC/" display-uri="jms-00CC" type="local">successor restriction</fr:link> of <fr:tex display="inline"><![CDATA[X]]></fr:tex>.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>11</fr:month><fr:day>5</fr:day></fr:date><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>We work backwards.</html:p>

  <html:ol><html:li>First, we unfold the algebra structure of the <fr:link href="/jms-00CC/" title="The successor restriction of a successor algebra" uri="https://www.jonmsterling.com/jms-00CC/" display-uri="jms-00CC" type="local">successor restriction</fr:link>.

      
 
  
  <html:figure><fr:resource hash="9ba3727af7a6efff0c5a4894b98d12a6"><fr:resource-content><html:img src="/9ba3727af7a6efff0c5a4894b98d12a6.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=right:$\alpha _{s\cdot X}$] (alg) at (spath cs:wire 0.6)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.4)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

        $\equiv $
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.3)
      coordinate[dot,label=below:$s_{X}$] (s) at (spath cs:wire 0.5)
      coordinate[dot,label=right:$\alpha _{X}$] (alg) at (spath cs:wire 0.75)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(s)(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>We then use the <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra homomorphism</fr:link> property of <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{j}}{X}]]></fr:tex>.

      
 
  
  <html:figure><fr:resource hash="ed4ad00e8935810777b822cf8d931716"><fr:resource-content><html:img src="/ed4ad00e8935810777b822cf8d931716.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.3)
      coordinate[dot,label=below:$s_{X}$] (s) at (spath cs:wire 0.5)
      coordinate[dot,label=right:$\alpha _{X}$] (alg) at (spath cs:wire 0.75)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(s)(j)]{};
        
    \end {scope}
  \end {tikzpicture}

        $=$
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=right:$\alpha _{X}$] (alg) at (spath cs:wire 0.75)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.5)
      coordinate[dot,label=below:$s_{\bar {I}}$] (s) at (spath cs:wire 0.3)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(s)(j)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>Next we use the <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">algebra homomorphism</fr:link> property of <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{j}}{X}]]></fr:tex>.

      
 
  
  <html:figure><fr:resource hash="e533d28ac878c0925d9edfdfc4cfcaa7"><fr:resource-content><html:img src="/e533d28ac878c0925d9edfdfc4cfcaa7.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=right:$\alpha _{X}$] (alg) at (spath cs:wire 0.75)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.5)
      coordinate[dot,label=below:$s_{\bar {I}}$] (s) at (spath cs:wire 0.3)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(j)(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

        $=$
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{\bar {I}}$] (alg) at (spath cs:wire 0.5)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.75)
      coordinate[dot,label=below:$s_{\bar {I}}$] (s) at (spath cs:wire 0.3)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(j)(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>We unfold the definition of the <fr:link href="/jms-00CD/" title="The induced monad algebra" uri="https://www.jonmsterling.com/jms-00CD/" display-uri="jms-00CD" type="local">induced monad algebra</fr:link>.

      
 
  
  <html:figure><fr:resource hash="b435de841a988807c85b63539b724e8f"><fr:resource-content><html:img src="/b435de841a988807c85b63539b724e8f.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{\bar {I}}$] (alg) at (spath cs:wire 0.5)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.75)
      coordinate[dot,label=below:$s_{\bar {I}}$] (s) at (spath cs:wire 0.3)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

        $\equiv $
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (5,-5) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=left:$s_{\bar {I}}$] (s) at (spath cs:wire 0.2)
      coordinate[dot,label=left:$\pi _{I}$] (pi) at level (spath cs:wire 0.4)
      coordinate[dot,label=right:$\alpha _{I}$] (alg) at (spath cs:wire 0.75)
      coordinate[dot,label=right:$j$] (j) at (spath cs:wire 0.9)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
      (alg) ++ (0,.75) coordinate[dot,label=right:$\mu $] (mul)
    ;
    \draw  (n/T) to (alg.center);
    \draw  (pi.center) to (mul.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(pi)(mul)(alg)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>We unfold the successor map on the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link>.

      
 
  
  <html:figure><fr:resource hash="5b1e016f895b3569865089bf71890e98"><fr:resource-content><html:img src="/5b1e016f895b3569865089bf71890e98.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (5,-5) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=left:$s_{\bar {I}}$] (s) at (spath cs:wire 0.2)
      coordinate[dot,label=left:$\pi _{I}$] (pi) at level (spath cs:wire 0.4)
      coordinate[dot,label=right:$\alpha _{I}$] (alg) at (spath cs:wire 0.75)
      coordinate[dot,label=right:$j$] (j) at (spath cs:wire 0.9)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
      (alg) ++ (0,.75) coordinate[dot,label=right:$\mu $] (mul)
    ;
    \draw  (n/T) to (alg.center);
    \draw  (pi.center) to (mul.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(s)]{};
        
    \end {scope}
  \end {tikzpicture}

        $\equiv $
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (5,-5) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{I}$] (alg0) at (spath cs:wire 0.25)
      coordinate[dot,label=below:$\pi _{I}$] (pi) at level (spath cs:wire 0.4)
      coordinate[dot,label=right:$\alpha _{I}$] (alg1) at (spath cs:wire 0.75)
      coordinate[dot,label=right:$j$] (j) at (spath cs:wire 0.9)
      coordinate[label=above:$T$] (n/T) at (nw -| alg1)
      (alg1) ++ (0,.75) coordinate[dot,label=right:$\mu $] (mul)
      (alg0) ++(0,0.75) coordinate[dot,label=right:$\eta $] (unit)
    ;
    \draw  (n/T) to (alg1.center);
    \draw  (unit.center) to (alg0.center);
    \draw  (pi.center) to (mul.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(alg0)(unit)]{};
        
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>We contract the composition of the initial (weak) algebra map with its inverse.

      
 
  
  <html:figure><fr:resource hash="d05ea54fe3146d2498791e11b46d449c"><fr:resource-content><html:img src="/d05ea54fe3146d2498791e11b46d449c.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (5,-5) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{I}$] (alg0) at (spath cs:wire 0.25)
      coordinate[dot,label=below:$\pi _{I}$] (pi) at level (spath cs:wire 0.4)
      coordinate[dot,label=right:$\alpha _{I}$] (alg1) at (spath cs:wire 0.75)
      coordinate[dot,label=right:$j$] (j) at (spath cs:wire 0.9)
      coordinate[label=above:$T$] (n/T) at (nw -| alg1)
      (alg1) ++ (0,.75) coordinate[dot,label=right:$\mu $] (mul)
      (alg0) ++(0,0.75) coordinate[dot,label=right:$\eta $] (unit)
    ;
    \draw  (n/T) to (alg1.center);
    \draw  (unit.center) to (alg0.center);
    \draw  (pi.center) to (mul.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(alg0)(pi)]{};
        
    \end {scope}
  \end {tikzpicture}

        $=$
        
   \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (4,-5) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{I}$] (alg) at (spath cs:wire 0.6)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.75)
      (alg) ++ (0,.75) coordinate[dot,label=above:$\mu $] (mul)
      + (-1,1) coordinate[dot,label=above:$\eta $] (unit)
      + (1,1) coordinate (ne-of-mul)
      coordinate[label=above:$T$] (n/T) at (nw -| ne-of-mul)
    ;
   \draw  (n/T) to (ne-of-mul.center) to[out=270,in=0] (mul.center);
    \draw  (unit.center) to[out=-90,in=-180] (mul.center);
    \draw  (mul.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li>

    <html:li>Finally, we use the unit law of the monad <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex>.

      
 
  
  <html:figure><fr:resource hash="1564fb6a4db343194541460f0164b9df"><fr:resource-content><html:img src="/1564fb6a4db343194541460f0164b9df.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
        
   \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (4,-5) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{I}$] (alg) at (spath cs:wire 0.6)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.75)
      (alg) ++ (0,.75) coordinate[dot,label=above:$\mu $] (mul)
      + (-1,1) coordinate[dot,label=above:$\eta $] (unit)
      + (1,1) coordinate (ne-of-mul)
      coordinate[label=above:$T$] (n/T) at (nw -| ne-of-mul)
    ;
   \draw  (n/T) to (ne-of-mul.center) to[out=270,in=0] (mul.center);
    \draw  (unit.center) to[out=-90,in=-180] (mul.center);
    \draw  (mul.center) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
          \node [blue halo,fit=(mul)(unit)]{};
        
    \end {scope}
  \end {tikzpicture}

        $=$
        
  \begin {tikzpicture}[scale=0.5,baseline=($(nw)!0.5!(se)$)]
    \path 
      coordinate (nw)
      ++ (1,0) coordinate[label=above:$I$] (n/I)
      ++ (3,-3) coordinate[label=below:$X$] (s/X)
      ++ (1,0) coordinate (se)
    ;
    \draw [spath/save=wire] (n/I) to[out=-90,in=90] (s/X);
    \path 
      coordinate[dot,label=below:$\alpha _{I}$] (alg) at (spath cs:wire 0.4)
      coordinate[dot,label=below:$j$] (j) at (spath cs:wire 0.6)
      coordinate[label=above:$T$] (n/T) at (nw -| alg)
    ;
    \draw  (n/T) to (alg.center);
    \begin {scope}[on background layer]
      \fill [catc] (n/I) to[spath/use={wire,weld}] (s/X) to (se) to (nw -| se) to cycle;
      
    \end {scope}
  \end {tikzpicture}

      ]]></fr:resource-source></fr:resource></html:figure></html:li></html:ol>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2023</fr:year>
                      <fr:month>11</fr:month>
                      <fr:day>5</fr:day>
                    </fr:date>
                    <fr:uri>https://www.jonmsterling.com/jms-00DA/</fr:uri>
                    <fr:display-uri>jms-00DA</fr:display-uri>
                    <fr:route>/jms-00DA/</fr:route>
                    <fr:title text="Weak algebra homomorphisms and successor algebra homomorphisms are interchangeable">Weak algebra <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local">homomorphisms</fr:link> and <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra homomorphisms</fr:link> are interchangeable</fr:title>
                    <fr:taxon>Corollary</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex> be a monad on a category <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex> and let <fr:tex display="inline"><![CDATA[I]]></fr:tex> be an invertible <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local"><html:em>weak</html:em> algebra</fr:link> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex>; let <fr:tex display="inline"><![CDATA[X]]></fr:tex> be an arbitrary <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebra</fr:link>. Then a morphism <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{j}}{X}]]></fr:tex> in <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex> tracks a weak algebra homomorphism <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{j}}{s\cdot  X}]]></fr:tex> if and only if it tracks a <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra homomorphism</fr:link> <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{j}}{X}]]></fr:tex>, where <fr:tex display="inline"><![CDATA[\bar {I}]]></fr:tex> is the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link> of <fr:tex display="inline"><![CDATA[I]]></fr:tex> and <fr:tex display="inline"><![CDATA[s\cdot X]]></fr:tex> is the <fr:link href="/jms-00CC/" title="The successor restriction of a successor algebra" uri="https://www.jonmsterling.com/jms-00CC/" display-uri="jms-00CC" type="local">successor restriction</fr:link> of <fr:tex display="inline"><![CDATA[X]]></fr:tex>.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>11</fr:month><fr:day>5</fr:day></fr:date><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>This follows from the following two lemmas:</html:p>
  <html:ol><html:li><fr:link href="/jms-00CR/" title="Lifting homomorphisms to the induced successor algebra" uri="https://www.jonmsterling.com/jms-00CR/" display-uri="jms-00CR" type="local">Lifting <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">homomorphisms</fr:link> to the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link></fr:link>;</html:li>
    <html:li><fr:link href="/jms-00D9/" title="From successor algebra homomorphisms to weak algebra homomorphisms" uri="https://www.jonmsterling.com/jms-00D9/" display-uri="jms-00D9" type="local">From <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra</fr:link> homomorphisms to <fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local">weak algebra</fr:link> <fr:link href="/jms-00C7/" title="Homomorphism of algebras" uri="https://www.jonmsterling.com/jms-00C7/" display-uri="jms-00C7" type="local">homomorphisms</fr:link></fr:link>.</html:li></html:ol>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2023</fr:year>
                  <fr:month>11</fr:month>
                  <fr:day>5</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/jms-00D8/</fr:uri>
                <fr:display-uri>jms-00D8</fr:display-uri>
                <fr:route>/jms-00D8/</fr:route>
                <fr:title text="From initial weak algebras to initial successor algebras">From initial <fr:link href="/jms-00CD/" title="The induced monad algebra" uri="https://www.jonmsterling.com/jms-00CD/" display-uri="jms-00CD" type="local">weak algebras</fr:link> to initial <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebras</fr:link></fr:title>
                <fr:taxon>Theorem</fr:taxon>
                <fr:meta name="source">
                  <fr:link href="/joyal-moerdijk-1995/" title="Algebraic set theory" uri="https://www.jonmsterling.com/joyal-moerdijk-1995/" display-uri="joyal-moerdijk-1995" type="local">[joyal-moerdijk-1995]</fr:link>
                </fr:meta>
              </fr:frontmatter>
              <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[I]]></fr:tex> be the initial weak algebra for a monad <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex> on a category <fr:tex display="inline"><![CDATA[\mathcal {C}]]></fr:tex>. Then the <fr:link href="/jms-00CN/" title="The induced successor algebra on a fixed point" uri="https://www.jonmsterling.com/jms-00CN/" display-uri="jms-00CN" type="local">induced successor algebra</fr:link> <fr:tex display="inline"><![CDATA[\bar {I}]]></fr:tex> is the <html:em>initial</html:em> <fr:link href="/jms-00C9/" title="Successor algebra" uri="https://www.jonmsterling.com/jms-00C9/" display-uri="jms-00C9" type="local">successor algebra</fr:link> for <fr:tex display="inline"><![CDATA[\mathbb {T}]]></fr:tex>.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>11</fr:month><fr:day>5</fr:day></fr:date><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>Let <fr:tex display="inline"><![CDATA[X]]></fr:tex> be a successor algebra; <fr:link href="/jms-00CR/" title="Lifting homomorphisms to the induced successor algebra" uri="https://www.jonmsterling.com/jms-00CR/" display-uri="jms-00CR" type="local">we have shown</fr:link> that weak algebra homomorphism <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{\iota }}{s\cdot X}]]></fr:tex> from <fr:tex display="inline"><![CDATA[I]]></fr:tex> to the <fr:link href="/jms-00CC/" title="The successor restriction of a successor algebra" uri="https://www.jonmsterling.com/jms-00CC/" display-uri="jms-00CC" type="local">successor restriction</fr:link> of <fr:tex display="inline"><![CDATA[X]]></fr:tex> also tracks a successor algebra homomorphism <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{\iota }}{X}]]></fr:tex>. To see that this homomorphism is <html:em>unique</html:em>, fix any <fr:link href="/jms-00CA/" title="Homomorphism of successor algebras" uri="https://www.jonmsterling.com/jms-00CA/" display-uri="jms-00CA" type="local">successor algebra homomorphism</fr:link> <fr:tex display="inline"><![CDATA[{\bar {I}}\xrightarrow {{j}}{X}]]></fr:tex>; we <fr:link href="/jms-00D9/" title="From successor algebra homomorphisms to weak algebra homomorphisms" uri="https://www.jonmsterling.com/jms-00D9/" display-uri="jms-00D9" type="local">have also shown</fr:link> that such a homomorphism also tracks a (<fr:link href="/jms-00C8/" title="Weak algebra for a monad" uri="https://www.jonmsterling.com/jms-00C8/" display-uri="jms-00C8" type="local">weak algebra</fr:link>) homomorphism <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{j}}{s\cdot X}]]></fr:tex>. But <fr:tex display="inline"><![CDATA[{I}\xrightarrow {{\iota }}{s\cdot X}]]></fr:tex> is the such weak algebra homomorphism, so we have <fr:tex display="inline"><![CDATA[\iota  = j]]></fr:tex>.</html:p>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
            </fr:tree>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>9</fr:month>
              <fr:day>15</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-0091/</fr:uri>
            <fr:display-uri>jms-0091</fr:display-uri>
            <fr:route>/jms-0091/</fr:route>
            <fr:title text="Jack Romo on homotopy bicategories of complete 2-fold Segal spaces"><fr:link href="/jackromo/" title="Jack Romo" uri="https://www.jonmsterling.com/jackromo/" display-uri="jackromo" type="local">Jack Romo</fr:link> on homotopy bicategories of complete 2-fold Segal spaces</fr:title>
            <fr:meta name="venue">
              <fr:link href="/yamcats-32/" title="Yorkshire and Midlands Category Theory Seminar 32" uri="https://www.jonmsterling.com/yamcats-32/" display-uri="yamcats-32" type="local">Yorkshire and Midlands Category Theory Seminar 32</fr:link>
            </fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p><fr:link href="/jackromo/" title="Jack Romo" uri="https://www.jonmsterling.com/jackromo/" display-uri="jackromo" type="local">Jack Romo</fr:link> gave a talk about <html:em>homotopy bicategories of complete 2-fold Segal spaces</html:em>. The goal of the work is to convert (∞,2)-categories to their (homotopy) bicategories; he has managed to define the homotopy bicategory, but I believe it is not yet functorial (part of the problem is to find the appropriate “category” for the domain of this “functor”).</html:p>
            <html:p>The model of  (∞,2)-category used is <html:em>complete 2-fold Segal space</html:em>, which is like an iteration of the Segal conditions. A complete Segal space is a simplicial diagram of (∞,1)-groupoids satisfying certain lifting conditions — the Segal condition says the projection of n-simplices to their “spines” should be a trivial fibration (contractible fibers!) A complete 2-fold Segal space is a simplicial diagram of complete Segal spaces satisfying similar conditions.</html:p>
            <html:p>Computing the homotopy bicategory is non-trivial as various properties (existence of certainly lifts in the complete 2-fold Segal space) must be converted into structure (explicit associators, etc.). <fr:link href="/jackromo/" title="Jack Romo" uri="https://www.jonmsterling.com/jackromo/" display-uri="jackromo" type="local">Jack</fr:link> is using an unbiased definition of bicategory due to <fr:link href="/tomleinster/" title="Tom Leinster" uri="https://www.jonmsterling.com/tomleinster/" display-uri="tomleinster" type="local">Tom Leinster</fr:link> that is known to be equivalent to the bicategories of <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Jean Bénabou</fr:link>.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>1</fr:month>
              <fr:day>19</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-0011/</fr:uri>
            <fr:display-uri>jms-0011</fr:display-uri>
            <fr:route>/jms-0011/</fr:route>
            <fr:title text="Chapter 3: the theory of universes">Chapter 3: the theory of universes</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>Universes started their life in the <fr:link href="/sga-4/" title="Théorie des topos et cohomologie étale des schémas (SGA 4)" uri="https://www.jonmsterling.com/sga-4/" display-uri="sga-4" type="local">Grothendieck school of algebraic geometry</fr:link> as a technical device to circumvent the annoyance that there cannot be a “set of all sets”; a universe is a set of enough sets, and whilst a universe cannot contain itself, it may nonetheless lie within an even bigger universe. Several important developments in the theory of universes from the 1970s onward by <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link>, <fr:link href="/permartinl%C3%B6f/" title="Per Martin-Löf" uri="https://www.jonmsterling.com/permartinlöf/" display-uri="permartinlöf" type="local">Martin-Löf</fr:link>, <fr:link href="/peterdybjer/" title="Peter Dybjer" uri="https://www.jonmsterling.com/peterdybjer/" display-uri="peterdybjer" type="local">Dybjer</fr:link>, <fr:link href="/martinhofmann/" title="Martin Hofmann" uri="https://www.jonmsterling.com/martinhofmann/" display-uri="martinhofmann" type="local">Hofmann</fr:link>, <fr:link href="/thomasstreicher/" title="Thomas Streicher" uri="https://www.jonmsterling.com/thomasstreicher/" display-uri="thomasstreicher" type="local">Streicher</fr:link>, <fr:link href="/steveawodey/" title="Steve Awodey" uri="https://www.jonmsterling.com/steveawodey/" display-uri="steveawodey" type="local">Awodey</fr:link>, and others have collided to deliver the present-day understanding of the centrality of universes in semantics: a model of type theory is just a special kind of universe in a special kind of category. This chapter provides expository background on the theory of universes, including a novel account of open and closed subuniverses to reflect the recollement theory of topoi from <fr:link href="/jms-0010/" title="Chapter 2: the language of topoi" uri="https://www.jonmsterling.com/jms-0010/" display-uri="jms-0010" type="local">Chapter 2</fr:link>. These open and closed subuniverses will play a critical role in the development of synthetic Tait computability in subsequent chapters.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/thomasstreicher/" title="Thomas Streicher" uri="https://www.jonmsterling.com/thomasstreicher/" display-uri="thomasstreicher" type="local">Thomas Streicher</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2022</fr:year>
              <fr:month>12</fr:month>
              <fr:day>16</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/streicher-fcjb/</fr:uri>
            <fr:display-uri>streicher-fcjb</fr:display-uri>
            <fr:route>/streicher-fcjb/</fr:route>
            <fr:title text="Fibred categories à la Jean Bénabou">Fibred categories à la <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Jean Bénabou</fr:link></fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="bibtex"><![CDATA[@unpublished{streicher-fcjb,
  author = {Streicher, Thomas},
  year = {2021},
  eprint = {1801.02927},
  eprintclass = {math.CT},
  eprinttype = {arXiv},
  title = {Fibered Categories \`{a} la {Jean B\'{e}nabou}},
}]]></fr:meta>
            <fr:meta name="doi">10.48550/arXiv.1801.02927</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>These are notes about the theory of Fibred Categories as I have learned it from <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Jean Bénabou</fr:link>. I also have used results from the Thesis of Jean-Luc Moens from 1982 in those sections where I discuss the fibered view of geometric morphisms. Thus, almost all of the contents is not due to me but most of it cannot be found in the literature since <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link> has given many talks on it but most of his work on fibered categories is unpublished. But I am solely responsible for the mistakes and for misrepresentations of his views. And certainly these notes do not cover all the work he has done on fibered categories. I just try to explain the most important notions he has come up with in a way trying to be as close as possible to his intentions and intuitions. I started these notes in 1999 when I gave a course on some of the material at a workshop in Munich. They have developed quite a lot over the years and I have tried to include most of the things I want to remember.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:uri>https://www.jonmsterling.com/frct-002L/</fr:uri>
            <fr:display-uri>frct-002L</fr:display-uri>
            <fr:route>/frct-002L/</fr:route>
            <fr:title text="Definable classes à la Bénabou">Definable classes à la <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link></fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>A class of sets <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is sometimes said to be <html:em>formally definable</html:em> when there is a formula <fr:tex display="inline"><![CDATA[{\mathopen {}\left (x \mid  \phi _{\mathfrak {C} {\mathopen {}\left (x\right )\mathclose {}}}\right )\mathclose {}}]]></fr:tex> in the language of set theory such that a set <fr:tex display="inline"><![CDATA[S]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> if and only if <fr:tex display="inline"><![CDATA[\phi _{\mathfrak {C}}{\mathopen {}\left (S\right )\mathclose {}}]]></fr:tex> holds. This concept is a bit sensitive, as it presupposes that we have a notion of “class” whose constituents are not
all definable in this sense.</html:p>
            <html:p>A better behaved notion of definability for sets than the formal one is
given <html:em>model-theoretically</html:em>, i.e. relative to a model <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> of set
theory in some ambient set theory. We will refer to
an element of <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> as a set, and a subcollection of <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex>
as a class.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002U/</fr:uri>
                <fr:display-uri>frct-002U</fr:display-uri>
                <fr:route>/frct-002U/</fr:route>
                <fr:title text="Representable class of sets">Representable class of sets</fr:title>
                <fr:taxon>Definition</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>A class of sets <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> is called <html:em>representable</html:em> when there is a set <fr:tex display="inline"><![CDATA[C\in \mathscr {M}]]></fr:tex> such that <fr:tex display="inline"><![CDATA[U\in  C]]></fr:tex> if and only if <fr:tex display="inline"><![CDATA[U\in \mathfrak {C}]]></fr:tex>.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002V/</fr:uri>
                <fr:display-uri>frct-002V</fr:display-uri>
                <fr:route>/frct-002V/</fr:route>
                <fr:title text="Definable class of sets">Definable class of sets</fr:title>
                <fr:taxon>Definition</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>A class of sets <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> is called <html:em>definable</html:em> when for any representable class <fr:tex display="inline"><![CDATA[\mathfrak {S}]]></fr:tex>, the class <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {S}]]></fr:tex> is representable.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <html:p>Bénabou then generalizes these definitions to an arbitrary fibration, in such a way that the general fibered notion of definable class is equivalent in the fundamental self-indexing <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> to that of <fr:link href="/frct-002V/" title="Definable class of sets" uri="https://www.jonmsterling.com/frct-002V/" display-uri="frct-002V" type="local">definable classes</fr:link>.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:uri>https://www.jonmsterling.com/frct-002Q/</fr:uri>
                <fr:display-uri>frct-002Q</fr:display-uri>
                <fr:route>/frct-002Q/</fr:route>
                <fr:title text="Set-theoretic intuition for Bénabou's definability">Set-theoretic intuition for <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link>'s definability</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>To motivate Bénabou’s general notion of definability, we will first develop an alternative perspective on definability for classes of sets in terms of <html:em>families</html:em> of sets.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002M/</fr:uri>
                    <fr:display-uri>frct-002M</fr:display-uri>
                    <fr:route>/frct-002M/</fr:route>
                    <fr:title text="Closure of a class of sets under base change">Closure of a class of sets under base change</fr:title>
                    <fr:taxon>Construction</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Let <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> be a class of sets; there exists a class <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> of <html:em>families</html:em>
of sets that contains <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> exactly when each
<fr:tex display="inline"><![CDATA[S_{i}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>. We will refer to <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> as the <html:em>closure under base change</html:em> of <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>, a name motivated by the fact that when <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>,
then for any <fr:tex display="inline"><![CDATA[u:J\to  I]]></fr:tex>, the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{uj}\right )\mathclose {}}_{j\in  J}]]></fr:tex> also lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002N/</fr:uri>
                    <fr:display-uri>frct-002N</fr:display-uri>
                    <fr:route>/frct-002N/</fr:route>
                    <fr:title text="From classes of families to classes of sets">From classes of families to classes of sets</fr:title>
                    <fr:taxon>Construction</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Conversely to <fr:link href="/frct-002M/" title="Closure of a class of sets under base change" uri="https://www.jonmsterling.com/frct-002M/" display-uri="frct-002M" type="local">the closure of a class of sets under change of base</fr:link>, we may take a class of <html:em>families</html:em> of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> to the the class of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}_{1}\subseteq {\mathscr {M}}]]></fr:tex> spanned by sets <fr:tex display="inline"><![CDATA[S]]></fr:tex> such that the singleton family <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{S\right \}\mathclose {}}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002P/</fr:uri>
                    <fr:display-uri>frct-002P</fr:display-uri>
                    <fr:route>/frct-002P/</fr:route>
                    <fr:title text="Definable class of families of sets">Definable class of families of sets</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>A class of families of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> is said to be <html:em>definable</html:em> when it is stable and moreover, for any family of sets <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex>, there exists a subset <fr:tex display="inline"><![CDATA[J\subseteq  I]]></fr:tex> such that the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{j}\right )\mathclose {}}_{j\in  J}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex>, and moreover, such that <fr:tex display="inline"><![CDATA[u:K\to  I]]></fr:tex> factors through <fr:tex display="inline"><![CDATA[J\subseteq  I]]></fr:tex> whenever the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{uk}\right )\mathclose {}}_{k\in  K}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002R/</fr:uri>
                    <fr:display-uri>frct-002R</fr:display-uri>
                    <fr:route>/frct-002R/</fr:route>
                    <fr:taxon>Intuition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>A stable class of families of sets is definable when any family of sets can be restricted to a “biggest” subfamily that lies in the class.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002T/</fr:uri>
                    <fr:display-uri>frct-002T</fr:display-uri>
                    <fr:route>/frct-002T/</fr:route>
                    <fr:title text="Characterization of definable classes of families">Characterization of definable classes of families</fr:title>
                    <fr:taxon>Lemma</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> be a class of sets; then <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets if and only if <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a definable class of sets.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors /><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>Suppose that <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a definable class of sets. To
  check that <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets,
  we fix a family <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> not necessarily lying in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>. Because <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is definable, the intersection <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap  \bigcup _{i\in  I}S_{i}]]></fr:tex> is represented by a set <fr:tex display="inline"><![CDATA[U]]></fr:tex>. We therefore take the subset <fr:tex display="inline"><![CDATA[J = {\mathopen {}\left \{i \in  I\mid  S_i\in  U\right \}\mathclose {}}\subseteq  I]]></fr:tex>, and verify that the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{j}\right )\mathclose {}}_{j\in  J}]]></fr:tex> is the largest approximation of <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> by a family lying in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>.</html:p>

  <html:p>Conversely suppose that <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets. To see that <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is definable, we fix a class <fr:tex display="inline"><![CDATA[\mathfrak {U}]]></fr:tex> represented by a set <fr:tex display="inline"><![CDATA[U\in \mathscr {M}]]></fr:tex> to check that <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {U}]]></fr:tex> is representable. We consider the family of sets <fr:tex display="inline"><![CDATA[{\mathopen {}\left (u\right )\mathclose {}}_{u\in  U}]]></fr:tex>; because <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is definable, there is a largest subset <fr:tex display="inline"><![CDATA[V\subseteq  U]]></fr:tex> such that the change of base <fr:tex display="inline"><![CDATA[{\mathopen {}\left (v\right )\mathclose {}}_{v\in  V}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>, i.e. such that each <fr:tex display="inline"><![CDATA[v\in  V]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>. Therefore <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {U}]]></fr:tex> is represented by the set <fr:tex display="inline"><![CDATA[V]]></fr:tex>.</html:p>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:uri>https://www.jonmsterling.com/frct-002S/</fr:uri>
                <fr:display-uri>frct-002S</fr:display-uri>
                <fr:route>/frct-002S/</fr:route>
                <fr:title text="Bénabou’s notion of definability">Bénabou’s notion of definability</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>We will now construe <fr:link href="/frct-002Q/" title="Set-theoretic intuition for Bénabou's definability" uri="https://www.jonmsterling.com/frct-002Q/" display-uri="frct-002Q" type="local">set-theoretic definability</fr:link> as the instantiation at the fundamental self-indexing <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> of a more general notion of definability for classes of objects in a cartesian fibration, defined forthwith. The following definition of definability in a cartesian fibration is due to Bénabou, but is discussed in print by <fr:link href="/borceux-hca-2/" title="Handbook of categorical algebra 2: categories and structures" uri="https://www.jonmsterling.com/borceux-hca-2/" display-uri="borceux-hca-2" type="local">Borceux</fr:link>, <fr:link href="/jacobs-1999/" title="Categorical logic and type theory" uri="https://www.jonmsterling.com/jacobs-1999/" display-uri="jacobs-1999" type="local">Jacobs</fr:link>, and <fr:link href="/streicher-fcjb/" title="Fibred categories à la Jean Bénabou" uri="https://www.jonmsterling.com/streicher-fcjb/" display-uri="streicher-fcjb" type="local">Streicher</fr:link>.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:uri>https://www.jonmsterling.com/frct-002W/</fr:uri>
                    <fr:display-uri>frct-002W</fr:display-uri>
                    <fr:route>/frct-002W/</fr:route>
                    <fr:title text="Definable class in a fibration">Definable class in a fibration</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be a cartesian fibration over <fr:tex display="inline"><![CDATA[B]]></fr:tex>. A <html:em>definable class</html:em> <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex> is a stable subcollection of the displayed objects of <fr:tex display="inline"><![CDATA[E]]></fr:tex> such that for any <fr:tex display="inline"><![CDATA[\bar {u}\in  E_{u}]]></fr:tex>, there exists a cartesian map <fr:tex display="inline"><![CDATA[\bar {v}\to  \bar {u}]]></fr:tex> lying over a monomorphism <fr:tex display="inline"><![CDATA[v\rightarrowtail  u]]></fr:tex> such that <fr:tex display="inline"><![CDATA[\bar {v}\in  \mathfrak {F}]]></fr:tex> and, moreover, any cartesian morphism <fr:tex display="inline"><![CDATA[\bar {w}\to \bar {u}]]></fr:tex> such that <fr:tex display="inline"><![CDATA[\bar {w}\in \mathfrak {F}]]></fr:tex> factors through <fr:tex display="inline"><![CDATA[\bar {v}\to \bar {u}]]></fr:tex>.</html:p>
 
  
  <html:figure><fr:resource hash="e7463183c4e17176f720bc881da96753"><fr:resource-content><html:img src="/e7463183c4e17176f720bc881da96753.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \DiagramSquare {
    height = 1.5cm,
    west/style = lies over,
    east/style = lies over,
    nw/style = pullback,
    south/style = {exists,>->},
    north/style = {->,exists},
    nw = \bar {v}\in \mathfrak {F},
    ne = \bar {u},
    se = u,
    sw = v,
  }
  \qquad 
  \begin {tikzpicture}[diagram,baseline=(l/sw.base)]
    \SpliceDiagramSquare <l/>{
      height = 1.5cm,
      width = 2.25cm,
      west/style = lies over,
      east/style = lies over,
      ne/style = pullback,
      nw = \bar {w}\in \mathfrak {F},
      sw = w,
      ne = \bar {v},
      se = v,
      south/style = {->,exists},
      north/style = {->,exists},
      south = \exists !,
      north = \exists !,
      north/node/style = upright desc,
    }
    \SpliceDiagramSquare <r/>{
      height = 1.5cm,
      glue = west,
      glue target = l/,
      east/style = lies over,
      south/style = >->,
      ne = \bar {u},
      se = u,
    }
    \draw [->,bend left=30] (l/nw) to node [above] {cart.} (r/ne);
  \end {tikzpicture}
]]></fr:resource-source></fr:resource></html:figure>
 
</fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:uri>https://www.jonmsterling.com/frct-002O/</fr:uri>
                    <fr:display-uri>frct-002O</fr:display-uri>
                    <fr:route>/frct-002O/</fr:route>
                    <fr:taxon>Remark</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Let <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> be a model of <fr:link href="/lawvere-1964-etcs/" title="An elementary theory of the category of sets" uri="https://www.jonmsterling.com/lawvere-1964-etcs/" display-uri="lawvere-1964-etcs" type="local">ETCS</fr:link>; and let <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> be a class of families of sets in <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex>. Then <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a class of objects in the fundamental self-indexing <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> over <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex>. Furthermore, <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> a <fr:link href="/frct-002W/" title="Definable class in a fibration" uri="https://www.jonmsterling.com/frct-002W/" display-uri="frct-002W" type="local">definable class</fr:link> in <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> if and only if it is a <fr:link href="/frct-002P/" title="Definable class of families of sets" uri="https://www.jonmsterling.com/frct-002P/" display-uri="frct-002P" type="local">definable class of families of sets</fr:link>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:uri>https://www.jonmsterling.com/frct-000Q/</fr:uri>
            <fr:display-uri>frct-000Q</fr:display-uri>
            <fr:route>/frct-000Q/</fr:route>
            <fr:title text="Opposite categories">Opposite categories</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>We adapt <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link>’s construction as reported by <fr:link href="/streicher-fcjb/" title="Fibred categories à la Jean Bénabou" uri="https://www.jonmsterling.com/streicher-fcjb/" display-uri="streicher-fcjb" type="local">Streicher</fr:link>. Our <fr:link href="/frct-001Z/" title="The opposite of an uncloven fibration" uri="https://www.jonmsterling.com/frct-001Z/" display-uri="frct-001Z" type="local">first construction</fr:link> works for an <fr:link href="/frct-003T/" title="Cleaving of a displayed category" uri="https://www.jonmsterling.com/frct-003T/" display-uri="frct-003T" type="local">uncloven</fr:link> fibration, but it has the downside that it requires us to treat the collection of cartesian lifts as a set that can be quotiented, whereas our <fr:link href="/frct-003W/" title="The opposite of a cloven fibration" uri="https://www.jonmsterling.com/frct-003W/" display-uri="frct-003W" type="local">second construction</fr:link> avoids this by virtue of a <fr:link href="/frct-003T/" title="Cleaving of a displayed category" uri="https://www.jonmsterling.com/frct-003T/" display-uri="frct-003T" type="local">cleaving</fr:link>. Up to equivalence, the two constructions coincide for a cloven fibration, which shows that our second construction is independent of the chosen cleaving.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-001Z/</fr:uri>
                <fr:display-uri>frct-001Z</fr:display-uri>
                <fr:route>/frct-001Z/</fr:route>
                <fr:title text="The opposite of an uncloven fibration">The opposite of an uncloven fibration</fr:title>
                <fr:taxon>Construction</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be fibered over <fr:tex display="inline"><![CDATA[B]]></fr:tex>; we may define the <html:em>opposite</html:em> fibered category <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> over <fr:tex display="inline"><![CDATA[B]]></fr:tex> like so:</html:p>
                <html:ol><html:li>An object of <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}_{x}]]></fr:tex> is given by an object of <fr:tex display="inline"><![CDATA[E_{x}]]></fr:tex>.</html:li>

  <html:li><html:p>Given <fr:tex display="inline"><![CDATA[{x}\xrightarrow {{f}}{y}\in  B]]></fr:tex>, a morphism <fr:tex display="inline"><![CDATA[\bar {x}\xrightarrow [f]{} \bar {y}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> is given in terms of <fr:tex display="inline"><![CDATA[E]]></fr:tex> by a cartesian map <fr:tex display="inline"><![CDATA[{\bar {y}_{x}}\xrightarrow [f]{\bar {y}_{f}}{\bar {y}}]]></fr:tex> together with a <html:em>vertical</html:em> map <fr:tex display="inline"><![CDATA[{\bar {y}_{x}}\xrightarrow [1_{x}]{h}{\bar {x}}]]></fr:tex> as depicted below:</html:p>

    
 
  
  <html:figure><fr:resource hash="805ce463bc5421c7e4cd618a621a3ef0"><fr:resource-content><html:img src="/805ce463bc5421c7e4cd618a621a3ef0.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
      \begin {tikzpicture}[diagram]
        \SpliceDiagramSquare {
          height = 1.5cm,
          nw/style = pullback,
          west/style = lies over,
          east/style = lies over,
          north = \bar {y}_{f},
          south = f,
          nw = \bar {y}_{x},
          ne = \bar {y},
          sw = x,
          se = y
        }
        \node  (x*) [left = of nw] {$\bar {x}$};
        \node  (x) [left = of sw] {$x$};
        \draw [->] (nw) to node [above] {$h$} (x*);
        \draw [lies over] (x*) to (x);
        \draw [double] (x) to (sw);
      \end {tikzpicture}
    ]]></fr:resource-source></fr:resource></html:figure>
 


    <html:p>such that <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{\bar {x} \leftarrow  \bar {y}_{x}^{1}\to  \bar {y}\right \}\mathclose {}}]]></fr:tex> is identified with <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{\bar {x}\leftarrow \bar {y}_{x}^{2}\to  \bar {y}\right \}\mathclose {}}]]></fr:tex> when they agree up to the unique vertical isomorphism <fr:tex display="inline"><![CDATA[\bar {y}_{x}^{1}\cong \bar {y}_{x}^{2}]]></fr:tex> induced by the universal property of cartesian maps in the sense that the following diagram commutes:</html:p>

    
 
  
  <html:figure><fr:resource hash="3132c77a7b7017074ac0bb5683d43c8f"><fr:resource-content><html:img src="/3132c77a7b7017074ac0bb5683d43c8f.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
      \begin {tikzpicture}[diagram]
        \node  (x) {$\bar {x}$};
        \node  (yx/1) [above right = of x] {$\bar {y}_{x}^{1}$};
        \node  (y) [below right = of yx/1] {$\bar {y}$};
        \node  (yx/2) [below right = of x] {$\bar {y}_{x}^{2}$};
        \draw [->] (yx/1) to node [sloped,above] {vert.} (x);
        \draw [->] (yx/2) to node [sloped,below] {vert.} (x);
        \draw [->] (yx/1) to node [sloped,above] {cart.} (y);
        \draw [->] (yx/2) to node [sloped,below] {cart.} (y);
        \draw [->] (yx/1) to node [upright desc] {$\cong $} (yx/2);
      \end {tikzpicture}
    ]]></fr:resource-source></fr:resource></html:figure></html:li></html:ol>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2023</fr:year>
                  <fr:month>3</fr:month>
                  <fr:day>11</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/frct-003W/</fr:uri>
                <fr:display-uri>frct-003W</fr:display-uri>
                <fr:route>/frct-003W/</fr:route>
                <fr:title text="The opposite of a cloven fibration">The opposite of a cloven fibration</fr:title>
                <fr:taxon>Construction</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be a <fr:link href="/frct-003T/" title="Cleaving of a displayed category" uri="https://www.jonmsterling.com/frct-003T/" display-uri="frct-003T" type="local">cloven fibration</fr:link> over <fr:tex display="inline"><![CDATA[B]]></fr:tex>; in this case, we may use the cleaving of <fr:tex display="inline"><![CDATA[E]]></fr:tex> to give a simple construction of the opposite fibration <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex>.</html:p>
                <html:ol><html:li>A displayed object of <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> over <fr:tex display="inline"><![CDATA[x\in  B]]></fr:tex> is given by an object of <fr:tex display="inline"><![CDATA[E]]></fr:tex> over <fr:tex display="inline"><![CDATA[x]]></fr:tex>.</html:li>
  <html:li>Given <fr:tex display="inline"><![CDATA[{x}\xrightarrow {{f}}{u}\in  B]]></fr:tex>, a displayed morphism <fr:tex display="inline"><![CDATA[\bar {x}\xrightarrow [f]{}\bar {y}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> is given by a vertical map <fr:tex display="inline"><![CDATA[{f^{*}\bar {y}}\xrightarrow [1_{x}]{h}{\bar {x}}]]></fr:tex>.</html:li></html:ol>
              </fr:mainmatter>
            </fr:tree>
            <html:p>Going forward, we will not be sensitive to the difference between the two constructions of opposite fibrations.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-000T/</fr:uri>
                <fr:display-uri>frct-000T</fr:display-uri>
                <fr:route>/frct-000T/</fr:route>
                <fr:title text="Cartesian maps in the opposite category">Cartesian maps in the opposite category</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>There is a simple characterization of cartesian maps in <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex>.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-0020/</fr:uri>
                    <fr:display-uri>frct-0020</fr:display-uri>
                    <fr:route>/frct-0020/</fr:route>
                    <fr:title text="Characterization of cartesian maps">Characterization of cartesian maps</fr:title>
                    <fr:taxon>Lemma</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>A morphism <fr:tex display="inline"><![CDATA[{\bar {x}}\xrightarrow [f]{\bar {f}}{\bar {y}}\in E^{\mathsf {op}}]]></fr:tex> is cartesian over <fr:tex display="inline"><![CDATA[{x}\xrightarrow {{f}}{y}]]></fr:tex> if and only if the vertical leg of <fr:tex display="inline"><![CDATA[f]]></fr:tex> is an isomorphism.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors /><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>Suppose that <fr:tex display="inline"><![CDATA[{\bar {x}}\xrightarrow [f]{\bar {f}}{\bar {y}}]]></fr:tex> is represented by a span <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{\bar {x}\leftarrow \bar {y}_{x}\to \bar {y}\right \}\mathclose {}}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex> in which the vertical leg <fr:tex display="inline"><![CDATA[\bar {x}\leftarrow \bar {y}_{x}]]></fr:tex> is an isomorphism. We must show that <fr:tex display="inline"><![CDATA[{\bar {x}}\xrightarrow [f]{\bar {f}}{\bar {y}}]]></fr:tex> is cartesian in <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex>. We fix a morphism <fr:tex display="inline"><![CDATA[{\bar {w}}\xrightarrow [m;f]{\bar {h}}{\bar {y}}\in  E^{\mathsf {op}}]]></fr:tex> where <fr:tex display="inline"><![CDATA[{w}\xrightarrow {{m}}{x}]]></fr:tex>, depicted below in terms of <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex>:</html:p>

  
 
  
  <html:figure><fr:resource hash="d7d18680e7c74dfa93020fac8e0aae4d"><fr:resource-content><html:img src="/d7d18680e7c74dfa93020fac8e0aae4d.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
    \begin {tikzpicture}[diagram]
      \SpliceDiagramSquare {
        west/style = lies over,
        east/style = lies over,
        north/node/style = upright desc,
        height = 1.5cm,
        nw = \bar {x},
        ne = \bar {y},
        sw = x,
        se = y,
        south = f,
        north = \bar {f},
      }
      \node  (w) [left = of sw] {$w$};
      \node  (w') [left = of nw] {$\bar {w}$};
      \draw [lies over] (w') to (w);
      \draw [->] (w) to node [below] {$m$} (sw);
      \draw [bend left=30] (w') to node [above] {$\bar {h}$} (ne);
    \end {tikzpicture}
  ]]></fr:resource-source></fr:resource></html:figure>
 


  <html:p>We must define the unique intervening map <fr:tex display="inline"><![CDATA[{\bar {w}}\xrightarrow [m]{}{\bar {x}}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex>. We first translate the above into the language of <fr:tex display="inline"><![CDATA[E]]></fr:tex> by unfolding definitions:</html:p>

  
 
  
  <html:figure><fr:resource hash="ec530fe1355e2040dc6c9a7ebf34ecd6"><fr:resource-content><html:img src="/ec530fe1355e2040dc6c9a7ebf34ecd6.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
    \begin {tikzpicture}[diagram]
      \SpliceDiagramSquare <0/>{
        west/style = lies over,
        east/style = lies over,
        north/style = {<-},
        south/style = double,
        height = 1.5cm,
        nw = \bar {w},
        sw = w,
        se = w,
        ne = \bar {y}_{w},
        north = \bar {h},
        ne/style = pullback,
      }
      \SpliceDiagramSquare <1/>{
        glue = west,
        glue target = 0/,
        east/style = lies over,
        height = 1.5cm,
        ne/style = pullback,
        se = x,
        ne = \bar {y}_{x}\cong  \bar {x},
        south = m,
      }
      \SpliceDiagramSquare <2/>{
        glue = west,
        glue target = 1/,
        east/style = lies over,
        height = 1.5cm,
        se = y,
        ne = \bar {y},
        south = f,
        north = \bar {f},
      }
    \end {tikzpicture}
  ]]></fr:resource-source></fr:resource></html:figure>
 


  <html:p>The desired intervening map <fr:tex display="inline"><![CDATA[\bar {w}\xrightarrow [m]{} \bar {x}\in  E^{\mathsf {op}}]]></fr:tex> shakes out in the language of <fr:tex display="inline"><![CDATA[E]]></fr:tex> to be a span <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{\bar {w}\xleftarrow [1_{w}]{} \bar {y}_{w}\xrightarrow [m]{} \bar {x}\right \}\mathclose {}}]]></fr:tex> in which the left-hand leg is vertical and the right-hand leg is cartesian over <fr:tex display="inline"><![CDATA[{w}\xrightarrow {{m}}{x}]]></fr:tex>. But the left-hand span <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{\bar {w}\xleftarrow [1_{w}]{}\bar {y}_{w}\to  \bar {y}_{x}\cong  \bar {x}\right \}\mathclose {}}]]></fr:tex> in the diagram above is exactly what we need.</html:p>

  <html:p>We leave the converse to the reader.</html:p>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-000U/</fr:uri>
                <fr:display-uri>frct-000U</fr:display-uri>
                <fr:route>/frct-000U/</fr:route>
                <fr:title text="Cartesian lifts in the opposite category">Cartesian lifts in the opposite category</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>The foregoing characterization of cartesian maps in <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> immediately implies that <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> is fibered over <fr:tex display="inline"><![CDATA[B]]></fr:tex>.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-0021/</fr:uri>
                    <fr:display-uri>frct-0021</fr:display-uri>
                    <fr:route>/frct-0021/</fr:route>
                    <fr:taxon>Corollary</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>The displayed category <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> is a cartesian fibration.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors /><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>Fixing <fr:tex display="inline"><![CDATA[\bar {y}\in  E^{\mathsf {op}}_{y}]]></fr:tex> and <fr:tex display="inline"><![CDATA[f:x\to  y\in  B]]></fr:tex>, we must
  exhibit a cartesian lift <fr:tex display="inline"><![CDATA[\bar {f} : \bar {x}\xrightarrow [f]{}\bar {y}\in  E^{\mathsf {op}}]]></fr:tex>.
  By the <fr:link href="/frct-000T/" title="Cartesian maps in the opposite category" uri="https://www.jonmsterling.com/frct-000T/" display-uri="frct-000T" type="local">characterization</fr:link> it suffices to find <html:em>any</html:em> map over <fr:tex display="inline"><![CDATA[f]]></fr:tex> whose vertical component is an isomorphism. Writing <fr:tex display="inline"><![CDATA[\bar {y}_{x}\xrightarrow [f]{}\bar {y}]]></fr:tex> for the cartesian lift of <fr:tex display="inline"><![CDATA[f]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex>, consider the map in <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}]]></fr:tex> presented by the following span in <fr:tex display="inline"><![CDATA[E]]></fr:tex>:</html:p>

  
 
  
  <html:figure><fr:resource hash="db61a135f56abc25a2165f9e751e000e"><fr:resource-content><html:img src="/db61a135f56abc25a2165f9e751e000e.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
    \begin {tikzpicture}[diagram]
      \SpliceDiagramSquare <l/>{
        nw = \bar {y}_{x},
        ne = \bar {y}_{x},
        sw = x,
        se = x,
        north/style = double,
        south/style = double,
        west/style = lies over,
        east/style = lies over,
        ne/style = pullback,
        height = 1.5cm,
      }
      \SpliceDiagramSquare <r/>{
        glue = west,
        glue target = l/,
        height = 1.5cm,
        east/style = lies over,
        ne = \bar {y},
        se = y,
        south = f,
      }
    \end {tikzpicture}
  ]]></fr:resource-source></fr:resource></html:figure>
 


</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-000S/</fr:uri>
                <fr:display-uri>frct-000S</fr:display-uri>
                <fr:route>/frct-000S/</fr:route>
                <fr:title text="Exegesis of opposite categories">Exegesis of opposite categories</fr:title>
              </fr:frontmatter>
              <fr:mainmatter><html:p>The construction of <fr:link href="/frct-001Z/" title="The opposite of an uncloven fibration" uri="https://www.jonmsterling.com/frct-001Z/" display-uri="frct-001Z" type="local">fibered opposite categories</fr:link> does appear quite involved, but it can be seen to be inevitable from the perspective of the <fr:link href="/frct-0005/" title="Fiber categories and vertical maps" uri="https://www.jonmsterling.com/frct-0005/" display-uri="frct-0005" type="local">fiber categories</fr:link> <fr:tex display="inline"><![CDATA[E^{\mathsf {op}}_{x}]]></fr:tex>. Indeed, let <fr:tex display="inline"><![CDATA[u,v\in  E^{\mathsf {op}}_{x}]]></fr:tex> and fix a <html:em>vertical</html:em> map <fr:tex display="inline"><![CDATA[h : u \to  v\in  E^{\mathsf {op}}_{x}]]></fr:tex>; by unfolding definitions, we see that the vertical map <fr:tex display="inline"><![CDATA[h : u \to  v]]></fr:tex> is uniquely determined by a morphism <fr:tex display="inline"><![CDATA[v\to  u\in  E_{x}]]></fr:tex>.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors /><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>A displayed morphism <fr:tex display="inline"><![CDATA[u\xrightarrow [1_{x}]{} v\in  E^{\mathsf {op}}]]></fr:tex> is
determined by a span <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{u\leftarrow  v_{x} \to  v\right \}\mathclose {}}\in  E]]></fr:tex> where the right-hand
map is cartesian over <fr:tex display="inline"><![CDATA[1_{x} : x\to  x]]></fr:tex> and the left-hand map is vertical, taken up to the identification of different cartesian lifts <fr:tex display="inline"><![CDATA[v_{x}\to  x]]></fr:tex>. A displayed morphism that is cartesian over the identity is an isomorphism; hence, displayed morphisms <fr:tex display="inline"><![CDATA[u\xrightarrow [1_{x}]{} v\in E^{\mathsf {op}}]]></fr:tex> are equivalently determined by vertical maps <fr:tex display="inline"><![CDATA[v\to  u \in  E]]></fr:tex>.</html:p>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
            </fr:tree>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:uri>https://www.jonmsterling.com/frct-002Q/</fr:uri>
            <fr:display-uri>frct-002Q</fr:display-uri>
            <fr:route>/frct-002Q/</fr:route>
            <fr:title text="Set-theoretic intuition for Bénabou's definability">Set-theoretic intuition for <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link>'s definability</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>To motivate Bénabou’s general notion of definability, we will first develop an alternative perspective on definability for classes of sets in terms of <html:em>families</html:em> of sets.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002M/</fr:uri>
                <fr:display-uri>frct-002M</fr:display-uri>
                <fr:route>/frct-002M/</fr:route>
                <fr:title text="Closure of a class of sets under base change">Closure of a class of sets under base change</fr:title>
                <fr:taxon>Construction</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>Let <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> be a class of sets; there exists a class <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> of <html:em>families</html:em>
of sets that contains <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> exactly when each
<fr:tex display="inline"><![CDATA[S_{i}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>. We will refer to <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> as the <html:em>closure under base change</html:em> of <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>, a name motivated by the fact that when <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>,
then for any <fr:tex display="inline"><![CDATA[u:J\to  I]]></fr:tex>, the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{uj}\right )\mathclose {}}_{j\in  J}]]></fr:tex> also lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002N/</fr:uri>
                <fr:display-uri>frct-002N</fr:display-uri>
                <fr:route>/frct-002N/</fr:route>
                <fr:title text="From classes of families to classes of sets">From classes of families to classes of sets</fr:title>
                <fr:taxon>Construction</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>Conversely to <fr:link href="/frct-002M/" title="Closure of a class of sets under base change" uri="https://www.jonmsterling.com/frct-002M/" display-uri="frct-002M" type="local">the closure of a class of sets under change of base</fr:link>, we may take a class of <html:em>families</html:em> of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> to the the class of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}_{1}\subseteq {\mathscr {M}}]]></fr:tex> spanned by sets <fr:tex display="inline"><![CDATA[S]]></fr:tex> such that the singleton family <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{S\right \}\mathclose {}}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002P/</fr:uri>
                <fr:display-uri>frct-002P</fr:display-uri>
                <fr:route>/frct-002P/</fr:route>
                <fr:title text="Definable class of families of sets">Definable class of families of sets</fr:title>
                <fr:taxon>Definition</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>A class of families of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> is said to be <html:em>definable</html:em> when it is stable and moreover, for any family of sets <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex>, there exists a subset <fr:tex display="inline"><![CDATA[J\subseteq  I]]></fr:tex> such that the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{j}\right )\mathclose {}}_{j\in  J}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex>, and moreover, such that <fr:tex display="inline"><![CDATA[u:K\to  I]]></fr:tex> factors through <fr:tex display="inline"><![CDATA[J\subseteq  I]]></fr:tex> whenever the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{uk}\right )\mathclose {}}_{k\in  K}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex>.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002R/</fr:uri>
                <fr:display-uri>frct-002R</fr:display-uri>
                <fr:route>/frct-002R/</fr:route>
                <fr:taxon>Intuition</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>A stable class of families of sets is definable when any family of sets can be restricted to a “biggest” subfamily that lies in the class.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002T/</fr:uri>
                <fr:display-uri>frct-002T</fr:display-uri>
                <fr:route>/frct-002T/</fr:route>
                <fr:title text="Characterization of definable classes of families">Characterization of definable classes of families</fr:title>
                <fr:taxon>Lemma</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> be a class of sets; then <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets if and only if <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a definable class of sets.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors /><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>Suppose that <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a definable class of sets. To
  check that <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets,
  we fix a family <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> not necessarily lying in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>. Because <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is definable, the intersection <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap  \bigcup _{i\in  I}S_{i}]]></fr:tex> is represented by a set <fr:tex display="inline"><![CDATA[U]]></fr:tex>. We therefore take the subset <fr:tex display="inline"><![CDATA[J = {\mathopen {}\left \{i \in  I\mid  S_i\in  U\right \}\mathclose {}}\subseteq  I]]></fr:tex>, and verify that the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{j}\right )\mathclose {}}_{j\in  J}]]></fr:tex> is the largest approximation of <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> by a family lying in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>.</html:p>

  <html:p>Conversely suppose that <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets. To see that <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is definable, we fix a class <fr:tex display="inline"><![CDATA[\mathfrak {U}]]></fr:tex> represented by a set <fr:tex display="inline"><![CDATA[U\in \mathscr {M}]]></fr:tex> to check that <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {U}]]></fr:tex> is representable. We consider the family of sets <fr:tex display="inline"><![CDATA[{\mathopen {}\left (u\right )\mathclose {}}_{u\in  U}]]></fr:tex>; because <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is definable, there is a largest subset <fr:tex display="inline"><![CDATA[V\subseteq  U]]></fr:tex> such that the change of base <fr:tex display="inline"><![CDATA[{\mathopen {}\left (v\right )\mathclose {}}_{v\in  V}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>, i.e. such that each <fr:tex display="inline"><![CDATA[v\in  V]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>. Therefore <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {U}]]></fr:tex> is represented by the set <fr:tex display="inline"><![CDATA[V]]></fr:tex>.</html:p>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
            </fr:tree>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Jean Bénabou</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/thomasstreicher/" title="Thomas Streicher" uri="https://www.jonmsterling.com/thomasstreicher/" display-uri="thomasstreicher" type="local">Thomas Streicher</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2002</fr:year>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/bénabou-streicher-2002/</fr:uri>
            <fr:display-uri>bénabou-streicher-2002</fr:display-uri>
            <fr:route>/bénabou-streicher-2002/</fr:route>
            <fr:title text="Distributors between fibrations">Distributors between fibrations</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="external">https://www2.mathematik.tu-darmstadt.de/~streicher/FIBR/DibFi.pdf</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter />
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Jean Bénabou</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>1985</fr:year>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/benabou-1985/</fr:uri>
            <fr:display-uri>benabou-1985</fr:display-uri>
            <fr:route>/benabou-1985/</fr:route>
            <fr:title text="Fibered categories and the foundations of naïve category theory">Fibered categories and the foundations of naïve category theory</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="doi">10.2307/2273784</fr:meta>
            <fr:meta name="venue">The Journal of Symbolic Logic</fr:meta>
            <fr:meta name="bibtex"><![CDATA[@article{benabou-1985,
  author = {B\'{e}nabou, Jean},
  publisher = {Cambridge University Press},
  year = {1985},
  doi = {10.2307/2273784},
  journal = {The Journal of Symbolic Logic},
  number = {1},
  pages = {10--37},
  title = {Fibered categories and the foundations of naive category theory},
  volume = {50},
}]]></fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>En hommage à Alexandre Grothendieck.</html:p>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
  </fr:backmatter>
</fr:tree>
