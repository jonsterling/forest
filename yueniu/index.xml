<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors />
    <fr:uri>https://www.jonmsterling.com/yueniu/</fr:uri>
    <fr:display-uri>yueniu</fr:display-uri>
    <fr:route>/yueniu/</fr:route>
    <fr:title text="Yue Niu">Yue Niu</fr:title>
    <fr:taxon>Person</fr:taxon>
    <fr:meta name="position">Postdoc</fr:meta>
    <fr:meta name="phd-advisor">robertharper</fr:meta>
    <fr:meta name="institution">National Institute of Informatics</fr:meta>
    <fr:meta name="orcid">0000-0003-4888-6042</fr:meta>
  </fr:frontmatter>
  <fr:mainmatter />
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors />
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>9</fr:month>
              <fr:day>22</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-009H/</fr:uri>
            <fr:display-uri>jms-009H</fr:display-uri>
            <fr:route>/jms-009H/</fr:route>
            <fr:title text="List of forests">List of <fr:link href="https://www.forester-notes.org/tfmt-000R/" title="Forests and trees of evergreen notes" uri="https://www.forester-notes.org/tfmt-000R/" display-uri="https://www.forester-notes.org/tfmt-000R/" type="local">forests</fr:link></fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:ul><html:li><fr:link href="https://conair94.github.io/ModelTheoryWiki/" type="external">The Model Companion</fr:link></html:li>
  <html:li><fr:link href="/dannypsnl/" title="Lîm Tsú-thuàn" uri="https://www.jonmsterling.com/dannypsnl/" display-uri="dannypsnl" type="local">Lîm Tsú-thuàn</fr:link>: <fr:link href="https://dannypsnl.me/index.xml" type="external">dannypsnl.me</fr:link></html:li>
  <html:li><fr:link href="/masanoriogino/" title="Masanori Ogino" uri="https://www.jonmsterling.com/masanoriogino/" display-uri="masanoriogino" type="local">Masanori Ogino</fr:link>: <fr:link href="https://trail.brackets-salad.com/index.xml" type="external">trail.brackets-salad.com</fr:link></html:li>
  <html:li><fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>: <fr:link href="https://yuesforest.com/index.xml" type="external">yuesforest.com</fr:link></html:li>
  <html:li><fr:link href="/kentookura/" title="Kento Okura" uri="https://www.jonmsterling.com/kentookura/" display-uri="kentookura" type="local">Kento Okura</fr:link>: <fr:link href="https://kentookura.srht.site/index.xml" type="external">kentookura.srht.site/index.xml</fr:link></html:li>
  <html:li><fr:link href="/rileyshahar/" title="Riley Shahar" uri="https://www.jonmsterling.com/rileyshahar/" display-uri="rileyshahar" type="local">Riley Shahar</fr:link>: <fr:link href="https://rileyshahar.com/" type="external">rileyshahar.com</fr:link></html:li>
  <html:li><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>: <fr:link href="/index/" title="Jon Sterling" uri="https://www.jonmsterling.com/index/" display-uri="index" type="local">jonmsterling.com</fr:link></html:li>
  <html:li><fr:link href="/ayberktosun/" title="Ayberk Tosun" uri="https://www.jonmsterling.com/ayberktosun/" display-uri="ayberktosun" type="local">Ayberk Tosun</fr:link>:
  <fr:link href="https://ayberkt.github.io/mathematical-forest/" type="external">ayberktosun.github.io/mathematical-forest</fr:link></html:li>
  <html:li>Zifan Wang: <fr:link href="https://chry-santhemum.github.io/forest/" type="external">chry-santhemum.github.io/forest</fr:link></html:li>
  <html:li>Bernardo Hummes Flores: <fr:link href="https://birromer.github.io/" type="external">birromer.github.io</fr:link></html:li>
  <html:li><fr:link href="/zhixuanyang/" title="Zhixuan Yang" uri="https://www.jonmsterling.com/zhixuanyang/" display-uri="zhixuanyang" type="local">Zhixuan Yang</fr:link>: <fr:link href="https://yangzhixuan.github.io/trees/index.xml" type="external">yangzhixuan.github.io/trees/</fr:link></html:li>
  <html:li><fr:link href="https://fizzyelt.github.io/functional-programming/" type="external">帶你入門 functional programming</fr:link></html:li></html:ul>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>7</fr:month>
              <fr:day>17</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-005Z/</fr:uri>
            <fr:display-uri>jms-005Z</fr:display-uri>
            <fr:route>/jms-005Z/</fr:route>
            <fr:title text="Adequacy of sheaf semantics of noninterference">Adequacy of <fr:link href="/sterling-harper-2022/" title="Sheaf semantics of termination-insensitive noninterference" uri="https://www.jonmsterling.com/sterling-harper-2022/" display-uri="sterling-harper-2022" type="local">sheaf semantics of noninterference</fr:link></fr:title>
            <fr:taxon>Erratum</fr:taxon>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>A serious (and as-yet unfixed) problem was discovered in July of 2023 by <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>, which undermines the proof of adequacy given; in particular, the proof that the logical relation on free algebras is admissible is not correct. I believe there is a different proof of adequacy for the calculus described, but it will have a different structure from what currently appears in the paper. We thank <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link> for his attention to detail and careful reading of this paper.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>6</fr:month>
              <fr:day>21</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/harper-2023-calco-mfps/</fr:uri>
            <fr:display-uri>harper-2023-calco-mfps</fr:display-uri>
            <fr:route>/harper-2023-calco-mfps/</fr:route>
            <fr:title text="Integrating cost and behavior in type theory">Integrating cost and behavior in type theory</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="slides">http://www.cs.cmu.edu/~rwh/talks/calco-mfps-2023.pdf</fr:meta>
            <fr:meta name="venue"> Plenary invited lecture for CALCO/MFPS 2023</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>Joint work with <fr:link href="/harrisongrodin/" title="Harrison Grodin" uri="https://www.jonmsterling.com/harrisongrodin/" display-uri="harrisongrodin" type="local">Harrison Grodin</fr:link> (Carnegie Mellon), <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link> (Carnegie Mellon), and <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link> (Cambridge).</html:p>
            <html:p>The computational view of intuitionistic dependent type theory is as an intrinsic logic of (functional) programs in which types are viewed as specifications of their behavior. Equational reasoning is particularly relevant in the functional case, where correctness can be formulated as equality between two implementations of the same behavior. Besides behavior, it is also important to specify and verify the cost of programs, measured in terms of their resource usage, with respect to both sequential and parallel evaluation. Although program cost can—and has been—verified in type theory using an extrinsic formulation of programs as data objects, what we seek here is, instead, an intrinsic account within type theory itself.</html:p>
            <html:p>In this talk we discuss Calf, the <fr:link href="/niu-sterling-grodin-harper-2022/" title="A cost-aware logical framework" uri="https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/" display-uri="niu-sterling-grodin-harper-2022" type="local">Cost-Aware Logical Framework</fr:link>, which is an extension of dependent call-by-push-value type theory that provides an intrinsic account of both parallel and sequential resource usage for a variety of problem-specific measures of cost. Thus, for example, it is possible to prove that insertion sort and merge sort are equal as regards behavior, but differ in terms of the number of comparisons required to achieve the same results. But how can equal functions have different cost? To provide an intrinsic account of both intensional and extensional properties of programs, we make use of <fr:link href="/sterling-2021-thesis/" title="First steps in synthetic Tait computability: the objective metatheory of cubical type theory" uri="https://www.jonmsterling.com/sterling-2021-thesis/" display-uri="sterling-2021-thesis" type="local">Sterling's notion of Synthetic Tait Computability</fr:link>, a generalization of Tait's method originally developed for the study of higher type theory. In STC the concept of a “phase” plays a central role: originally as the distinction between the syntactic and semantic aspects of a computability structure, but more recently applied to the formulation of type theories for program modules and for information flow properties of programs. In Calf we distinguish two phases, the intensional and extensional, which differ as regards the significance of cost accounting—extensionally it is neglected, intensionally it is of paramount importance. Thus, in the extensional phase insertion sort and merge sort are equal, but in the intensional phase they are distinct, and indeed one is proved to have optimal behavior as regards comparisons, and the other not. Importantly, both phases are needed in a cost verification—the proof of the complexity of an algorithm usually relies on aspects of its correctness.</html:p>
            <html:p>We will provide an overview of Calf itself, and of its application in the verification of the cost and behavior of a variety of programs. So far we have been able to verify cost bounds on Euclid's Algorithm, amortized bounds on batched queues, parallel cost bounds on a joinable form of red-black trees, and the equivalence and cost of the aforementioned sorting methods. In a <fr:link href="/grodin-harper-2023-calco/" title="Amortized analysis via coinduction" uri="https://www.jonmsterling.com/grodin-harper-2023-calco/" display-uri="grodin-harper-2023-calco" type="local">companion paper</fr:link> at this meeting <fr:link href="/harrisongrodin/" title="Harrison Grodin" uri="https://www.jonmsterling.com/harrisongrodin/" display-uri="harrisongrodin" type="local">Grodin</fr:link> and I develop an account of amortization that relates the standard inductive view of instruction sequences with the coinductive view of data structures characterized by the same operations. In ongoing work we are extending the base of verified deterministic algorithms to those taught in the undergraduate parallel algorithms course at Carnegie Mellon, and are extending Calf itself to account for probabilistic methods, which are also used in that course.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2021</fr:year>
              <fr:month>12</fr:month>
              <fr:day>9</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/harper-2021-topos-institute/</fr:uri>
            <fr:display-uri>harper-2021-topos-institute</fr:display-uri>
            <fr:route>/harper-2021-topos-institute/</fr:route>
            <fr:title text="Phase distinctions in type theory">Phase distinctions in type theory</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="video">https://www.youtube.com/watch?v=7DYkyB1Rm3I</fr:meta>
            <fr:meta name="venue"><fr:link href="/toposinstitute/" title="Topos Institute" uri="https://www.jonmsterling.com/toposinstitute/" display-uri="toposinstitute" type="local">Topos Institute</fr:link> Colloquium</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>(Joint work with <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link> and <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>)</html:p>
            <html:p>The informal phase distinction between compile-time and run-time in programming languages is formally manifested by the distinction between kinds, which classify types, and types, which classify code. The distinction underpins standard programming methodology whereby code is first type-checked for consistency before being compiled for execution. When used effectively, types help eliminate bugs before they occur.</html:p>
            <html:p>Program modules, in even the most rudimentary form, threaten the distinction, comprising as they do both types and programs in a single unit. Matters worsen when considerating “open” modules, with free module variables standing for its imports. To maintain the separation in their presence it is necessary to limit the dependency of types, the static parts of a module, to their imported types. Such restrictions are fundamental for using dependent types to express modular structure, as originally suggested by MacQueen.</html:p>
            <html:p>To address this question <fr:link href="/moggi-1989/" title="A category-theoretic account of program modules" uri="https://www.jonmsterling.com/moggi-1989/" display-uri="moggi-1989" type="local">Moggi</fr:link> gave an “analytic” formulation of program modules in which modules are explicitly separated into their static and dynamic components using tools from category theory. Recent work by Dreyer, Rossberg, and Russo develops this approach fully in their account of ML-like module systems. In this talk we consider instead a “synthetic” formulation using a proposition to segregate the static from the dynamic, in particular to define static equivalence to manage type sharing and type dependency.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors />
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>10</fr:month>
              <fr:day>20</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-00B6/</fr:uri>
            <fr:display-uri>jms-00B6</fr:display-uri>
            <fr:route>/jms-00B6/</fr:route>
            <fr:title text="Students › PhD thesis committees"><fr:link href="/jms-0063/" title="Students" uri="https://www.jonmsterling.com/jms-0063/" display-uri="jms-0063" type="local">Students</fr:link> › PhD thesis committees</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>I currently serve on the following PhD committees:</html:p>
            <html:ul>
              <html:li><fr:link href="/wojciechnawrocki/" title="Wojciech Nawrocki" uri="https://www.jonmsterling.com/wojciechnawrocki/" display-uri="wojciechnawrocki" type="local">Wojciech Nawrocki</fr:link>: 2024–present, <html:em>Kripke-Joyal Forcing as a Modality in Lean 4</html:em>. <fr:link href="/cmu/" title="Carnegie Mellon University" uri="https://www.jonmsterling.com/cmu/" display-uri="cmu" type="local">Carnegie Mellon University</fr:link>.</html:li>
            </html:ul>
            <html:p>I was internal examiner for the following PhD students at <fr:link href="/ucam/" title="University of Cambridge" uri="https://www.jonmsterling.com/ucam/" display-uri="ucam" type="local">University of Cambridge</fr:link>:</html:p>
            <html:ul>
              <html:li><fr:link href="/alexrice/" title="Alex Rice" uri="https://www.jonmsterling.com/alexrice/" display-uri="alexrice" type="local">Alex Rice</fr:link>: 2024, <html:em><fr:link href="/rice-2024-thesis/" title="A type-theoretic approach to semistrict higher categories" uri="https://www.jonmsterling.com/rice-2024-thesis/" display-uri="rice-2024-thesis" type="local">A type-theoretic approach to semistrict higher categories</fr:link></html:em>.</html:li>
            </html:ul>
            <html:p>I was external examiner/committee member for the following PhD students:</html:p>
            <html:ul><html:li><fr:link href="/zhixuanyang/" title="Zhixuan Yang" uri="https://www.jonmsterling.com/zhixuanyang/" display-uri="zhixuanyang" type="local">Zhixuan Yang</fr:link>: 2024, <html:em>Structure and Language of Higher-Order Algebraic Effects</html:em>. Imperial College London.</html:li>
 <html:li><fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>: 2024, <html:em>Cost-sensitive programming, verification, and semantics</html:em>. <fr:link href="/cmu/" title="Carnegie Mellon University" uri="https://www.jonmsterling.com/cmu/" display-uri="cmu" type="local">Carnegie Mellon University</fr:link>.</html:li>
 <html:li><fr:link href="/filipposestini/" title="Filippo Sestini" uri="https://www.jonmsterling.com/filipposestini/" display-uri="filipposestini" type="local">Filippo Sestini</fr:link>: 2023, <html:em><fr:link href="/sestini-2023-thesis/" title="Bootstrapping Extensionality" uri="https://www.jonmsterling.com/sestini-2023-thesis/" display-uri="sestini-2023-thesis" type="local">Bootstrapping Extensionality</fr:link></html:em>. University of Nottingham.</html:li>
 <html:li><fr:link href="/lo%C3%AFcpujet/" title="Loïc Pujet" uri="https://www.jonmsterling.com/loïcpujet/" display-uri="loïcpujet" type="local">Loïc Pujet</fr:link>: 2022, <html:em><fr:link href="/pujet-2022-thesis/" title="Computing with Extensionality Principles in Type Theory" uri="https://www.jonmsterling.com/pujet-2022-thesis/" display-uri="pujet-2022-thesis" type="local">Computing with Extensionality Principles in Type Theory</fr:link></html:em>. Nantes University.</html:li></html:ul>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2024</fr:year>
              <fr:month>3</fr:month>
              <fr:day>29</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/niu-sterling-harper-2024/</fr:uri>
            <fr:display-uri>niu-sterling-harper-2024</fr:display-uri>
            <fr:route>/niu-sterling-harper-2024/</fr:route>
            <fr:title text="Cost-sensitive computational adequacy of higher-order recursion in synthetic domain theory">Cost-sensitive computational adequacy of higher-order recursion in synthetic domain theory</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="doi">10.46298/entics.14732</fr:meta>
            <fr:meta name="venue">
              <fr:link href="/mfps-2024/" title="MFPS ’24: 40th International Conference on Mathematical Foundations of Programming Semantics" uri="https://www.jonmsterling.com/mfps-2024/" display-uri="mfps-2024" type="local"><html:em>MFPS ’24</html:em>: 40th International Conference on Mathematical Foundations of Programming Semantics</fr:link>
            </fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>We study a cost-aware programming language for higher-order recursion dubbed <html:strong>PCF</html:strong><html:sub><html:strong>cost</html:strong></html:sub> in the setting of <html:em><fr:link href="/hyland-1991/" title="First steps in synthetic domain theory" uri="https://www.jonmsterling.com/hyland-1991/" display-uri="hyland-1991" type="local">synthetic domain theory</fr:link></html:em> (SDT). Our main contribution relates the denotational cost semantics of <html:strong>PCF</html:strong><html:sub><html:strong>cost</html:strong></html:sub> to its <html:em>computational cost semantics</html:em>, a new kind of dynamic semantics for program execution that serves as a mathematically natural alternative to operational semantics in SDT. In particular we prove an internal, cost-sensitive version of Plotkin’s computational adequacy theorem, giving a precise correspondence between the denotational and computational semantics for complete programs at base type. The constructions and proofs of this paper take place in the internal dependent type theory of an SDT topos extended by a <html:em>phase distinction</html:em> in the sense of <fr:link href="/sterling-harper-2021/" title="Logical relations as types: proof-relevant parametricity for program modules" uri="https://www.jonmsterling.com/sterling-harper-2021/" display-uri="sterling-harper-2021" type="local">Sterling and Harper</fr:link>. By controlling the interpretation of cost structure via the phase distinction in the denotational semantics, we show that <html:strong>PCF</html:strong><html:sub><html:strong>cost</html:strong></html:sub> programs also evince a noninterference property of cost and behavior. We verify the axioms of the type theory by means of a model construction based on relative sheaf models of SDT.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/harrisongrodin/" title="Harrison Grodin" uri="https://www.jonmsterling.com/harrisongrodin/" display-uri="harrisongrodin" type="local">Harrison Grodin</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2024</fr:year>
              <fr:month>1</fr:month>
              <fr:day>5</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/grodin-niu-sterling-harper-2024/</fr:uri>
            <fr:display-uri>grodin-niu-sterling-harper-2024</fr:display-uri>
            <fr:route>/grodin-niu-sterling-harper-2024/</fr:route>
            <fr:title text=" decalf: a directed, effectful cost-aware logical framework"><![CDATA[ decalf]]>: a directed, effectful cost-aware logical framework</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="venue">
              <fr:link href="/popl-2024/" title="POPL ’24: 51st ACM SIGPLAN Symposium on Principles of Programming Languages" uri="https://www.jonmsterling.com/popl-2024/" display-uri="popl-2024" type="local"><html:em>POPL ’24</html:em>: 51st ACM SIGPLAN Symposium on Principles of Programming Languages</fr:link>
            </fr:meta>
            <fr:meta name="doi">10.1145/3632852</fr:meta>
            <fr:meta name="external">https://arxiv.org/abs/2307.05938</fr:meta>
            <fr:meta name="bibtex"><![CDATA[@article{grodin-niu-sterling-harper-2024,
  author = {Grodin, Harrison and Niu, Yue and Sterling, Jonathan and Harper, Robert},
  title = {Decalf: A Directed, Effectful Cost-Aware Logical Framework},
  year = {2024},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {8},
  number = {POPL},
  doi = {10.1145/3632852},
  journal = {Proc. ACM Program. Lang.},
  month = {jan},
  articleno = {10},
  numpages = {29},
}]]></fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>We present <html:strong>decalf</html:strong>, a <html:strong>d</html:strong>irected, <html:strong>e</html:strong>ffectful <html:strong>c</html:strong>ost-<html:strong>a</html:strong>ware <html:strong>l</html:strong>ogical <html:strong>f</html:strong>ramework for studying quantitative aspects of functional programs with effects.  Like <fr:link href="/niu-sterling-grodin-harper-2022/" title="A cost-aware logical framework" uri="https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/" display-uri="niu-sterling-grodin-harper-2022" type="local"><html:strong>calf</html:strong></fr:link>, the language is based on a formal <html:em>phase distinction</html:em> between the <html:em>extension</html:em> and the <html:em>intension</html:em> of a program, its pure <html:em>behavior</html:em> as distinct from its <html:em>cost</html:em> measured by an effectful step-counting primitive. The type theory ensures that the behavior is unaffected by the cost accounting.  Unlike <fr:link href="/niu-sterling-grodin-harper-2022/" title="A cost-aware logical framework" uri="https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/" display-uri="niu-sterling-grodin-harper-2022" type="local"><html:strong>calf</html:strong></fr:link>, the present language takes account of <html:em>effects</html:em>, such as probabilistic choice and mutable state; this extension requires a reformulation of <fr:link href="/niu-sterling-grodin-harper-2022/" title="A cost-aware logical framework" uri="https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/" display-uri="niu-sterling-grodin-harper-2022" type="local"><html:strong>calf</html:strong></fr:link>’s approach to cost accounting: rather than rely on a “separable” notion of cost, here <html:em>a cost bound is simply another program</html:em>. To make this formal, we equip every type with an intrinsic preorder, relaxing the precise cost accounting intrinsic to a program to a looser but nevertheless informative estimate.  For example, the cost bound of a probabilistic program is itself a probabilistic program that specifies the distribution of costs.  This approach serves as a streamlined alternative to the standard method of isolating a recurrence that bounds the cost in a manner that readily extends to higher-order, effectful programs.</html:p>
            <html:p>The development proceeds by first introducing the <html:strong>decalf</html:strong> type system, which is based on an intrinsic ordering among terms that restricts in the extensional phase to extensional equality, but in the intensional phase reflects an approximation of the cost of a program of interest.  This formulation is then applied to a number of illustrative examples, including pure and effectful sorting algorithms, simple probabilistic programs, and higher-order functions.  Finally, we justify <html:strong>decalf</html:strong> via a model in the topos of augmented simplicial sets.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2024</fr:year>
                  <fr:month>10</fr:month>
                  <fr:day>3</fr:day>
                </fr:date>
                <fr:uri>https://www.jonmsterling.com/jms-012Q/</fr:uri>
                <fr:display-uri>jms-012Q</fr:display-uri>
                <fr:route>/jms-012Q/</fr:route>
                <fr:title text="Missing assumptions about the interval in Decalf">Missing assumptions about the interval in <fr:link href="/grodin-niu-sterling-harper-2024/" title=" decalf: a directed, effectful cost-aware logical framework" uri="https://www.jonmsterling.com/grodin-niu-sterling-harper-2024/" display-uri="grodin-niu-sterling-harper-2024" type="local">Decalf</fr:link></fr:title>
                <fr:taxon>Erratum</fr:taxon>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>In section 4.2, we assumed only a (non-strict) interval object <fr:tex display="inline"><![CDATA[\mathbb {I}]]></fr:tex>, and then asserted in Definition 4.5 the map <fr:tex display="inline"><![CDATA[(-=1)\colon  \mathbb {I}\to \Omega ]]></fr:tex> was a monomorphism. Obviously, this need not be the case, so it needs to be turned into an assumption about <fr:tex display="inline"><![CDATA[(\mathcal {E},\mathbb {I})]]></fr:tex>. This assumption will, however, hold of the interval in simplicial sets for the following reason: the interval in simplicial sets is the <html:em>nerve</html:em> of the actual poset <fr:tex display="inline"><![CDATA[\{0<1\}]]></fr:tex>, and the statement in question holds for this poset and is preserved by the nerve functor.</html:p>
              </fr:mainmatter>
            </fr:tree>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2022</fr:year>
              <fr:month>9</fr:month>
              <fr:day>26</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/niu-harper-2022/</fr:uri>
            <fr:display-uri>niu-harper-2022</fr:display-uri>
            <fr:route>/niu-harper-2022/</fr:route>
            <fr:title text="A metalanguage for cost-aware denotational semantics">A metalanguage for cost-aware denotational semantics</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="doi">10.48550/arXiv.2209.12669</fr:meta>
            <fr:meta name="venue">Thirty-Eighth Annual ACM/IEEE Symposium on
Logic in Computer Science (LICS)</fr:meta>
            <fr:meta name="bibtex"><![CDATA[@article{niu-harper-2022,
  doi = {10.48550/ARXIV.2209.12669},
  author = {Niu, Yue and Harper, Robert},
  title = {A metalanguage for cost-aware denotational semantics},
  publisher = {arXiv},
  year = {2022},
}]]></fr:meta>
          </fr:frontmatter>
          <fr:mainmatter />
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/harrisongrodin/" title="Harrison Grodin" uri="https://www.jonmsterling.com/harrisongrodin/" display-uri="harrisongrodin" type="local">Harrison Grodin</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2022</fr:year>
              <fr:month>1</fr:month>
              <fr:day>1</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/</fr:uri>
            <fr:display-uri>niu-sterling-grodin-harper-2022</fr:display-uri>
            <fr:route>/niu-sterling-grodin-harper-2022/</fr:route>
            <fr:title text="A cost-aware logical framework">A cost-aware logical framework</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="venue"><fr:link href="/pacmpl/" title="Proceedings of the ACM on Programming Languages" uri="https://www.jonmsterling.com/pacmpl/" display-uri="pacmpl" type="local">Proceedings of the ACM on Programming Languages</fr:link>, Volume 6, Issue POPL</fr:meta>
            <fr:meta name="doi">10.1145/3498670</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>We present calf, a cost-aware logical framework for studying quantitative aspects of functional programs. Taking inspiration from recent work that reconstructs traditional aspects of programming languages in terms of a modal account of phase distinctions, we argue that the cost structure of programs motivates a phase distinction between intension and extension. Armed with this technology, we contribute a synthetic account of cost structure as a computational effect in which cost-aware programs enjoy an internal noninterference property: input/output behavior cannot depend on cost. As a full-spectrum dependent type theory, calf presents a unified language for programming and specification of both cost and behavior that can be integrated smoothly with existing mathematical libraries available in type theoretic proof assistants.</html:p>
            <html:p>We evaluate calf as a general framework for cost analysis by implementing two fundamental techniques for algorithm analysis: the method of recurrence relations and physicist’s method for amortized analysis. We deploy these techniques on a variety of case studies: we prove a tight, closed bound for Euclid’s algorithm, verify the amortized complexity of batched queues, and derive tight, closed bounds for the sequential and parallel complexity of merge sort, all fully mechanized in the Agda proof assistant. Lastly we substantiate the soundness of quantitative reasoning in calf by means of a model construction.</html:p>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
  </fr:backmatter>
</fr:tree>
