<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors>
      <fr:author>
        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
      </fr:author>
    </fr:authors>
    <fr:date>
      <fr:year>2023</fr:year>
      <fr:month>10</fr:month>
      <fr:day>12</fr:day>
    </fr:date>
    <fr:uri>https://www.jonmsterling.com/jms-00AI/</fr:uri>
    <fr:display-uri>jms-00AI</fr:display-uri>
    <fr:route>/jms-00AI/</fr:route>
    <fr:title text="New Spaces for Denotational Semantics › Project bibliography"><fr:link href="/jms-008K/" title="New Spaces for Denotational Semantics" uri="https://www.jonmsterling.com/jms-008K/" display-uri="jms-008K" type="local">New Spaces for Denotational Semantics</fr:link> › Project bibliography</fr:title>
    <fr:taxon>Bibliography</fr:taxon>
  </fr:frontmatter>
  <fr:mainmatter>
  
  

  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Accepted papers">Accepted papers</fr:title></fr:frontmatter><fr:mainmatter><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/andrewslattery/" title="Andrew Slattery" uri="https://www.jonmsterling.com/andrewslattery/" display-uri="andrewslattery" type="local">Andrew Slattery</fr:link></fr:author><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2025</fr:year><fr:month>3</fr:month><fr:day>17</fr:day></fr:date><fr:date><fr:year>2025</fr:year><fr:month>5</fr:month><fr:day>8</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/slattery-sterling-2025/</fr:uri><fr:display-uri>slattery-sterling-2025</fr:display-uri><fr:route>/slattery-sterling-2025/</fr:route><fr:title text="Hofmann–Streicher lifting of fibred categories">Hofmann–Streicher lifting of fibred categories</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="doi">10.48550/arXiv.2504.09520</fr:meta><fr:meta name="venue"><fr:link href="/lics-2025/" title="LICS ’25: 40th Annual ACM/IEEE Symposium on Logic in Computer Science" uri="https://www.jonmsterling.com/lics-2025/" display-uri="lics-2025" type="local"><html:em>LICS ’25</html:em>: 40th Annual ACM/IEEE Symposium on Logic in Computer Science</fr:link></fr:meta></fr:frontmatter><fr:mainmatter><html:p>In 1997, <fr:link href="/hofmann-streicher-1997/" title="Lifting Grothendieck universes" uri="https://www.jonmsterling.com/hofmann-streicher-1997/" display-uri="hofmann-streicher-1997" type="local">Hofmann and Streicher</fr:link> introduced an explicit construction to lift a Grothendieck universe <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝓤</mml:mi></mml:math> from <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝐒𝐞𝐭</mml:mi></mml:math> into the category of <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝐒𝐞𝐭</mml:mi></mml:math>-valued presheaves on a <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝓤</mml:mi></mml:math>-small category <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">B</mml:mi></mml:math>. More recently, <fr:link href="/awodey-2024-universes/" title="On Hofmann–Streicher universes" uri="https://www.jonmsterling.com/awodey-2024-universes/" display-uri="awodey-2024-universes" type="local">Awodey presented</fr:link> an elegant functorial analysis of this construction in terms of the <html:em>categorical nerve</html:em>, the right adjoint to the functor that takes a presheaf to its category of elements; in particular, the categorical nerve’s functorial action on the universal <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝓤</mml:mi></mml:math>-small discrete fibration gives the generic family of <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝓤</mml:mi></mml:math>’s Hofmann–Streicher lifting. Inspired by <fr:link href="/awodey-2024-universes/" title="On Hofmann–Streicher universes" uri="https://www.jonmsterling.com/awodey-2024-universes/" display-uri="awodey-2024-universes" type="local">Awodey’s analysis</fr:link>, we define a relative version of Hofmann–Streicher lifting in terms of the right pseudo-adjoint to the functor <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝐅𝐢𝐛</mml:mi>
  <mml:mrow xmlns:mml="http://www.w3.org/1998/Math/MathML">
   <mml:mo fence="true" xmlns:mml="http://www.w3.org/1998/Math/MathML"><![CDATA[(]]></mml:mo>
   <mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">A</mml:mi>
   <mml:mo fence="true" xmlns:mml="http://www.w3.org/1998/Math/MathML"><![CDATA[)]]></mml:mo>
  </mml:mrow>
 </mml:mrow><mml:mo xmlns:mml="http://www.w3.org/1998/Math/MathML">→</mml:mo><mml:mrow xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">𝐅𝐢𝐛</mml:mi>
  <mml:mrow xmlns:mml="http://www.w3.org/1998/Math/MathML">
   <mml:mo fence="true" xmlns:mml="http://www.w3.org/1998/Math/MathML"><![CDATA[(]]></mml:mo>
   <mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">B</mml:mi>
   <mml:mo fence="true" xmlns:mml="http://www.w3.org/1998/Math/MathML"><![CDATA[)]]></mml:mo>
  </mml:mrow>
 </mml:mrow></mml:mrow></mml:math> given by postcomposition with a fibration <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mrow xmlns:mml="http://www.w3.org/1998/Math/MathML"><mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">A</mml:mi><mml:mo xmlns:mml="http://www.w3.org/1998/Math/MathML">→</mml:mo> <mml:mi xmlns:mml="http://www.w3.org/1998/Math/MathML">B</mml:mi></mml:mrow></mml:math></html:p></fr:mainmatter></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/leonipugh/" title="Leoni Pugh" uri="https://www.jonmsterling.com/leonipugh/" display-uri="leonipugh" type="local">Leoni Pugh</fr:link></fr:author><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>31</fr:day></fr:date><fr:date><fr:year>2025</fr:year><fr:month>4</fr:month><fr:day>9</fr:day></fr:date><fr:date><fr:year>2025</fr:year><fr:month>5</fr:month><fr:day>6</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/pugh-sterling-2025/</fr:uri><fr:display-uri>pugh-sterling-2025</fr:display-uri><fr:route>/pugh-sterling-2025/</fr:route><fr:title text="When is the partial map classifier a Sierpiński cone?">When is the partial map classifier a Sierpiński cone?</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="venue"><fr:link href="/lics-2025/" title="LICS ’25: 40th Annual ACM/IEEE Symposium on Logic in Computer Science" uri="https://www.jonmsterling.com/lics-2025/" display-uri="lics-2025" type="local"><html:em>LICS ’25</html:em>: 40th Annual ACM/IEEE Symposium on Logic in Computer Science</fr:link></fr:meta><fr:meta name="doi">10.48550/arXiv.2504.06789</fr:meta></fr:frontmatter><fr:mainmatter><html:p>We study the relationship between partial map classifiers, Sierpiński cones, and axioms for synthetic higher categories and domains within <fr:link href="/hottbook/" title="Homotopy Type Theory: univalent foundations of mathematics" uri="https://www.jonmsterling.com/hottbook/" display-uri="hottbook" type="local">univalent foundations</fr:link>. In particular, we show that synthetic ∞-categories are closed under partial map classifiers assuming Phoa's principle, and we isolate a new reflective subuniverse of types within which the Sierpiński cone (a lax colimit) can be computed as a partial map classifier by strengthening the Segal condition.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/leonipugh/" title="Leoni Pugh" uri="https://www.jonmsterling.com/leonipugh/" display-uri="leonipugh" type="local">Leoni Pugh</fr:link></fr:author><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>31</fr:day></fr:date><fr:date><fr:year>2025</fr:year><fr:month>4</fr:month><fr:day>9</fr:day></fr:date><fr:date><fr:year>2025</fr:year><fr:month>5</fr:month><fr:day>6</fr:day></fr:date><fr:title text="Errata">Errata</fr:title></fr:frontmatter><fr:mainmatter><html:p>The paper currently states that the alternative type theoretic computation of the scone uses the flattening lemma, but this is incorrect. In fact, we need only the fact the dependent sum functor preserves colimits (being left adjoint to base change). This will be corrected in the final version of the paper.</html:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>12</fr:month><fr:day>27</fr:day></fr:date><fr:date><fr:year>2024</fr:year><fr:month>4</fr:month><fr:day>16</fr:day></fr:date><fr:date><fr:year>2024</fr:year><fr:month>4</fr:month><fr:day>26</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/sterling-2024-lifting/</fr:uri><fr:display-uri>sterling-2024-lifting</fr:display-uri><fr:route>/sterling-2024-lifting/</fr:route><fr:title text="Tensorial structure of the lifting doctrine in constructive domain theory">Tensorial structure of the lifting doctrine in constructive domain theory</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="venue">Proceedings of <fr:link href="/catmi-2023/" title="Category Theory at Work in Computational Mathematics and Theoretical Informatics" uri="https://www.jonmsterling.com/catmi-2023/" display-uri="catmi-2023" type="local">Category Theory at Work in Computational Mathematics and Theoretical Informatics</fr:link></fr:meta><fr:meta name="doi">10.48550/arXiv.2312.17023</fr:meta></fr:frontmatter><fr:mainmatter><html:p>We present a survey of the two-dimensional and tensorial structure of the <html:em>lifting doctrine</html:em> in constructive domain theory, i.e. in the theory of directed-complete partial orders (dcpos) over an arbitrary elementary topos. We establish the universal property of lifting of dcpos as the Sierpiński cone, from which we deduce (1) that lifting forms a Kock–Zöberlein doctrine, (2) that lifting algebras, pointed dcpos, and inductive partial orders form canonically equivalent locally posetal 2-categories, and (3) that the category of lifting algebras is cocomplete, with connected colimits created by the forgetful functor to dcpos. Finally we deduce the symmetric monoidal closure of the Eilenberg–Moore resolution of the lifting 2-monad by means of smash products; these are shown to classify both bilinear maps and strict maps, which we prove to coincide in the constructive setting. We provide several concrete computations of the smash product as dcpo coequalisers and lifting algebra coequalisers, and compare these with the more abstract results of Seal. Although all these results are well-known classically, the existing proofs do not apply in a constructive setting; indeed, the classical analysis of the Eilenberg–Moore category of the lifting monad relies on the fact that all lifting algebras are free, a condition that is not known to hold constructively.</html:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree>

  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Refereed papers">Refereed papers</fr:title></fr:frontmatter><fr:mainmatter><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>13</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/sterling-2025-grothendieck/</fr:uri><fr:display-uri>sterling-2025-grothendieck</fr:display-uri><fr:route>/sterling-2025-grothendieck/</fr:route><fr:title text="Towards a geometry for syntax">Towards a geometry for syntax</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="doi">10.1007/978-3-031-68934-5_15</fr:meta><fr:meta name="venue">Chapter contributed to <html:em>The Mathematical and Philosophical Legacy of Alexander Grothendieck</html:em>, postproceedings of the Chapman <fr:link href="/chapman-grothendieck-2022/" title="Grothendieck Conference" uri="https://www.jonmsterling.com/chapman-grothendieck-2022/" display-uri="chapman-grothendieck-2022" type="local">Grothendieck Conference</fr:link>.</fr:meta><fr:meta name="bibtex"><![CDATA[@inbook{sterling:2025:grothendieck,
  author = {Sterling, Jonathan},
  editor = {Panza, Marco and Struppa, Daniele C. and Szczeciniarz, Jean-Jacques},
  location = {Cham},
  publisher = {Springer Nature Switzerland},
  booktitle = {The Mathematical and Philosophical Legacy of Alexander Grothendieck},
  date = {2025},
  doi = {10.1007/978-3-031-68934-5_15},
  eprint = {2307.09497},
  eprinttype = {arXiv},
  isbn = {978-3-031-68934-5},
  pages = {391--432},
  title = {Toward a Geometry for Syntax},
}]]></fr:meta></fr:frontmatter><fr:mainmatter><html:p>It often happens that free algebras for a given theory satisfy useful reasoning principles that are not preserved under homomorphisms of algebras, and hence need not hold in an arbitrary algebra. For instance, if <fr:tex display="inline"><![CDATA[M]]></fr:tex> is the free monoid on a set <fr:tex display="inline"><![CDATA[A]]></fr:tex>, then the scalar multiplication function <fr:tex display="inline"><![CDATA[A\times  M\to  M]]></fr:tex> is injective. Therefore, when reasoning in the formal theory of monoids under <fr:tex display="inline"><![CDATA[A]]></fr:tex>, it is possible to use this injectivity law to make sound deductions even about monoids under A for which scalar multiplication is not injective — a principle known in algebra as the permanence of identity. Properties of this kind are of fundamental practical importance to the logicians and computer scientists who design and implement computerized proof assistants like Lean and Coq, as they enable the formal reductions of equational problems that make type checking tractable.</html:p><html:p>As type theories have become increasingly more sophisticated, it has become more and more difficult to establish the useful properties of their free models that facilitate effective implementation. These obstructions have facilitated a fruitful return to foundational work in type theory, which has taken on a more geometrical flavor than ever before. Here we expose a modern way to prove a highly non-trivial injectivity law for free models of Martin-Löf type theory, paying special attention to the ways that contemporary methods in type theory have been influenced by three important ideas of the Grothendieck school: the relative point of view, the language of universes, and the recollement of generalized spaces.</html:p></fr:mainmatter></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link></fr:author><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author><fr:author><fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link></fr:author></fr:authors><fr:date><fr:year>2024</fr:year><fr:month>3</fr:month><fr:day>29</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/niu-sterling-harper-2024/</fr:uri><fr:display-uri>niu-sterling-harper-2024</fr:display-uri><fr:route>/niu-sterling-harper-2024/</fr:route><fr:title text="Cost-sensitive computational adequacy of higher-order recursion in synthetic domain theory">Cost-sensitive computational adequacy of higher-order recursion in synthetic domain theory</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="doi">10.46298/entics.14732</fr:meta><fr:meta name="venue"><fr:link href="/mfps-2024/" title="MFPS ’24: 40th International Conference on Mathematical Foundations of Programming Semantics" uri="https://www.jonmsterling.com/mfps-2024/" display-uri="mfps-2024" type="local"><html:em>MFPS ’24</html:em>: 40th International Conference on Mathematical Foundations of Programming Semantics</fr:link></fr:meta></fr:frontmatter><fr:mainmatter><html:p>We study a cost-aware programming language for higher-order recursion dubbed <html:strong>PCF</html:strong><html:sub><html:strong>cost</html:strong></html:sub> in the setting of <html:em><fr:link href="/hyland-1991/" title="First steps in synthetic domain theory" uri="https://www.jonmsterling.com/hyland-1991/" display-uri="hyland-1991" type="local">synthetic domain theory</fr:link></html:em> (SDT). Our main contribution relates the denotational cost semantics of <html:strong>PCF</html:strong><html:sub><html:strong>cost</html:strong></html:sub> to its <html:em>computational cost semantics</html:em>, a new kind of dynamic semantics for program execution that serves as a mathematically natural alternative to operational semantics in SDT. In particular we prove an internal, cost-sensitive version of Plotkin’s computational adequacy theorem, giving a precise correspondence between the denotational and computational semantics for complete programs at base type. The constructions and proofs of this paper take place in the internal dependent type theory of an SDT topos extended by a <html:em>phase distinction</html:em> in the sense of <fr:link href="/sterling-harper-2021/" title="Logical relations as types: proof-relevant parametricity for program modules" uri="https://www.jonmsterling.com/sterling-harper-2021/" display-uri="sterling-harper-2021" type="local">Sterling and Harper</fr:link>. By controlling the interpretation of cost structure via the phase distinction in the denotational semantics, we show that <html:strong>PCF</html:strong><html:sub><html:strong>cost</html:strong></html:sub> programs also evince a noninterference property of cost and behavior. We verify the axioms of the type theory by means of a model construction based on relative sheaf models of SDT.</html:p></fr:mainmatter></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author><fr:author><fr:link href="/danielgratzer/" title="Daniel Gratzer" uri="https://www.jonmsterling.com/danielgratzer/" display-uri="danielgratzer" type="local">Daniel Gratzer</fr:link></fr:author><fr:author><fr:link href="/larsbirkedal/" title="Lars Birkedal" uri="https://www.jonmsterling.com/larsbirkedal/" display-uri="larsbirkedal" type="local">Lars Birkedal</fr:link></fr:author></fr:authors><fr:date><fr:year>2024</fr:year><fr:month>2</fr:month><fr:day>7</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/sterling-gratzer-birkedal-2024-univalent/</fr:uri><fr:display-uri>sterling-gratzer-birkedal-2024-univalent</fr:display-uri><fr:route>/sterling-gratzer-birkedal-2024-univalent/</fr:route><fr:title text="Towards univalent reference types">Towards univalent reference types</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="doi">10.4230/LIPIcs.CSL.2024.47</fr:meta><fr:meta name="venue"><fr:link href="/csl-2024/" title="CSL ’24: 32nd EACSL Annual Conference on Computer Science Logic 2024" uri="https://www.jonmsterling.com/csl-2024/" display-uri="csl-2024" type="local"><html:em>CSL ’24</html:em>: 32nd EACSL Annual Conference on Computer Science Logic 2024</fr:link></fr:meta><fr:meta name="bibtex"><![CDATA[@inproceedings{sterling-gratzer-birkedal-2024-univalent,
  author = {Sterling, Jonathan and Gratzer, Daniel and Birkedal, Lars},
  title = {{Towards Univalent Reference Types: The Impact of Univalence on Denotational Semantics}},
  booktitle = {32nd EACSL Annual Conference on Computer Science Logic (CSL 2024)},
  pages = {47:1--47:21},
  series = {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN = {978-3-95977-310-2},
  ISSN = {1868-8969},
  year = {2024},
  volume = {288},
  editor = {Murano, Aniello and Silva, Alexandra},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address = {Dagstuhl, Germany},
  doi =  {10.4230/LIPIcs.CSL.2024.47},
}]]></fr:meta></fr:frontmatter><fr:mainmatter><html:p>We develop a denotational semantics for general reference types in an <fr:link href="/awodey-frey-speight-2018/" title="Impredicative encodings of (higher) inductive types" uri="https://www.jonmsterling.com/awodey-frey-speight-2018/" display-uri="awodey-frey-speight-2018" type="local">impredicative version</fr:link> of <fr:link href="/bbcgsv-2019/" title="Guarded cubical type theory" uri="https://www.jonmsterling.com/bbcgsv-2019/" display-uri="bbcgsv-2019" type="local"><html:strong><html:em>guarded homotopy type theory</html:em></html:strong></fr:link>, an adaptation of <fr:link href="/bmss-2011/" title="First steps in synthetic guarded domain theory: step-indexing in the topos of trees" uri="https://www.jonmsterling.com/bmss-2011/" display-uri="bmss-2011" type="local">synthetic guarded domain theory</fr:link> to Voevodsky’s <fr:link href="/hottbook/" title="Homotopy Type Theory: univalent foundations of mathematics" uri="https://www.jonmsterling.com/hottbook/" display-uri="hottbook" type="local">univalent foundations</fr:link>. We observe for the first time the profound impact of univalence on the <fr:link href="/sterling-gratzer-birkedal-2022/" title="Denotational semantics of general store and polymorphism" uri="https://www.jonmsterling.com/sterling-gratzer-birkedal-2022/" display-uri="sterling-gratzer-birkedal-2022" type="local">denotational semantics of mutable state</fr:link>. Univalence automatically ensures that all computations are invariant under symmetries of the heap—a bountiful source of program equivalences. In particular, even the most simplistic univalent model enjoys many new program equivalences that do not hold when the same constructions are carried out in the universes of traditional set-level (extensional) type theory.</html:p></fr:mainmatter></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/harrisongrodin/" title="Harrison Grodin" uri="https://www.jonmsterling.com/harrisongrodin/" display-uri="harrisongrodin" type="local">Harrison Grodin</fr:link></fr:author><fr:author><fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link></fr:author><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author><fr:author><fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link></fr:author></fr:authors><fr:date><fr:year>2024</fr:year><fr:month>1</fr:month><fr:day>5</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/grodin-niu-sterling-harper-2024/</fr:uri><fr:display-uri>grodin-niu-sterling-harper-2024</fr:display-uri><fr:route>/grodin-niu-sterling-harper-2024/</fr:route><fr:title text=" decalf: a directed, effectful cost-aware logical framework"><![CDATA[ decalf]]>: a directed, effectful cost-aware logical framework</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="venue"><fr:link href="/popl-2024/" title="POPL ’24: 51st ACM SIGPLAN Symposium on Principles of Programming Languages" uri="https://www.jonmsterling.com/popl-2024/" display-uri="popl-2024" type="local"><html:em>POPL ’24</html:em>: 51st ACM SIGPLAN Symposium on Principles of Programming Languages</fr:link></fr:meta><fr:meta name="doi">10.1145/3632852</fr:meta><fr:meta name="external">https://arxiv.org/abs/2307.05938</fr:meta><fr:meta name="bibtex"><![CDATA[@article{grodin-niu-sterling-harper-2024,
  author = {Grodin, Harrison and Niu, Yue and Sterling, Jonathan and Harper, Robert},
  title = {Decalf: A Directed, Effectful Cost-Aware Logical Framework},
  year = {2024},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {8},
  number = {POPL},
  doi = {10.1145/3632852},
  journal = {Proc. ACM Program. Lang.},
  month = {jan},
  articleno = {10},
  numpages = {29},
}]]></fr:meta></fr:frontmatter><fr:mainmatter><html:p>We present <html:strong>decalf</html:strong>, a <html:strong>d</html:strong>irected, <html:strong>e</html:strong>ffectful <html:strong>c</html:strong>ost-<html:strong>a</html:strong>ware <html:strong>l</html:strong>ogical <html:strong>f</html:strong>ramework for studying quantitative aspects of functional programs with effects.  Like <fr:link href="/niu-sterling-grodin-harper-2022/" title="A cost-aware logical framework" uri="https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/" display-uri="niu-sterling-grodin-harper-2022" type="local"><html:strong>calf</html:strong></fr:link>, the language is based on a formal <html:em>phase distinction</html:em> between the <html:em>extension</html:em> and the <html:em>intension</html:em> of a program, its pure <html:em>behavior</html:em> as distinct from its <html:em>cost</html:em> measured by an effectful step-counting primitive. The type theory ensures that the behavior is unaffected by the cost accounting.  Unlike <fr:link href="/niu-sterling-grodin-harper-2022/" title="A cost-aware logical framework" uri="https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/" display-uri="niu-sterling-grodin-harper-2022" type="local"><html:strong>calf</html:strong></fr:link>, the present language takes account of <html:em>effects</html:em>, such as probabilistic choice and mutable state; this extension requires a reformulation of <fr:link href="/niu-sterling-grodin-harper-2022/" title="A cost-aware logical framework" uri="https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/" display-uri="niu-sterling-grodin-harper-2022" type="local"><html:strong>calf</html:strong></fr:link>’s approach to cost accounting: rather than rely on a “separable” notion of cost, here <html:em>a cost bound is simply another program</html:em>. To make this formal, we equip every type with an intrinsic preorder, relaxing the precise cost accounting intrinsic to a program to a looser but nevertheless informative estimate.  For example, the cost bound of a probabilistic program is itself a probabilistic program that specifies the distribution of costs.  This approach serves as a streamlined alternative to the standard method of isolating a recurrence that bounds the cost in a manner that readily extends to higher-order, effectful programs.</html:p><html:p>The development proceeds by first introducing the <html:strong>decalf</html:strong> type system, which is based on an intrinsic ordering among terms that restricts in the extensional phase to extensional equality, but in the intensional phase reflects an approximation of the cost of a program of interest.  This formulation is then applied to a number of illustrative examples, including pure and effectful sorting algorithms, simple probabilistic programs, and higher-order functions.  Finally, we justify <html:strong>decalf</html:strong> via a model in the topos of augmented simplicial sets.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2024</fr:year><fr:month>10</fr:month><fr:day>3</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-012Q/</fr:uri><fr:display-uri>jms-012Q</fr:display-uri><fr:route>/jms-012Q/</fr:route><fr:title text="Missing assumptions about the interval in Decalf">Missing assumptions about the interval in <fr:link href="/grodin-niu-sterling-harper-2024/" title=" decalf: a directed, effectful cost-aware logical framework" uri="https://www.jonmsterling.com/grodin-niu-sterling-harper-2024/" display-uri="grodin-niu-sterling-harper-2024" type="local">Decalf</fr:link></fr:title><fr:taxon>Erratum</fr:taxon></fr:frontmatter><fr:mainmatter><html:p>In section 4.2, we assumed only a (non-strict) interval object <fr:tex display="inline"><![CDATA[\mathbb {I}]]></fr:tex>, and then asserted in Definition 4.5 the map <fr:tex display="inline"><![CDATA[(-=1)\colon  \mathbb {I}\to \Omega ]]></fr:tex> was a monomorphism. Obviously, this need not be the case, so it needs to be turned into an assumption about <fr:tex display="inline"><![CDATA[(\mathcal {E},\mathbb {I})]]></fr:tex>. This assumption will, however, hold of the interval in simplicial sets for the following reason: the interval in simplicial sets is the <html:em>nerve</html:em> of the actual poset <fr:tex display="inline"><![CDATA[\{0<1\}]]></fr:tex>, and the statement in question holds for this poset and is preserved by the nerve functor.</html:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree>

  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Manuscripts">Manuscripts</fr:title></fr:frontmatter><fr:mainmatter><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/danielgratzer/" title="Daniel Gratzer" uri="https://www.jonmsterling.com/danielgratzer/" display-uri="danielgratzer" type="local">Daniel Gratzer</fr:link></fr:author><fr:author><fr:link href="/mikeshulman/" title="Mike Shulman" uri="https://www.jonmsterling.com/mikeshulman/" display-uri="mikeshulman" type="local">Mike Shulman</fr:link></fr:author><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2022</fr:year><fr:month>2</fr:month><fr:day>24</fr:day></fr:date><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>16</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/gratzer-shulman-sterling-2024-universes/</fr:uri><fr:display-uri>gratzer-shulman-sterling-2024-universes</fr:display-uri><fr:route>/gratzer-shulman-sterling-2024-universes/</fr:route><fr:title text="Strict universes for Grothendieck topoi">Strict universes for Grothendieck topoi</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="bibtex"><![CDATA[@unpublished{gratzer-shulman-sterling-2024-universes,
  author = {Gratzer, Daniel and Shulman, Michael and Sterling, Jonathan},
  year = {2024},
  month = may,
  doi = {10.48550/arXiv.2202.12012},
  eprint = {2202.12012},
  eprintclass = {math.CT},
  eprinttype = {arXiv},
  note = {Unpublished manuscript},
  title = {Strict universes for Grothendieck topoi},
}]]></fr:meta><fr:meta name="doi">10.48550/arXiv.2202.12012</fr:meta></fr:frontmatter><fr:mainmatter><html:p><fr:link href="/hofmann-streicher-1997/" title="Lifting Grothendieck universes" uri="https://www.jonmsterling.com/hofmann-streicher-1997/" display-uri="hofmann-streicher-1997" type="local">Hofmann and Streicher</fr:link> famously showed how to lift Grothendieck universes into presheaf topoi, and <fr:link href="/streicher-2005/" title="Universes in toposes" uri="https://www.jonmsterling.com/streicher-2005/" display-uri="streicher-2005" type="local">Streicher</fr:link> has extended their result to the case of sheaf topoi by
sheafification. In parallel, <fr:link href="/van-den-berg-moerdijk-2012/" title="Aspects of predicative algebraic set theory III: sheaves" uri="https://www.jonmsterling.com/van-den-berg-moerdijk-2012/" display-uri="van-den-berg-moerdijk-2012" type="local">van den Berg and Moerdijk</fr:link> have shown in the context of algebraic set theory that similar constructions continue to apply even in weaker metatheories. Unfortunately, sheafification seems not to preserve an important <html:em>realignment</html:em> property enjoyed by presheaf universes that plays a critical role in models of univalent type theory as well as <fr:link href="/sterling-2021-thesis/" title="First steps in synthetic Tait computability: the objective metatheory of cubical type theory" uri="https://www.jonmsterling.com/sterling-2021-thesis/" display-uri="sterling-2021-thesis" type="local">synthetic Tait computability</fr:link>. When <html:em>multiple</html:em> universes are present, realignment also implies a coherent interpretation of connectives across all universes that justifies the cumulativity laws present in popular formulations of Martin-Löf type theory.</html:p><html:p>We observe that a slight adjustment to an argument of <fr:link href="/shulman-2015-elegant/" title="The univalence axiom for elegant Reedy presheaves" uri="https://www.jonmsterling.com/shulman-2015-elegant/" display-uri="shulman-2015-elegant" type="local">Shulman</fr:link> constructs a cumulative universe hierarchy satisfying the realignment property at every level in any Grothendieck topos. Hence one has direct-style interpretations of Martin-Löf type theory with cumulative universes into all Grothendieck topoi. A further implication is to extend the reach of recent synthetic methods in the semantics of cubical type theory and the syntactic metatheory of type theory and programming languages to all Grothendieck topoi.</html:p></fr:mainmatter></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2024</fr:year><fr:month>3</fr:month><fr:day>30</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/sterling-2024-lenses/</fr:uri><fr:display-uri>sterling-2024-lenses</fr:display-uri><fr:route>/sterling-2024-lenses/</fr:route><fr:title text="Reflexive graph lenses in univalent foundations">Reflexive graph lenses in univalent foundations</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="doi">10.48550/arXiv.2404.07854</fr:meta><fr:meta name="external">https://arxiv.org/abs/2404.07854</fr:meta></fr:frontmatter><fr:mainmatter><html:p><fr:link href="/permartinl%C3%B6f/" title="Per Martin-Löf" uri="https://www.jonmsterling.com/permartinlöf/" display-uri="permartinlöf" type="local">Martin-Löf</fr:link>’s identity types provide a generic (albeit opaque) notion of identification or “equality” between any two elements of the same type, embodied in a canonical reflexive graph structure <fr:tex display="inline"><![CDATA[(=_A, \mathbf {refl})]]></fr:tex> on any type <fr:tex display="inline"><![CDATA[A]]></fr:tex>. The miracle of <fr:link href="/vladimirvoevodsky/" title="Vladimir Voevodsky" uri="https://www.jonmsterling.com/vladimirvoevodsky/" display-uri="vladimirvoevodsky" type="local">Voevodsky</fr:link>’s <html:em>univalence principle</html:em> is that it ensures, for essentially any naturally occuring structure in mathematics, that this the resultant notion of identification is equivalent to the type of <html:em>isomorphisms</html:em> in the category of such structures. Characterisations of this kind are not automatic and must be established one-by-one; to this end, several authors have employed <html:em>reflexive graphs</html:em> and <html:em>displayed reflexive graphs</html:em> to organise the characterisation of identity types. We contribute <html:strong>reflexive graph lenses</html:strong>, a new family of intermediate abstractions lying between families of reflexive graphs and displayed reflexive graphs that simplifies the characterisation of identity types for complex structures. Every reflexive graph lens gives rise to a (more complicated) displayed reflexive graph, and our experience suggests that many naturally occuring displayed reflexive graphs arise in this way. Evidence for the utility of reflexive graph lenses is given by means of several case studies, including the theory of reflexive graphs itself as well as that of polynomial type operators. Finally, we exhibit an equivalance between the type of reflexive graph fibrations and the type of <html:em>univalent</html:em> reflexive graph lenses.</html:p></fr:mainmatter></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author><fr:author><fr:link href="/danielgratzer/" title="Daniel Gratzer" uri="https://www.jonmsterling.com/danielgratzer/" display-uri="danielgratzer" type="local">Daniel Gratzer</fr:link></fr:author><fr:author><fr:link href="/larsbirkedal/" title="Lars Birkedal" uri="https://www.jonmsterling.com/larsbirkedal/" display-uri="larsbirkedal" type="local">Lars Birkedal</fr:link></fr:author></fr:authors><fr:date><fr:year>2022</fr:year><fr:month>10</fr:month><fr:day>6</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/sterling-gratzer-birkedal-2022/</fr:uri><fr:display-uri>sterling-gratzer-birkedal-2022</fr:display-uri><fr:route>/sterling-gratzer-birkedal-2022/</fr:route><fr:title text="Denotational semantics of general store and polymorphism">Denotational semantics of general store and polymorphism</fr:title><fr:taxon>Reference</fr:taxon><fr:meta name="doi">10.48550/arXiv.2210.02169</fr:meta><fr:meta name="bibtex"><![CDATA[@unpublished{sterling-gratzer-birkedal-2022,
  author = {Sterling, Jonathan and Gratzer, Daniel and Birkedal, Lars},
  year = {2022},
  month = jul,
  note = {Unpublished manuscript},
  title = {Denotational semantics of general store and polymorphism},
}]]></fr:meta></fr:frontmatter><fr:mainmatter><html:p>We contribute the first denotational semantics of polymorphic dependent type theory extended by an equational theory for general (higher-order) reference types and recursive types, based on a combination of guarded recursion and impredicative polymorphism; because our model is based on <html:em>recursively defined semantic worlds</html:em>, it is compatible with polymorphism and relational reasoning about stateful abstract datatypes. We then extend our language with modal constructs for proof-relevant relational reasoning based on the <html:em>logical relations as types</html:em> principle, in which equivalences between imperative abstract datatypes can be established synthetically. Finally we develop a decomposition of the store model as a general construction that extends an arbitrary polymorphic call-by-push-value adjunction with higher-order store, improving on <fr:link href="/paulblainlevy/" title="Paul Blain Levy" uri="https://www.jonmsterling.com/paulblainlevy/" display-uri="paulblainlevy" type="local">Levy</fr:link>'s possible worlds model construction; what is new in relation to prior typed denotational models of higher-order store is that our Kripke worlds need not be syntactically definable, and are thus compatible with relational reasoning in the heap. Our work combines recent advances in the operational semantics of state with the purely denotational viewpoint of <html:em>synthetic guarded domain theory</html:em>.</html:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree>

  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Dissertations">Dissertations</fr:title></fr:frontmatter><fr:mainmatter /></fr:tree>

  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Technical reports">Technical reports</fr:title></fr:frontmatter><fr:mainmatter /></fr:tree>

  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Workshop talks">Workshop talks</fr:title></fr:frontmatter><fr:mainmatter /></fr:tree>


  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Seminar talks">Seminar talks</fr:title></fr:frontmatter><fr:mainmatter /></fr:tree>

  <fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>12</fr:day></fr:date><fr:title text="Roladex">Roladex</fr:title></fr:frontmatter><fr:mainmatter><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors /><fr:uri>https://www.jonmsterling.com/andrewslattery/</fr:uri><fr:display-uri>andrewslattery</fr:display-uri><fr:route>/andrewslattery/</fr:route><fr:title text="Andrew Slattery">Andrew Slattery</fr:title><fr:taxon>Person</fr:taxon><fr:meta name="external">https://andrewslattery.github.io</fr:meta><fr:meta name="position">Research Associate</fr:meta><fr:meta name="institution"><fr:link href="/camcl/" title="Cambridge Computer Laboratory" uri="https://www.jonmsterling.com/camcl/" display-uri="camcl" type="local">Cambridge Computer Laboratory</fr:link></fr:meta><fr:meta name="phd-advisor">nicolagambino</fr:meta><fr:meta name="postdoc-advisor">jonmsterling</fr:meta><fr:meta name="venue">Funded under <fr:link href="/jms-008K/" title="New Spaces for Denotational Semantics" uri="https://www.jonmsterling.com/jms-008K/" display-uri="jms-008K" type="local">New Spaces for Denotational Semantics</fr:link></fr:meta></fr:frontmatter><fr:mainmatter /></fr:tree><fr:tree show-metadata="true" expanded="false" toc="false" numbered="false"><fr:frontmatter><fr:authors /><fr:uri>https://www.jonmsterling.com/jonmsterling/</fr:uri><fr:display-uri>jonmsterling</fr:display-uri><fr:route>/jonmsterling/</fr:route><fr:title text="Jon Sterling">Jon Sterling</fr:title><fr:taxon>Person</fr:taxon><fr:meta name="external">https://www.jonmsterling.com/index/</fr:meta><fr:meta name="institution"><fr:link href="/camcl/" title="Cambridge Computer Laboratory" uri="https://www.jonmsterling.com/camcl/" display-uri="camcl" type="local">Cambridge Computer Laboratory</fr:link>; <fr:link href="/jms-00GP/" title="Clare College" uri="https://www.jonmsterling.com/jms-00GP/" display-uri="jms-00GP" type="local">Clare College</fr:link></fr:meta><fr:meta name="orcid">0000-0002-0585-5564</fr:meta><fr:meta name="position">Associate Professor</fr:meta><fr:meta name="phd-advisor">robertharper</fr:meta><fr:meta name="postdoc-advisor">larsbirkedal</fr:meta></fr:frontmatter><fr:mainmatter><html:p>Associate Professor in Logical Foundations and Formal Methods at University of Cambridge. Formerly a <fr:link href="/jms-0061/" title="TypeSynth: synthetic methods in program verification" uri="https://www.jonmsterling.com/jms-0061/" display-uri="jms-0061" type="local">Marie Skłodowska-Curie Postdoctoral Fellow</fr:link> hosted at <fr:link href="/jms-00GC/" title="Aarhus University" uri="https://www.jonmsterling.com/jms-00GC/" display-uri="jms-00GC" type="local">Aarhus University</fr:link> by <fr:link href="/larsbirkedal/" title="Lars Birkedal" uri="https://www.jonmsterling.com/larsbirkedal/" display-uri="larsbirkedal" type="local">Lars Birkedal</fr:link>, and before this a PhD student of <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>.</html:p><html:p>I am a Bye-Fellow of <fr:link href="/jms-00GP/" title="Clare College" uri="https://www.jonmsterling.com/jms-00GP/" display-uri="jms-00GP" type="local">Clare College</fr:link> from February 2024, and have been elected a Fellow for the coming year.</html:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree>
</fr:mainmatter>
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>9</fr:month>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-008K/</fr:uri>
            <fr:display-uri>jms-008K</fr:display-uri>
            <fr:route>/jms-008K/</fr:route>
            <fr:title text="New Spaces for Denotational Semantics">New Spaces for Denotational Semantics</fr:title>
            <fr:taxon>Grant</fr:taxon>
            <fr:meta name="venue">
              <fr:link href="/afosr/" title="United States Air Force Office of Scientific Research" uri="https://www.jonmsterling.com/afosr/" display-uri="afosr" type="local">United States Air Force Office of Scientific Research</fr:link>
            </fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
  <html:table>
  

  
    
  <html:tr>
  <html:td><html:strong>PI</html:strong>:</html:td>

  <html:td><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jonathan Sterling</fr:link></html:td>
</html:tr>

  
  
    
  <html:tr>
  <html:td><html:strong>Institution</html:strong>:</html:td>

  <html:td><fr:link href="/ucam/" title="University of Cambridge" uri="https://www.jonmsterling.com/ucam/" display-uri="ucam" type="local">University of Cambridge</fr:link></html:td>
</html:tr>

  
  
    
  <html:tr>
  <html:td><html:strong>Funding Agency</html:strong>:</html:td>

  <html:td><fr:link href="/afosr/" title="United States Air Force Office of Scientific Research" uri="https://www.jonmsterling.com/afosr/" display-uri="afosr" type="local">United States Air Force Office of Scientific Research</fr:link></html:td>
</html:tr>

  
  
    
  <html:tr>
  <html:td><html:strong>Program Officer</html:strong>:</html:td>

  <html:td><fr:link href="/tristannguyen/" title="Tristan Nguyen" uri="https://www.jonmsterling.com/tristannguyen/" display-uri="tristannguyen" type="local">Dr. Tristan Nguyen</fr:link></html:td>
</html:tr>

  
  
    
  <html:tr>
  <html:td><html:strong>Award No.</html:strong>:</html:td>

  <html:td>FA9550-23-1-0728</html:td>
</html:tr>

  
  
    
  <html:tr>
  <html:td><html:strong>Years</html:strong>:</html:td>

  <html:td>2023–2028</html:td>
</html:tr>

  
  
    
  <html:tr>
  <html:td><html:strong>Amount</html:strong>:</html:td>

  <html:td>1,221,099 USD</html:td>
</html:tr>

  
  
    
  <html:tr>
  <html:td><html:strong>Status</html:strong>:</html:td>

  <html:td>awarded <fr:link href="https://www.jonmsterling.com/2023-09-27/" type="external">2023-09-27</fr:link></html:td>
</html:tr>

  
</html:table>
<html:p>See <fr:link href="/jms-00AI/" title="Project bibliography" uri="https://www.jonmsterling.com/jms-00AI/" display-uri="jms-00AI" type="local">project bibliography</fr:link>.</html:p><html:p><html:strong>Abstract.</html:strong> What does it mean for a piece of software to be correct? There are many possible degrees and dimensions of correctness, e.g. safety, functional correctness, computational complexity, and security. To grapple with this diversity of verification requirements, semanticists develop <html:strong><html:em>mathematical models of program behavior</html:em></html:strong> that put into relief <html:em>different aspects</html:em> of the physical reality of program execution on hardware, just as physicists create many idealized mathematical models to study different aspects of the material reality of the universe.</html:p><html:p>Mathematical models enable us to reason about program behavior by viewing highly complex objects as being glued together from smaller, simpler objects that are easier to study in isolation. For instance, <html:strong><html:em>operational models</html:em></html:strong> aim to reduce the behavior of a process to that of individual steps of discrete computation that take place on an idealized computer; in contrast, <html:strong><html:em>denotational models</html:em></html:strong> reduce the complex <html:em>global</html:em> behavior of a process to the simpler <html:em>local</html:em> behavior of its constituent subroutines.  One advantage of operational methods is that they are applicable even in situations that challenge the modularity of denotational semantics, e.g. where it is not yet understood how to reduce the global behavior of a program to that of its components. On the other hand, denotational methods provide vastly stronger <html:em>and</html:em> simpler reasoning principles for program verification when available.</html:p><html:p>The central thesis of denotational semantics is that programs arrange themselves into geometrical spaces called <html:strong><html:em>computational domains</html:em></html:strong>, and that a computational process can be thought of as the limit of a sequence of continuous transformations on these domains. Although this thesis has been amply born out for simple kinds of program, today’s most urgent verification requirements pertain to program constructs like concurrency and side effects whose treatment requires the introduction of <html:strong><html:em>new kinds of space</html:em></html:strong>: for instance, the correct treatment of branching behavior for concurrent processes requires the introduction of <html:em>higher-dimensional computational domains</html:em> in which programs can “remember” the specific way that they were glued together.</html:p><html:p><html:strong>This project will extend the reach of denotational semantics</html:strong> and its attendant advantages for program verification into terrains where scientists have historically struggled to enact the reduction of global behavior to local behavior, making essential use of new advances in the <html:em>homotopical</html:em> and <html:em>geometrical</html:em> understanding of computation via <html:strong><html:em>higher dimensional category theory</html:em></html:strong> and <html:strong><html:em>topos theory</html:em></html:strong>. I will investigate two areas that are ripe for reaping the benefits of a modern denotational semantics: the semantics of <html:em>side-effects</html:em> which govern the interaction of a program with the computer’s memory, and the semantics of concurrent processes.</html:p></fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
