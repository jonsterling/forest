<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors />
    <fr:uri>https://www.jonmsterling.com/pacmpl/</fr:uri>
    <fr:display-uri>pacmpl</fr:display-uri>
    <fr:route>/pacmpl/</fr:route>
    <fr:title text="Proceedings of the ACM on Programming Languages">Proceedings of the ACM on Programming Languages</fr:title>
    <fr:taxon>Journal</fr:taxon>
    <fr:meta name="external">https://dl.acm.org/journal/pacmpl</fr:meta>
  </fr:frontmatter>
  <fr:mainmatter>
    <html:p><html:em>Proceedings of the ACM on Programming Languages</html:em> (PACMPL) is a Gold Open Access journal publishing research on all aspects of programming languages, from design to implementation and from mathematical formalisms to empirical studies. Each issue of the journal is devoted to a particular subject area within programming languages and will be announced through publicized Calls for Papers. All accepted papers receive two rounds of reviewing and authors can expect initial decisions regarding submissions in under 3 months. The journal operates in close collaboration with the Special Interest Group on Programming Languages (SIGPLAN) and is committed to making high-quality peer-reviewed scientific research in programming languages free of restrictions on both access and use.</html:p>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/harrisongrodin/" title="Harrison Grodin" uri="https://www.jonmsterling.com/harrisongrodin/" display-uri="harrisongrodin" type="local">Harrison Grodin</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2022</fr:year>
              <fr:month>1</fr:month>
              <fr:day>1</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/niu-sterling-grodin-harper-2022/</fr:uri>
            <fr:display-uri>niu-sterling-grodin-harper-2022</fr:display-uri>
            <fr:route>/niu-sterling-grodin-harper-2022/</fr:route>
            <fr:title text="A cost-aware logical framework">A cost-aware logical framework</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="venue"><fr:link href="/pacmpl/" title="Proceedings of the ACM on Programming Languages" uri="https://www.jonmsterling.com/pacmpl/" display-uri="pacmpl" type="local">Proceedings of the ACM on Programming Languages</fr:link>, Volume 6, Issue POPL</fr:meta>
            <fr:meta name="doi">10.1145/3498670</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>We present calf, a cost-aware logical framework for studying quantitative aspects of functional programs. Taking inspiration from recent work that reconstructs traditional aspects of programming languages in terms of a modal account of phase distinctions, we argue that the cost structure of programs motivates a phase distinction between intension and extension. Armed with this technology, we contribute a synthetic account of cost structure as a computational effect in which cost-aware programs enjoy an internal noninterference property: input/output behavior cannot depend on cost. As a full-spectrum dependent type theory, calf presents a unified language for programming and specification of both cost and behavior that can be integrated smoothly with existing mathematical libraries available in type theoretic proof assistants.</html:p>
            <html:p>We evaluate calf as a general framework for cost analysis by implementing two fundamental techniques for algorithm analysis: the method of recurrence relations and physicist’s method for amortized analysis. We deploy these techniques on a variety of case studies: we prove a tight, closed bound for Euclid’s algorithm, verify the amortized complexity of batched queues, and derive tight, closed bounds for the sequential and parallel complexity of merge sort, all fully mechanized in the Agda proof assistant. Lastly we substantiate the soundness of quantitative reasoning in calf by means of a model construction.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>Donnacha Oisín Kidney</fr:author>
              <fr:author>Nicolas Wu</fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2021</fr:year>
              <fr:month>8</fr:month>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/kidney-wu-2021/</fr:uri>
            <fr:display-uri>kidney-wu-2021</fr:display-uri>
            <fr:route>/kidney-wu-2021/</fr:route>
            <fr:title text="Algebras for weighted search">Algebras for weighted search</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="bibtex"><![CDATA[@article{kidney-wu-2021,
  author = {Kidney, Donnacha Ois\'{i}n and Wu, Nicolas},
  address = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  year = {2021},
  month = aug,
  doi = {10.1145/3473577},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {graph search,Haskell,Agda,monad},
  number = {ICFP},
  title = {Algebras for Weighted Search},
  volume = {5},
}]]></fr:meta>
            <fr:meta name="doi">10.1145/3473577</fr:meta>
            <fr:meta name="venue"><fr:link href="/pacmpl/" title="Proceedings of the ACM on Programming Languages" uri="https://www.jonmsterling.com/pacmpl/" display-uri="pacmpl" type="local">Proceedings of the ACM on Programming Languages</fr:link> (ICFP)</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter />
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/carloangiuli/" title="Carlo Angiuli" uri="https://www.jonmsterling.com/carloangiuli/" display-uri="carloangiuli" type="local">Carlo Angiuli</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/evancavallo/" title="Evan Cavallo" uri="https://www.jonmsterling.com/evancavallo/" display-uri="evancavallo" type="local">Evan Cavallo</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/andersm%C3%B6rtberg/" title="Anders Mörtberg" uri="https://www.jonmsterling.com/andersmörtberg/" display-uri="andersmörtberg" type="local">Anders Mörtberg</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/maxzeuner/" title="Max Zeuner" uri="https://www.jonmsterling.com/maxzeuner/" display-uri="maxzeuner" type="local">Max Zeuner</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2021</fr:year>
              <fr:month>1</fr:month>
              <fr:day>4</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/acmz-2021/</fr:uri>
            <fr:display-uri>acmz-2021</fr:display-uri>
            <fr:route>/acmz-2021/</fr:route>
            <fr:title text="Internalizing representation independence with univalence">Internalizing representation independence with univalence</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="doi">10.1145/3434293</fr:meta>
            <fr:meta name="venue"><fr:link href="/pacmpl/" title="Proceedings of the ACM on Programming Languages" uri="https://www.jonmsterling.com/pacmpl/" display-uri="pacmpl" type="local">Proceedings of the ACM on Programming Languages</fr:link>, Volume 5, Issue POPL</fr:meta>
            <fr:meta name="bibtex"><![CDATA[@article{acmz-2021,
  author = {Angiuli, Carlo and Cavallo, Evan and M\"{o}rtberg, Anders and Zeuner, Max},
  address = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  year = {2021},
  month = jan,
  doi = {10.1145/3434293},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {Proof Assistants,Higher Inductive Types,Cubical Type Theory,Univalence,Representation Independence},
  number = {POPL},
  pages = {1--30},
  title = {Internalizing Representation Independence with Univalence},
  volume = {5},
}]]></fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>In their usual form, representation independence metatheorems provide an external guarantee that two implementations of an abstract interface are interchangeable when they are related by an operation-preserving correspondence. If our programming language is dependently-typed, however, we would like to appeal to such invariance results within the language itself, in order to obtain correctness theorems for complex implementations by transferring them from simpler, related implementations. Recent work in proof assistants has shown that Voevodsky’s univalence principle allows transferring theorems between isomorphic types, but many instances of representation independence in programming involve non-isomorphic representations.</html:p>
            <html:p>In this paper, we develop techniques for establishing internal relational representation independence results in dependent type theory, by using higher inductive types to simultaneously quotient two related implementation types by a heterogeneous correspondence between them. The correspondence becomes an isomorphism between the quotiented types, thereby allowing us to obtain an equality of implementations by univalence. We illustrate our techniques by considering applications to matrices, queues, and finite multisets. Our results are all formalized in Cubical Agda, a recent extension of Agda which supports univalence and higher inductive types in a computationally well-behaved way.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/rasmusm%C3%B8gelberg/" title="Rasmus Ejlers Møgelberg" uri="https://www.jonmsterling.com/rasmusmøgelberg/" display-uri="rasmusmøgelberg" type="local">Rasmus Ejlers Møgelberg</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/niccol%C3%B2veltri/" title="Niccolò Veltri" uri="https://www.jonmsterling.com/niccolòveltri/" display-uri="niccolòveltri" type="local">Niccolò Veltri</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2019</fr:year>
              <fr:month>1</fr:month>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/mogelberg-veltri-2019/</fr:uri>
            <fr:display-uri>mogelberg-veltri-2019</fr:display-uri>
            <fr:route>/mogelberg-veltri-2019/</fr:route>
            <fr:title text="Bisimulation as path type for guarded recursive types">Bisimulation as path type for guarded recursive types</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="bibtex"><![CDATA[@article{mogelberg-veltri-2019,
  author = {M\o{}gelberg, Rasmus Ejlers and Veltri, Niccol\`{o}},
  address = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  year = {2019},
  month = jan,
  doi = {10.1145/3290317},
  journal = {Proceedings of the ACM on Programming Languages},
  number = {POPL},
  title = {Bisimulation as Path Type for Guarded Recursive Types},
  volume = {3},
}]]></fr:meta>
            <fr:meta name="doi">10.1145/3290317</fr:meta>
            <fr:meta name="venue"><fr:link href="/pacmpl/" title="Proceedings of the ACM on Programming Languages" uri="https://www.jonmsterling.com/pacmpl/" display-uri="pacmpl" type="local">Proceedings of the ACM on Programming Languages</fr:link> (POPL)</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter />
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/evancavallo/" title="Evan Cavallo" uri="https://www.jonmsterling.com/evancavallo/" display-uri="evancavallo" type="local">Evan Cavallo</fr:link>
              </fr:author>
              <fr:author>
                <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2019</fr:year>
              <fr:month>1</fr:month>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/cavallo-harper-2019/</fr:uri>
            <fr:display-uri>cavallo-harper-2019</fr:display-uri>
            <fr:route>/cavallo-harper-2019/</fr:route>
            <fr:title text="Higher inductive types in cubical computational type theory">Higher inductive types in cubical computational type theory</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="bibtex"><![CDATA[@article{cavallo-harper-2019,
  author = {Cavallo, Evan and Harper, Robert},
  address = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  year = {2019},
  month = jan,
  doi = {10.1145/3290314},
  issn = {2475-1421},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {cubical type theory,higher inductive types,homotopy type theory},
  number = {POPL},
  pages = {1:1--1:27},
  title = {Higher Inductive Types in Cubical Computational Type Theory},
  volume = {3},
}]]></fr:meta>
            <fr:meta name="doi">10.1145/3290314</fr:meta>
            <fr:meta name="venue"><fr:link href="/pacmpl/" title="Proceedings of the ACM on Programming Languages" uri="https://www.jonmsterling.com/pacmpl/" display-uri="pacmpl" type="local">Proceedings of the ACM on Programming Languages</fr:link> (POPL)</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter />
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
