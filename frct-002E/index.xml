<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors />
    <fr:uri>https://www.jonmsterling.com/frct-002E/</fr:uri>
    <fr:display-uri>frct-002E</fr:display-uri>
    <fr:route>/frct-002E/</fr:route>
    <fr:title text="Separators for cartesian fibrations">Separators for cartesian fibrations</fr:title>
  </fr:frontmatter>
  <fr:mainmatter>
    <html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be an ordinary category. In general,
to compare two morphisms <fr:tex display="inline"><![CDATA[{x}\xrightarrow {{f,g}}{y}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex>, it is not enough to see if they agree on global points <fr:tex display="inline"><![CDATA[{1}\xrightarrow {{u}}{x}]]></fr:tex>, because the behavior of <fr:tex display="inline"><![CDATA[f,g]]></fr:tex> may differ only on generalized elements. In some cases, however, there is a family of objects <fr:tex display="inline"><![CDATA[{\mathopen {}\left (s_{i}\right )\mathclose {}}_{i\in  I}\in  E]]></fr:tex> are together <html:em>adequate</html:em> for comparing morphisms of <fr:tex display="inline"><![CDATA[E]]></fr:tex> in the sense of <fr:link href="/frct-002G/" title="Separating family for a category" uri="https://www.jonmsterling.com/frct-002G/" display-uri="frct-002G" type="local">separating families</fr:link> below.</html:p>
    <fr:tree show-metadata="false">
      <fr:frontmatter>
        <fr:authors />
        <fr:uri>https://www.jonmsterling.com/frct-002G/</fr:uri>
        <fr:display-uri>frct-002G</fr:display-uri>
        <fr:route>/frct-002G/</fr:route>
        <fr:title text="Separating family for a category">Separating family for a category</fr:title>
        <fr:taxon>Definition</fr:taxon>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>Given an ordinary category <fr:tex display="inline"><![CDATA[E]]></fr:tex>, a set-indexed family <fr:tex display="inline"><![CDATA[{\mathopen {}\left (s_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> of <fr:tex display="inline"><![CDATA[E]]></fr:tex>-objects is called a <html:em>small separating family</html:em> for <fr:tex display="inline"><![CDATA[E]]></fr:tex> when, assuming that for all <fr:tex display="inline"><![CDATA[i\in  I]]></fr:tex> and all <fr:tex display="inline"><![CDATA[{s_i}\xrightarrow {{u}}{x}]]></fr:tex> we have <fr:tex display="inline"><![CDATA[u;f=u;g]]></fr:tex>, we then have <fr:tex display="inline"><![CDATA[f=g]]></fr:tex>.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false">
      <fr:frontmatter>
        <fr:authors />
        <fr:uri>https://www.jonmsterling.com/frct-003L/</fr:uri>
        <fr:display-uri>frct-003L</fr:display-uri>
        <fr:route>/frct-003L/</fr:route>
        <fr:taxon>Intuition</fr:taxon>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>The intuition of <fr:link href="/frct-002G/" title="Separating family for a category" uri="https://www.jonmsterling.com/frct-002G/" display-uri="frct-002G" type="local">separating families</fr:link> is that to compare two morphisms <fr:tex display="inline"><![CDATA[{x}\xrightarrow {{f,g}}{y}\in  E]]></fr:tex>, it suffices to check that they behave the same on all <fr:tex display="inline"><![CDATA[s_{i}]]></fr:tex>-shaped figures when <fr:tex display="inline"><![CDATA[{\mathopen {}\left (s_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> is a separating family for <fr:tex display="inline"><![CDATA[E]]></fr:tex>.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false">
      <fr:frontmatter>
        <fr:authors />
        <fr:uri>https://www.jonmsterling.com/frct-002F/</fr:uri>
        <fr:display-uri>frct-002F</fr:display-uri>
        <fr:route>/frct-002F/</fr:route>
        <fr:title text="Well-pointedness of the category of sets">Well-pointedness of the category of sets</fr:title>
        <fr:taxon>Example</fr:taxon>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>In the category of sets, to compare two morphisms it is enough to check
that they agree on global points. This means that the unary family
<fr:tex display="inline"><![CDATA[{\mathopen {}\left \{\mathbf {1}_{\mathbf {Set}}\right \}\mathclose {}}]]></fr:tex> is a separator for <fr:tex display="inline"><![CDATA[\mathbf {Set}]]></fr:tex>, a property referred to more generally as <html:em>well-pointedness</html:em>.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <html:p>We will now generalize the notion of <fr:link href="/frct-002G/" title="Separating family for a category" uri="https://www.jonmsterling.com/frct-002G/" display-uri="frct-002G" type="local">separating family</fr:link> to the case of a cartesian fibration.</html:p>
    <fr:tree show-metadata="false">
      <fr:frontmatter>
        <fr:authors />
        <fr:uri>https://www.jonmsterling.com/frct-002I/</fr:uri>
        <fr:display-uri>frct-002I</fr:display-uri>
        <fr:route>/frct-002I/</fr:route>
        <fr:title text="Agreement on a class of figure shapes">Agreement on a class of figure shapes</fr:title>
        <fr:taxon>Definition</fr:taxon>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>Let <fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex> be a displayed object in a cartesian fibration <fr:tex display="inline"><![CDATA[E]]></fr:tex> over <fr:tex display="inline"><![CDATA[B]]></fr:tex>. A pair of displayed morphisms <fr:tex display="inline"><![CDATA[{\bar {x}}\xrightarrow {{f,g}}{\bar {y}}\in  E]]></fr:tex> are said to <html:em>agree on <fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex>-figures</html:em> when for any <fr:link href="/frct-002K/" title="Figures and figure shapes in the full subfibration" uri="https://www.jonmsterling.com/frct-002K/" display-uri="frct-002K" type="local"><fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex>-figure</fr:link> <fr:tex display="inline"><![CDATA[{\bar {z}}\xrightarrow {{h}}{\bar {x}}]]></fr:tex>, we have <fr:tex display="inline"><![CDATA[{\bar {z}}\xrightarrow {{h;f = h;g}}{\bar {y}}]]></fr:tex>.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false">
      <fr:frontmatter>
        <fr:authors />
        <fr:uri>https://www.jonmsterling.com/frct-002H/</fr:uri>
        <fr:display-uri>frct-002H</fr:display-uri>
        <fr:route>/frct-002H/</fr:route>
        <fr:title text="Small separator for a fibration">Small separator for a fibration</fr:title>
        <fr:taxon>Definition</fr:taxon>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be a cartesian fibration over <fr:tex display="inline"><![CDATA[B]]></fr:tex> such that <fr:tex display="inline"><![CDATA[B]]></fr:tex> has
binary products. A displayed object <fr:tex display="inline"><![CDATA[\bar {s}\in  E_{s}]]></fr:tex> is said to be a <html:em>small separator</html:em> for <fr:tex display="inline"><![CDATA[E]]></fr:tex> when any two vertical maps <fr:tex display="inline"><![CDATA[f,g:\bar {u}\xrightarrow [1_{x}]{}\bar {v}\in  E_{x}]]></fr:tex> are equal when they are <fr:link href="/frct-002I/" title="Agreement on a class of figure shapes" uri="https://www.jonmsterling.com/frct-002I/" display-uri="frct-002I" type="local">agree on <fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex>-figures</fr:link>.</html:p>
      </fr:mainmatter>
    </fr:tree>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:contributor>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:contributor>
            </fr:authors>
            <fr:uri>https://www.jonmsterling.com/frct-000E/</fr:uri>
            <fr:display-uri>frct-000E</fr:display-uri>
            <fr:route>/frct-000E/</fr:route>
            <fr:title text="Properties of fibrations">Properties of fibrations</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-000F/</fr:uri>
                <fr:display-uri>frct-000F</fr:display-uri>
                <fr:route>/frct-000F/</fr:route>
                <fr:title text="Locally small fibrations">Locally small fibrations</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>There are a number of (equivalent) variations on the definition of a locally small fibration. We attempt to provide some intuition for these definitions.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-000G/</fr:uri>
                    <fr:display-uri>frct-000G</fr:display-uri>
                    <fr:route>/frct-000G/</fr:route>
                    <fr:title text="Warmup: locally small family fibrations">Warmup: locally small family fibrations</fr:title>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>An ordinary category <fr:tex display="inline"><![CDATA[E]]></fr:tex> is called <html:em>locally small</html:em> when for any <fr:tex display="inline"><![CDATA[x,y\in  E]]></fr:tex> the collection of morphisms <fr:tex display="inline"><![CDATA[x\to  y]]></fr:tex> is a set.  This property of <fr:tex display="inline"><![CDATA[E]]></fr:tex> can be rephrased in terms of its <fr:link href="/frct-0006/" title="The family fibration" uri="https://www.jonmsterling.com/frct-0006/" display-uri="frct-0006" type="local">family fibration</fr:link> <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{E}]]></fr:tex> over <fr:tex display="inline"><![CDATA[\mathbf {Set}]]></fr:tex> as follows.</html:p>
                    <html:p>Consider an index set <fr:tex display="inline"><![CDATA[I\in  \mathbf {Set}]]></fr:tex> and two families <fr:tex display="inline"><![CDATA[u,v\in  C^I]]></fr:tex>. We may define
an <fr:tex display="inline"><![CDATA[I]]></fr:tex>-indexed collection <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}_{i\in  I}]]></fr:tex> consisting (pointwise) of all the
morphisms <fr:tex display="inline"><![CDATA[u_{i}\to  v_{i}]]></fr:tex> in <fr:tex display="inline"><![CDATA[C]]></fr:tex>:</html:p>
                    <fr:tex display="block"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}_{i} = {\mathopen {}\left \{ f \mid  f: u_{i}\to  v_{i} \right \}\mathclose {}}]]></fr:tex>
                    <html:p>If <fr:tex display="inline"><![CDATA[C]]></fr:tex> is locally small, <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}_{i\in  I}]]></fr:tex> is in fact a family of sets for
any <fr:tex display="inline"><![CDATA[I\in \mathbf {Set}]]></fr:tex> as each <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}_{i}]]></fr:tex> is a set. Conversely, if <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}_{i\in  I}]]></fr:tex>
is a family of sets for any <fr:tex display="inline"><![CDATA[I\in  \mathbf {Set}]]></fr:tex>, then <fr:tex display="inline"><![CDATA[C]]></fr:tex> is locally small as we may
consider in particular the case that <fr:tex display="inline"><![CDATA[I=\mathbf {1}]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-000H/</fr:uri>
                    <fr:display-uri>frct-000H</fr:display-uri>
                    <fr:route>/frct-000H/</fr:route>
                    <fr:title text="A more abstract formulation of locally small family fibrations">A more abstract formulation of locally small family fibrations</fr:title>
                  </fr:frontmatter>
                  <fr:mainmatter><html:p>We will reformulate the local smallness property of the family fibration in a way that uses only the language that makes sense for an arbitrary cartesian fibration, though for now we stick with <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{C}]]></fr:tex>. Given <fr:tex display="inline"><![CDATA[u,v\in  \boldsymbol {\mathcal {F}}_{C}[I]]]></fr:tex>, we have a <fr:link href="/frct-000G/" title="Warmup: locally small family fibrations" uri="https://www.jonmsterling.com/frct-000G/" display-uri="frct-000G" type="local">“relative hom family”</fr:link> <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}\in {\mathbf {Set}}_{/I}]]></fr:tex>. The fact that each <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}_{i}]]></fr:tex> is the set of all morphisms <fr:tex display="inline"><![CDATA[u_{i}\to  v_{i}]]></fr:tex> can be rephrased more abstractly.</html:p><html:p>First we consider the restriction of <fr:tex display="inline"><![CDATA[u\in  \boldsymbol {\mathcal {F}}_{C}[I]]]></fr:tex> to <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{C}[{\mathopen {}\left  [u,v\right  ]\mathclose {}}]]]></fr:tex> as follows:</html:p>
 
  
  <html:figure><fr:resource hash="b217eca10f4ae32ae1b88e3d88aa63ff"><fr:resource-content><html:img src="/b217eca10f4ae32ae1b88e3d88aa63ff.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \DiagramSquare {
    nw/style = pullback,
    west/style = lies over,
    east/style = lies over,
    north/style = {->,exists},
    height = 1.5cm,
    nw = {\mathopen {}\left  [u,v\right  ]\mathclose {}}^{*}u,
    ne = u,
    sw = {{\mathopen {}\left  [u,v\right  ]\mathclose {}}},
    se = I,
    south = p_{{\mathopen {}\left  [u,v\right  ]\mathclose {}}},
    north = \bar {p}_{{\mathopen {}\left  [u,v\right  ]\mathclose {}}}
  }
]]></fr:resource-source></fr:resource></html:figure>
 
<html:p>Explicitly the family <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}^{*}u]]></fr:tex> is indexed in a pair of an element <fr:tex display="inline"><![CDATA[i\in  I]]></fr:tex> and a morphism <fr:tex display="inline"><![CDATA[u_{i}\to  v_{i}]]></fr:tex>.
We can think of <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}^{*}u]]></fr:tex> as the object of elements of <fr:tex display="inline"><![CDATA[u_{i}]]></fr:tex> indexed in pairs <fr:tex display="inline"><![CDATA[(i,u_{i}\to  v_{i})]]></fr:tex>.</html:p><html:p>There is a canonical map
<fr:tex display="inline"><![CDATA[\epsilon _{{\mathopen {}\left  [u,v\right  ]\mathclose {}}}:{\mathopen {}\left  [u,v\right  ]\mathclose {}}^{*}u\xrightarrow [p_{{\mathopen {}\left  [u,v\right  ]\mathclose {}}}]{} v]]></fr:tex> that
“evaluates” each indexing morphism <fr:tex display="inline"><![CDATA[u_{i}\to  v_{i}]]></fr:tex>.</html:p><html:p>That each <fr:tex display="inline"><![CDATA[{\mathopen {}\left  [u,v\right  ]\mathclose {}}_{i}]]></fr:tex> is the set of all morphisms <fr:tex display="inline"><![CDATA[u_{i}\to  v_{i}]]></fr:tex> can be
rephrased as a universal property: for any family <fr:tex display="inline"><![CDATA[h\in {\mathbf {Set}}_{/I}]]></fr:tex> and
morphism <fr:tex display="inline"><![CDATA[\epsilon _{h} : h^{*}u\xrightarrow [h]{} v]]></fr:tex> in <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{C}]]></fr:tex>, there is a
unique cartesian map <fr:tex display="inline"><![CDATA[h^{*}u\to  {\mathopen {}\left  [u,v\right  ]\mathclose {}}^{*}u]]></fr:tex> factoring <fr:tex display="inline"><![CDATA[\epsilon _{h}]]></fr:tex> through <fr:tex display="inline"><![CDATA[\epsilon _{{\mathopen {}\left  [u,v\right  ]\mathclose {}}}]]></fr:tex>
in the sense depicted below:</html:p>
 
  
  <html:figure><fr:resource hash="1f3766c4560ee428799ccf53ed5477df"><fr:resource-content><html:img src="/1f3766c4560ee428799ccf53ed5477df.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \begin {tikzpicture}[diagram]
    \SpliceDiagramSquare {
      height = 1.5cm,
      width = 3cm,
      west/style = lies over,
      east/style = lies over,
      north/node/style = upright desc,
      south/node/style = upright desc,
      nw = {\mathopen {}\left  [u,v\right  ]\mathclose {}}^{*}u,
      ne = v,
      sw = {{\mathopen {}\left  [u,v\right  ]\mathclose {}}},
      se = I,
      south = p_{{\mathopen {}\left  [u,v\right  ]\mathclose {}}},
      north = \epsilon _{{\mathopen {}\left  [u,v\right  ]\mathclose {}}},
    }
    \node  (h/u) [pullback,left = of nw] {$h^{*}u$};
    \node  (h) [left = of sw] {$h$};
    \draw [bend left,->] (h/u) to node [sloped,above] {$\epsilon _{h}$} (ne);
    \draw [lies over] (h/u) to (h);
    \draw [->,exists] (h) to (sw);
    \draw [->,exists] (h/u) to (nw);
    \draw [->,bend right=30] (h) to node [below] {$p_{h}$} (se);
  \end {tikzpicture}
]]></fr:resource-source></fr:resource></html:figure>
 
<html:p>To convince ourselves of this, we note that the family <fr:tex display="inline"><![CDATA[H \coloneqq  {\mathopen {}\left \{u_{i}\to  v_{i}\right \}\mathclose {}}_{i\in  I}]]></fr:tex> itself satisfies the universal property above. Indeed, fix a candidate <fr:tex display="inline"><![CDATA[h \in  {\mathbf {Set}}_{/I}]]></fr:tex> equipped with a map <fr:tex display="inline"><![CDATA[\epsilon _{h} : h^{*}u \xrightarrow [h]{} v]]></fr:tex>. Unfolding the meaning of this map in set theoretical notation, we see that it amounts to a family of maps <fr:tex display="inline"><![CDATA[\epsilon _{h}[i] : \prod _{x\in  h_i} {\mathopen {}\left \{u_i\to  v_i\right \}\mathclose {}}]]></fr:tex> for each <fr:tex display="inline"><![CDATA[i\in  I]]></fr:tex>; such a family immediately induces the desired map <fr:tex display="inline"><![CDATA[h\to  H]]></fr:tex>.</html:p></fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-000I/</fr:uri>
                    <fr:display-uri>frct-000I</fr:display-uri>
                    <fr:route>/frct-000I/</fr:route>
                    <fr:title text="The definition of local smallness">The definition of local smallness</fr:title>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Based on our explorations above, we are now prepared to write down (and
understand) the proper definition of local smallness for an arbitrary cartesian fibration <fr:tex display="inline"><![CDATA[E]]></fr:tex> over <fr:tex display="inline"><![CDATA[B]]></fr:tex>, which should be thought of as a (potentially large) category relative to <fr:tex display="inline"><![CDATA[B]]></fr:tex>.</html:p>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-001C/</fr:uri>
                        <fr:display-uri>frct-001C</fr:display-uri>
                        <fr:route>/frct-001C/</fr:route>
                        <fr:title text="Hom candidates">Hom candidates</fr:title>
                        <fr:taxon>Definition</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter><html:p>For any <fr:tex display="inline"><![CDATA[x\in  B]]></fr:tex> and displayed objects <fr:tex display="inline"><![CDATA[u,v\in  E_{x}]]></fr:tex>, we define a <html:em>hom
  candidate</html:em> for <fr:tex display="inline"><![CDATA[u,v]]></fr:tex> to be a span <fr:tex display="inline"><![CDATA[u\leftarrow  \bar {h} \rightarrow  v]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex> in which the left-hand leg is cartesian:</html:p>
 
  
  <html:figure><fr:resource hash="315a9321b7f7ff5fce65bec137f84450"><fr:resource-content><html:img src="/315a9321b7f7ff5fce65bec137f84450.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \begin {tikzpicture}[diagram]
    \SpliceDiagramSquare <l/>{
      height = 1.5cm,
      west/style = lies over,
      east/style = lies over,
      north/style = <-,
      south/style = <-,
      ne/style = ne pullback,
      ne = \bar {h},
      se = h,
      sw = x,
      nw = u,
      south = p_{h},
      north = \bar {p}_{h}
    }
    \SpliceDiagramSquare <r/>{
      height = 1.5cm,
      west/style = lies over,
      east/style = lies over,
      glue = west,
      glue target = l/,
      ne = v,
      se = x,
      north = \epsilon _{h},
      south = p_{h},
    }
  \end {tikzpicture}
]]></fr:resource-source></fr:resource></html:figure>
 
<html:p>In the above, <fr:tex display="inline"><![CDATA[h]]></fr:tex> should be thought of as a candidate for the “hom object” of <fr:tex display="inline"><![CDATA[u,v]]></fr:tex>,
and <fr:tex display="inline"><![CDATA[\epsilon _{h}]]></fr:tex> should be viewed as the structure of an “evaluation map” for <fr:tex display="inline"><![CDATA[h]]></fr:tex>.
This structure can be rephrased in terms of a displayed category <fr:tex display="inline"><![CDATA[\mathbf {H}_{E_{x}}(u,v)]]></fr:tex> over <fr:tex display="inline"><![CDATA[{B}_{/x}]]></fr:tex>:</html:p><html:ol><html:li>Given <fr:tex display="inline"><![CDATA[h\in  {B}_{/x}]]></fr:tex>, an object of <fr:tex display="inline"><![CDATA[\mathbf {H}_{E_{x}}(u,v)_{h}]]></fr:tex> is given by a hom candidate whose apex in the base is <fr:tex display="inline"><![CDATA[h]]></fr:tex> itself. We will write <fr:tex display="inline"><![CDATA[\bar {h}]]></fr:tex> metonymically
  for the entire hom candidate over <fr:tex display="inline"><![CDATA[h]]></fr:tex>.</html:li>

  <html:li><html:p>Given <fr:tex display="inline"><![CDATA[\alpha :l\to  h\in {B}_{/x}]]></fr:tex> and hom candidates <fr:tex display="inline"><![CDATA[\bar {l}\in  \mathbf {H}_{E_{x}}(u,v)_{l}]]></fr:tex> and <fr:tex display="inline"><![CDATA[\bar {h}\in  \mathbf {H}_{E_{x}}(u,v)_{h}]]></fr:tex>, a morphism <fr:tex display="inline"><![CDATA[\bar {h}\xrightarrow [\alpha ]{} \bar {l}]]></fr:tex> is given by a cartesian morphism <fr:tex display="inline"><![CDATA[\bar \alpha :\bar {l}\xrightarrow [\alpha ]{}\bar {h}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex> such that the following diagram commutes:</html:p>

    
 
  
  <html:figure><fr:resource hash="301ca76b510c90f820fd6cdde2f33288"><fr:resource-content><html:img src="/301ca76b510c90f820fd6cdde2f33288.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
      \begin {tikzpicture}[diagram]
        \node  (u) {$u$};
        \node  (l) [above right = 1.5cm of u,xshift=.5cm] {$\bar {l}$};
        \node  (h) [below right = 1.5cm of u,xshift=.5cm] {$\bar {h}$};
        \node  (v) [below right = 1.5cm of l,xshift=.5cm] {$v$};
        \draw [->] (h) to node [sloped,below] {$\bar {p}_{h}$} (u);
        \draw [->] (l) to node [sloped,above] {$\bar {p}_{l}$} (u);
        \draw [->] (h) to node [sloped,below] {$\epsilon _{h}$} (v);
        \draw [->] (l) to node [sloped,above] {$\epsilon _{l}$} (v);
        \draw [->] (l) to node [upright desc] {$\bar \alpha $} (h);
      \end {tikzpicture}
    ]]></fr:resource-source></fr:resource></html:figure></html:li></html:ol></fr:mainmatter>
                    </fr:tree>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-001B/</fr:uri>
                        <fr:display-uri>frct-001B</fr:display-uri>
                        <fr:route>/frct-001B/</fr:route>
                        <fr:title text="Locally small fibration">Locally small fibration</fr:title>
                        <fr:taxon>Definition</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter>
                        <html:p>A cartesian fibration <fr:tex display="inline"><![CDATA[E]]></fr:tex> over <fr:tex display="inline"><![CDATA[B]]></fr:tex> is <html:em>locally small</html:em> if and only if for
each <fr:tex display="inline"><![CDATA[x\in  B]]></fr:tex> and <fr:tex display="inline"><![CDATA[u,v\in  E_{x}]]></fr:tex>, the total category <fr:tex display="inline"><![CDATA[\widetilde {\mathbf {H}_{E_{x}}(u,v)}]]></fr:tex> of <fr:link href="/frct-001C/" title="Hom candidates" uri="https://www.jonmsterling.com/frct-001C/" display-uri="frct-001C" type="local">hom candidates</fr:link>
has a terminal object. Viewed as a displayed object in <fr:tex display="inline"><![CDATA[E]]></fr:tex>, we shall write <fr:tex display="inline"><![CDATA[\overline {\mathbf {hom}}_{E_{x}}(u,v)]]></fr:tex> lying over <fr:tex display="inline"><![CDATA[\mathbf {hom}_{E_{x}}{\mathopen {}\left (u,v\right )\mathclose {}}]]></fr:tex> for the terminal hom candidate.</html:p>
                      </fr:mainmatter>
                    </fr:tree>
                  </fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:uri>https://www.jonmsterling.com/frct-000J/</fr:uri>
                <fr:display-uri>frct-000J</fr:display-uri>
                <fr:route>/frct-000J/</fr:route>
                <fr:title text="Globally small fibrations">Globally small fibrations</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>In ordinary category theory, a category <fr:tex display="inline"><![CDATA[C]]></fr:tex> is called <html:em>small</html:em> when the objects of <fr:tex display="inline"><![CDATA[C]]></fr:tex> can be arranged into a set, and so can for every <fr:tex display="inline"><![CDATA[x,y\in  C]]></fr:tex> the collection of morphisms <fr:tex display="inline"><![CDATA[x\to  y]]></fr:tex>. It is useful to separate these two conditions when we generalize them to fibrations. The latter is called <fr:link href="/frct-000F/" title="Locally small fibrations" uri="https://www.jonmsterling.com/frct-000F/" display-uri="frct-000F" type="local"><html:em>local smallness</html:em></fr:link>; the former is called <html:em>global smallness</html:em> by <fr:link href="/jacobs-1999/" title="Categorical logic and type theory" uri="https://www.jonmsterling.com/jacobs-1999/" display-uri="jacobs-1999" type="local">Jacobs</fr:link> and factors through an important concept: the <html:em>generic object</html:em>.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-001D/</fr:uri>
                    <fr:display-uri>frct-001D</fr:display-uri>
                    <fr:route>/frct-001D/</fr:route>
                    <fr:title text="Global smallness">Global smallness</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>An ordinary category is called <html:em>globally small</html:em> when it has a set of objects.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:contributor>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:contributor>
                    </fr:authors>
                    <fr:uri>https://www.jonmsterling.com/frct-000K/</fr:uri>
                    <fr:display-uri>frct-000K</fr:display-uri>
                    <fr:route>/frct-000K/</fr:route>
                    <fr:title text="Generic objects">Generic objects</fr:title>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Up to equivalence of categories, we may detect global smallness of a category <fr:tex display="inline"><![CDATA[C]]></fr:tex> from the perspective of the <fr:link href="/frct-0006/" title="The family fibration" uri="https://www.jonmsterling.com/frct-0006/" display-uri="frct-0006" type="local">family fibration</fr:link> <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{C}]]></fr:tex>. In particular, a category is equivalent to a globally small category when its family fibration has a <html:em>generic object</html:em> in the following sense.</html:p>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors>
                          <fr:author>
                            <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                          </fr:author>
                        </fr:authors>
                        <fr:uri>https://www.jonmsterling.com/frct-001E/</fr:uri>
                        <fr:display-uri>frct-001E</fr:display-uri>
                        <fr:route>/frct-001E/</fr:route>
                        <fr:title text="Generic object">Generic object</fr:title>
                        <fr:taxon>Definition</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter>
                        <html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be a cartesian fibration over <fr:tex display="inline"><![CDATA[B]]></fr:tex>; a <html:em>generic object</html:em> for <fr:tex display="inline"><![CDATA[E]]></fr:tex> is defined to be an object <fr:tex display="inline"><![CDATA[\bar {u}\in  \widetilde {E}]]></fr:tex>  such that for any <fr:tex display="inline"><![CDATA[\bar {z}\in  \widetilde {E}]]></fr:tex> there exists a cartesian map <fr:tex display="inline"><![CDATA[\bar {z}\to  \bar {u}]]></fr:tex>.</html:p>
                        <html:p><html:strong>Warning.</html:strong> Our terminology differs from that of <fr:link href="/jacobs-1999/" title="Categorical logic and type theory" uri="https://www.jonmsterling.com/jacobs-1999/" display-uri="jacobs-1999" type="local">Jacobs</fr:link>; what we refer to as a <html:em>generic object</html:em> here is <fr:link href="/jacobs-1999/" title="Categorical logic and type theory" uri="https://www.jonmsterling.com/jacobs-1999/" display-uri="jacobs-1999" type="local">Jacobs’</fr:link> <html:em>weak generic object</html:em>. We prefer the unqualified terminology, as generic objects in the stronger sense are very rare.</html:p>
                      </fr:mainmatter>
                    </fr:tree>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-000L/</fr:uri>
                        <fr:display-uri>frct-000L</fr:display-uri>
                        <fr:route>/frct-000L/</fr:route>
                        <fr:title text="Globally small categories">Globally small categories</fr:title>
                        <fr:taxon>Theorem</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter><html:p>An ordinary category <fr:tex display="inline"><![CDATA[C]]></fr:tex> is equivalent to a globally small category if and only if the <fr:link href="/frct-0006/" title="The family fibration" uri="https://www.jonmsterling.com/frct-0006/" display-uri="frct-0006" type="local">family fibration</fr:link> <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{C}]]></fr:tex> has a <fr:link href="/frct-001E/" title="Generic object" uri="https://www.jonmsterling.com/frct-001E/" display-uri="frct-001E" type="local">generic object</fr:link>.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors /><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
<html:p>To see that this is the case, suppose that <fr:tex display="inline"><![CDATA[C]]></fr:tex> has a set of objects. Then <fr:tex display="inline"><![CDATA[C\in \mathbf {Set}]]></fr:tex> and we define <fr:tex display="inline"><![CDATA[\lfloor {C}\rfloor ]]></fr:tex> to be the displayed object <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{x\right \}\mathclose {}}_{x\in  C}\in  \boldsymbol {\mathcal {F}}_{C}[C]]]></fr:tex>. Fixing <fr:tex display="inline"><![CDATA[I\in  \mathbf {Set}]]></fr:tex> and <fr:tex display="inline"><![CDATA[z\in  C^I]]></fr:tex>, we consider the cartesian map displayed over <fr:tex display="inline"><![CDATA[z : I \to  C]]></fr:tex>:</html:p>


 
  
  <html:figure><fr:resource hash="5d8243bcd025a3455631ed1ad88a335b"><fr:resource-content><html:img src="/5d8243bcd025a3455631ed1ad88a335b.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \DiagramSquare {
    height = 1.5cm,
    width = 3cm,
    west/style = lies over,
    east/style = lies over,
    sw = I,
    se = C,
    south = z,
    ne = {\mathopen {}\left \{x\right \}\mathclose {}}_{x\in  C},
    nw = {z = {\mathopen {}\left \{z\,i\right \}\mathclose {}}_{i\in  I}}
  }
]]></fr:resource-source></fr:resource></html:figure>
 


<html:p>Conversely assume that <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{C}]]></fr:tex> has a generic object <fr:tex display="inline"><![CDATA[\bar {u}\in \boldsymbol {\mathcal {F}}_{C}[U]]]></fr:tex> for some <fr:tex display="inline"><![CDATA[U\in  \mathbf {Set}]]></fr:tex>; then we may equip <fr:tex display="inline"><![CDATA[U]]></fr:tex> with the structure of a globally small category such that <fr:tex display="inline"><![CDATA[U]]></fr:tex> is equivalent to <fr:tex display="inline"><![CDATA[C]]></fr:tex>, using the canonical <fr:link href="/frct-003V/" title="Cleaving the family fibration" uri="https://www.jonmsterling.com/frct-003V/" display-uri="frct-003V" type="local">cleaving of the family fibration</fr:link>. In particular, given <fr:tex display="inline"><![CDATA[{1}\xrightarrow {{x,y}}{U}]]></fr:tex> we define a morphism from <fr:tex display="inline"><![CDATA[x]]></fr:tex> to <fr:tex display="inline"><![CDATA[y]]></fr:tex> to be given by a vertical map <fr:tex display="inline"><![CDATA[{x^{*}{\bar {u}}}\xrightarrow {{h}}{y^{*}{\bar {u}}}]]></fr:tex> in <fr:tex display="inline"><![CDATA[\boldsymbol {\mathcal {F}}_{C}{\mathopen {}\left  [1\right  ]\mathclose {}}\simeq  C]]></fr:tex>.</html:p>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                    </fr:tree>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-000P/</fr:uri>
                    <fr:display-uri>frct-000P</fr:display-uri>
                    <fr:route>/frct-000P/</fr:route>
                    <fr:title text="Globally small fibration">Globally small fibration</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>A cartesian fibration <fr:tex display="inline"><![CDATA[E]]></fr:tex> over <fr:tex display="inline"><![CDATA[B]]></fr:tex> is called <html:em>globally small</html:em> when it has a <fr:link href="/frct-001E/" title="Generic object" uri="https://www.jonmsterling.com/frct-001E/" display-uri="frct-001E" type="local">generic object</fr:link>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors />
                <fr:uri>https://www.jonmsterling.com/frct-002E/</fr:uri>
                <fr:display-uri>frct-002E</fr:display-uri>
                <fr:route>/frct-002E/</fr:route>
                <fr:title text="Separators for cartesian fibrations">Separators for cartesian fibrations</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be an ordinary category. In general,
to compare two morphisms <fr:tex display="inline"><![CDATA[{x}\xrightarrow {{f,g}}{y}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex>, it is not enough to see if they agree on global points <fr:tex display="inline"><![CDATA[{1}\xrightarrow {{u}}{x}]]></fr:tex>, because the behavior of <fr:tex display="inline"><![CDATA[f,g]]></fr:tex> may differ only on generalized elements. In some cases, however, there is a family of objects <fr:tex display="inline"><![CDATA[{\mathopen {}\left (s_{i}\right )\mathclose {}}_{i\in  I}\in  E]]></fr:tex> are together <html:em>adequate</html:em> for comparing morphisms of <fr:tex display="inline"><![CDATA[E]]></fr:tex> in the sense of <fr:link href="/frct-002G/" title="Separating family for a category" uri="https://www.jonmsterling.com/frct-002G/" display-uri="frct-002G" type="local">separating families</fr:link> below.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002G/</fr:uri>
                    <fr:display-uri>frct-002G</fr:display-uri>
                    <fr:route>/frct-002G/</fr:route>
                    <fr:title text="Separating family for a category">Separating family for a category</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Given an ordinary category <fr:tex display="inline"><![CDATA[E]]></fr:tex>, a set-indexed family <fr:tex display="inline"><![CDATA[{\mathopen {}\left (s_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> of <fr:tex display="inline"><![CDATA[E]]></fr:tex>-objects is called a <html:em>small separating family</html:em> for <fr:tex display="inline"><![CDATA[E]]></fr:tex> when, assuming that for all <fr:tex display="inline"><![CDATA[i\in  I]]></fr:tex> and all <fr:tex display="inline"><![CDATA[{s_i}\xrightarrow {{u}}{x}]]></fr:tex> we have <fr:tex display="inline"><![CDATA[u;f=u;g]]></fr:tex>, we then have <fr:tex display="inline"><![CDATA[f=g]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-003L/</fr:uri>
                    <fr:display-uri>frct-003L</fr:display-uri>
                    <fr:route>/frct-003L/</fr:route>
                    <fr:taxon>Intuition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>The intuition of <fr:link href="/frct-002G/" title="Separating family for a category" uri="https://www.jonmsterling.com/frct-002G/" display-uri="frct-002G" type="local">separating families</fr:link> is that to compare two morphisms <fr:tex display="inline"><![CDATA[{x}\xrightarrow {{f,g}}{y}\in  E]]></fr:tex>, it suffices to check that they behave the same on all <fr:tex display="inline"><![CDATA[s_{i}]]></fr:tex>-shaped figures when <fr:tex display="inline"><![CDATA[{\mathopen {}\left (s_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> is a separating family for <fr:tex display="inline"><![CDATA[E]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002F/</fr:uri>
                    <fr:display-uri>frct-002F</fr:display-uri>
                    <fr:route>/frct-002F/</fr:route>
                    <fr:title text="Well-pointedness of the category of sets">Well-pointedness of the category of sets</fr:title>
                    <fr:taxon>Example</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>In the category of sets, to compare two morphisms it is enough to check
that they agree on global points. This means that the unary family
<fr:tex display="inline"><![CDATA[{\mathopen {}\left \{\mathbf {1}_{\mathbf {Set}}\right \}\mathclose {}}]]></fr:tex> is a separator for <fr:tex display="inline"><![CDATA[\mathbf {Set}]]></fr:tex>, a property referred to more generally as <html:em>well-pointedness</html:em>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <html:p>We will now generalize the notion of <fr:link href="/frct-002G/" title="Separating family for a category" uri="https://www.jonmsterling.com/frct-002G/" display-uri="frct-002G" type="local">separating family</fr:link> to the case of a cartesian fibration.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002I/</fr:uri>
                    <fr:display-uri>frct-002I</fr:display-uri>
                    <fr:route>/frct-002I/</fr:route>
                    <fr:title text="Agreement on a class of figure shapes">Agreement on a class of figure shapes</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Let <fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex> be a displayed object in a cartesian fibration <fr:tex display="inline"><![CDATA[E]]></fr:tex> over <fr:tex display="inline"><![CDATA[B]]></fr:tex>. A pair of displayed morphisms <fr:tex display="inline"><![CDATA[{\bar {x}}\xrightarrow {{f,g}}{\bar {y}}\in  E]]></fr:tex> are said to <html:em>agree on <fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex>-figures</html:em> when for any <fr:link href="/frct-002K/" title="Figures and figure shapes in the full subfibration" uri="https://www.jonmsterling.com/frct-002K/" display-uri="frct-002K" type="local"><fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex>-figure</fr:link> <fr:tex display="inline"><![CDATA[{\bar {z}}\xrightarrow {{h}}{\bar {x}}]]></fr:tex>, we have <fr:tex display="inline"><![CDATA[{\bar {z}}\xrightarrow {{h;f = h;g}}{\bar {y}}]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002H/</fr:uri>
                    <fr:display-uri>frct-002H</fr:display-uri>
                    <fr:route>/frct-002H/</fr:route>
                    <fr:title text="Small separator for a fibration">Small separator for a fibration</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be a cartesian fibration over <fr:tex display="inline"><![CDATA[B]]></fr:tex> such that <fr:tex display="inline"><![CDATA[B]]></fr:tex> has
binary products. A displayed object <fr:tex display="inline"><![CDATA[\bar {s}\in  E_{s}]]></fr:tex> is said to be a <html:em>small separator</html:em> for <fr:tex display="inline"><![CDATA[E]]></fr:tex> when any two vertical maps <fr:tex display="inline"><![CDATA[f,g:\bar {u}\xrightarrow [1_{x}]{}\bar {v}\in  E_{x}]]></fr:tex> are equal when they are <fr:link href="/frct-002I/" title="Agreement on a class of figure shapes" uri="https://www.jonmsterling.com/frct-002I/" display-uri="frct-002I" type="local">agree on <fr:tex display="inline"><![CDATA[\bar {s}]]></fr:tex>-figures</fr:link>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:uri>https://www.jonmsterling.com/frct-002L/</fr:uri>
                <fr:display-uri>frct-002L</fr:display-uri>
                <fr:route>/frct-002L/</fr:route>
                <fr:title text="Definable classes à la Bénabou">Definable classes à la <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link></fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>A class of sets <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is sometimes said to be <html:em>formally definable</html:em> when there is a formula <fr:tex display="inline"><![CDATA[{\mathopen {}\left (x \mid  \phi _{\mathfrak {C} {\mathopen {}\left (x\right )\mathclose {}}}\right )\mathclose {}}]]></fr:tex> in the language of set theory such that a set <fr:tex display="inline"><![CDATA[S]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> if and only if <fr:tex display="inline"><![CDATA[\phi _{\mathfrak {C}}{\mathopen {}\left (S\right )\mathclose {}}]]></fr:tex> holds. This concept is a bit sensitive, as it presupposes that we have a notion of “class” whose constituents are not
all definable in this sense.</html:p>
                <html:p>A better behaved notion of definability for sets than the formal one is
given <html:em>model-theoretically</html:em>, i.e. relative to a model <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> of set
theory in some ambient set theory. We will refer to
an element of <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> as a set, and a subcollection of <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex>
as a class.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002U/</fr:uri>
                    <fr:display-uri>frct-002U</fr:display-uri>
                    <fr:route>/frct-002U/</fr:route>
                    <fr:title text="Representable class of sets">Representable class of sets</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>A class of sets <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> is called <html:em>representable</html:em> when there is a set <fr:tex display="inline"><![CDATA[C\in \mathscr {M}]]></fr:tex> such that <fr:tex display="inline"><![CDATA[U\in  C]]></fr:tex> if and only if <fr:tex display="inline"><![CDATA[U\in \mathfrak {C}]]></fr:tex>.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors />
                    <fr:uri>https://www.jonmsterling.com/frct-002V/</fr:uri>
                    <fr:display-uri>frct-002V</fr:display-uri>
                    <fr:route>/frct-002V/</fr:route>
                    <fr:title text="Definable class of sets">Definable class of sets</fr:title>
                    <fr:taxon>Definition</fr:taxon>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>A class of sets <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> is called <html:em>definable</html:em> when for any representable class <fr:tex display="inline"><![CDATA[\mathfrak {S}]]></fr:tex>, the class <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {S}]]></fr:tex> is representable.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <html:p>Bénabou then generalizes these definitions to an arbitrary fibration, in such a way that the general fibered notion of definable class is equivalent in the fundamental self-indexing <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> to that of <fr:link href="/frct-002V/" title="Definable class of sets" uri="https://www.jonmsterling.com/frct-002V/" display-uri="frct-002V" type="local">definable classes</fr:link>.</html:p>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:uri>https://www.jonmsterling.com/frct-002Q/</fr:uri>
                    <fr:display-uri>frct-002Q</fr:display-uri>
                    <fr:route>/frct-002Q/</fr:route>
                    <fr:title text="Set-theoretic intuition for Bénabou's definability">Set-theoretic intuition for <fr:link href="/jeanb%C3%A9nabou/" title="Jean Bénabou" uri="https://www.jonmsterling.com/jeanbénabou/" display-uri="jeanbénabou" type="local">Bénabou</fr:link>'s definability</fr:title>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>To motivate Bénabou’s general notion of definability, we will first develop an alternative perspective on definability for classes of sets in terms of <html:em>families</html:em> of sets.</html:p>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-002M/</fr:uri>
                        <fr:display-uri>frct-002M</fr:display-uri>
                        <fr:route>/frct-002M/</fr:route>
                        <fr:title text="Closure of a class of sets under base change">Closure of a class of sets under base change</fr:title>
                        <fr:taxon>Construction</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter>
                        <html:p>Let <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> be a class of sets; there exists a class <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> of <html:em>families</html:em>
of sets that contains <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> exactly when each
<fr:tex display="inline"><![CDATA[S_{i}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>. We will refer to <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> as the <html:em>closure under base change</html:em> of <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>, a name motivated by the fact that when <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>,
then for any <fr:tex display="inline"><![CDATA[u:J\to  I]]></fr:tex>, the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{uj}\right )\mathclose {}}_{j\in  J}]]></fr:tex> also lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>.</html:p>
                      </fr:mainmatter>
                    </fr:tree>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-002N/</fr:uri>
                        <fr:display-uri>frct-002N</fr:display-uri>
                        <fr:route>/frct-002N/</fr:route>
                        <fr:title text="From classes of families to classes of sets">From classes of families to classes of sets</fr:title>
                        <fr:taxon>Construction</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter>
                        <html:p>Conversely to <fr:link href="/frct-002M/" title="Closure of a class of sets under base change" uri="https://www.jonmsterling.com/frct-002M/" display-uri="frct-002M" type="local">the closure of a class of sets under change of base</fr:link>, we may take a class of <html:em>families</html:em> of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> to the the class of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}_{1}\subseteq {\mathscr {M}}]]></fr:tex> spanned by sets <fr:tex display="inline"><![CDATA[S]]></fr:tex> such that the singleton family <fr:tex display="inline"><![CDATA[{\mathopen {}\left \{S\right \}\mathclose {}}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>.</html:p>
                      </fr:mainmatter>
                    </fr:tree>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-002P/</fr:uri>
                        <fr:display-uri>frct-002P</fr:display-uri>
                        <fr:route>/frct-002P/</fr:route>
                        <fr:title text="Definable class of families of sets">Definable class of families of sets</fr:title>
                        <fr:taxon>Definition</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter>
                        <html:p>A class of families of sets <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> is said to be <html:em>definable</html:em> when it is stable and moreover, for any family of sets <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex>, there exists a subset <fr:tex display="inline"><![CDATA[J\subseteq  I]]></fr:tex> such that the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{j}\right )\mathclose {}}_{j\in  J}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex>, and moreover, such that <fr:tex display="inline"><![CDATA[u:K\to  I]]></fr:tex> factors through <fr:tex display="inline"><![CDATA[J\subseteq  I]]></fr:tex> whenever the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{uk}\right )\mathclose {}}_{k\in  K}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex>.</html:p>
                      </fr:mainmatter>
                    </fr:tree>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-002R/</fr:uri>
                        <fr:display-uri>frct-002R</fr:display-uri>
                        <fr:route>/frct-002R/</fr:route>
                        <fr:taxon>Intuition</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter>
                        <html:p>A stable class of families of sets is definable when any family of sets can be restricted to a “biggest” subfamily that lies in the class.</html:p>
                      </fr:mainmatter>
                    </fr:tree>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors />
                        <fr:uri>https://www.jonmsterling.com/frct-002T/</fr:uri>
                        <fr:display-uri>frct-002T</fr:display-uri>
                        <fr:route>/frct-002T/</fr:route>
                        <fr:title text="Characterization of definable classes of families">Characterization of definable classes of families</fr:title>
                        <fr:taxon>Lemma</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[\mathfrak {C}\subseteq \mathscr {M}]]></fr:tex> be a class of sets; then <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets if and only if <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a definable class of sets.</html:p>
 
   
   <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors /><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>Suppose that <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a definable class of sets. To
  check that <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets,
  we fix a family <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> not necessarily lying in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>. Because <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is definable, the intersection <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap  \bigcup _{i\in  I}S_{i}]]></fr:tex> is represented by a set <fr:tex display="inline"><![CDATA[U]]></fr:tex>. We therefore take the subset <fr:tex display="inline"><![CDATA[J = {\mathopen {}\left \{i \in  I\mid  S_i\in  U\right \}\mathclose {}}\subseteq  I]]></fr:tex>, and verify that the base change <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{j}\right )\mathclose {}}_{j\in  J}]]></fr:tex> is the largest approximation of <fr:tex display="inline"><![CDATA[{\mathopen {}\left (S_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> by a family lying in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>.</html:p>

  <html:p>Conversely suppose that <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is a definable class of families of sets. To see that <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is definable, we fix a class <fr:tex display="inline"><![CDATA[\mathfrak {U}]]></fr:tex> represented by a set <fr:tex display="inline"><![CDATA[U\in \mathscr {M}]]></fr:tex> to check that <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {U}]]></fr:tex> is representable. We consider the family of sets <fr:tex display="inline"><![CDATA[{\mathopen {}\left (u\right )\mathclose {}}_{u\in  U}]]></fr:tex>; because <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex> is definable, there is a largest subset <fr:tex display="inline"><![CDATA[V\subseteq  U]]></fr:tex> such that the change of base <fr:tex display="inline"><![CDATA[{\mathopen {}\left (v\right )\mathclose {}}_{v\in  V}]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\bar {\mathfrak {C}}]]></fr:tex>, i.e. such that each <fr:tex display="inline"><![CDATA[v\in  V]]></fr:tex> lies in <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex>. Therefore <fr:tex display="inline"><![CDATA[\mathfrak {C}\cap \mathfrak {U}]]></fr:tex> is represented by the set <fr:tex display="inline"><![CDATA[V]]></fr:tex>.</html:p>
</fr:mainmatter></fr:tree>
 
</fr:mainmatter>
                    </fr:tree>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:uri>https://www.jonmsterling.com/frct-002S/</fr:uri>
                    <fr:display-uri>frct-002S</fr:display-uri>
                    <fr:route>/frct-002S/</fr:route>
                    <fr:title text="Bénabou’s notion of definability">Bénabou’s notion of definability</fr:title>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>We will now construe <fr:link href="/frct-002Q/" title="Set-theoretic intuition for Bénabou's definability" uri="https://www.jonmsterling.com/frct-002Q/" display-uri="frct-002Q" type="local">set-theoretic definability</fr:link> as the instantiation at the fundamental self-indexing <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> of a more general notion of definability for classes of objects in a cartesian fibration, defined forthwith. The following definition of definability in a cartesian fibration is due to Bénabou, but is discussed in print by <fr:link href="/borceux-hca-2/" title="Handbook of categorical algebra 2: categories and structures" uri="https://www.jonmsterling.com/borceux-hca-2/" display-uri="borceux-hca-2" type="local">Borceux</fr:link>, <fr:link href="/jacobs-1999/" title="Categorical logic and type theory" uri="https://www.jonmsterling.com/jacobs-1999/" display-uri="jacobs-1999" type="local">Jacobs</fr:link>, and <fr:link href="/streicher-fcjb/" title="Fibred categories à la Jean Bénabou" uri="https://www.jonmsterling.com/streicher-fcjb/" display-uri="streicher-fcjb" type="local">Streicher</fr:link>.</html:p>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors>
                          <fr:author>
                            <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                          </fr:author>
                        </fr:authors>
                        <fr:uri>https://www.jonmsterling.com/frct-002W/</fr:uri>
                        <fr:display-uri>frct-002W</fr:display-uri>
                        <fr:route>/frct-002W/</fr:route>
                        <fr:title text="Definable class in a fibration">Definable class in a fibration</fr:title>
                        <fr:taxon>Definition</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter><html:p>Let <fr:tex display="inline"><![CDATA[E]]></fr:tex> be a cartesian fibration over <fr:tex display="inline"><![CDATA[B]]></fr:tex>. A <html:em>definable class</html:em> <fr:tex display="inline"><![CDATA[\mathfrak {F}]]></fr:tex> in <fr:tex display="inline"><![CDATA[E]]></fr:tex> is a stable subcollection of the displayed objects of <fr:tex display="inline"><![CDATA[E]]></fr:tex> such that for any <fr:tex display="inline"><![CDATA[\bar {u}\in  E_{u}]]></fr:tex>, there exists a cartesian map <fr:tex display="inline"><![CDATA[\bar {v}\to  \bar {u}]]></fr:tex> lying over a monomorphism <fr:tex display="inline"><![CDATA[v\rightarrowtail  u]]></fr:tex> such that <fr:tex display="inline"><![CDATA[\bar {v}\in  \mathfrak {F}]]></fr:tex> and, moreover, any cartesian morphism <fr:tex display="inline"><![CDATA[\bar {w}\to \bar {u}]]></fr:tex> such that <fr:tex display="inline"><![CDATA[\bar {w}\in \mathfrak {F}]]></fr:tex> factors through <fr:tex display="inline"><![CDATA[\bar {v}\to \bar {u}]]></fr:tex>.</html:p>
 
  
  <html:figure><fr:resource hash="e7463183c4e17176f720bc881da96753"><fr:resource-content><html:img src="/e7463183c4e17176f720bc881da96753.svg" /></fr:resource-content><fr:resource-source type="latex" part="preamble"><![CDATA[
   
  \RequirePackage{tikz}
 \RequirePackage{amsmath}
 \usetikzlibrary{backgrounds, intersections, calc, spath3, fit}

 \definecolor{catccolor}{RGB}{255,244,138}
 \tikzstyle{dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
 \tikzstyle{catc}=[catccolor!60]
 \tikzstyle{catd}=[orange!40]
 \tikzstyle{cate}=[red!40]
 \tikzstyle{catf}=[blue!10]
 \tikzstyle{catg}=[green!25]


 \tikzstyle{blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
 \tikzstyle{white halo}=[fill=white, opacity=0.7, rounded corners]

 \NewDocumentCommand\CreateRect{D<>{} m m}{
   \path
     coordinate (#1nw)
     ++(#2,-#3) coordinate (#1se)
     coordinate (#1sw) at (#1se -| #1nw)
     coordinate (#1ne) at (#1nw -| #1se)
   ;

   \path[spath/save = #1north] (#1nw) to (#1ne);
   \path[spath/save = #1west] (#1nw) to (#1sw);
   \path[spath/save = #1east] (#1ne) to (#1se);
   \path[spath/save = #1south] (#1sw) to (#1se);
 }

   
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
 \usetikzlibrary{matrix,arrows}
 \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
 \usetikzlibrary{decorations.pathreplacing}
 \usetikzlibrary{decorations.pathmorphing}
 \usetikzlibrary{decorations.markings}

 \tikzset{
   desc/.style={sloped, fill=white,inner sep=2pt},
   upright desc/.style={fill=white,inner sep=2pt},
   pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pullback 45/.style = {
     append after command={
       \pgfextra{
         \draw[rotate = 45] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   ne pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,-.5cm)$) -- ++(-0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   sw pullback/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (.2cm,.5cm)$) -- ++(0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   dotted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [densely dotted] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   muted pullback/.style = {
     append after command={
       \pgfextra{
         \draw [gray] ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
       }
     }
   },
   pushout/.style = {
     append after command={
       \pgfextra{
         \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
       }
     }
   },
   between/.style args={#1 and #2}{
     at = ($(#1)!0.5!(#2)$)
   },
   diagram/.style = {
     on grid,
     node distance=2cm,
     commutative diagrams/every diagram,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
     }
   },
   fibration/.style = {
     -{Triangle[open]}
   },
   etale/.style = {
     -{Triangle[open]}
   },
   etale cover/.style= {
     >={Triangle[open]},->.>
   },
   opfibration/.style = {
     -{Triangle}
   },
   lies over/.style = {
     |-{Triangle[open]}
   },
   op lies over/.style = {
     |-{Triangle}
   },
   embedding/.style = {
     {right hook}->
   },
   open immersion/.style = {
     {right hook}-{Triangle[open]}
   },
   closed immersion/.style = {
     {right hook}-{Triangle}
   },
   closed immersion*/.style = {
     {left hook}-{Triangle}
   },
   embedding*/.style = {
     {left hook}->
   },
   open immersion*/.style = {
     {left hook}-{Triangle[open]}
   },
   exists/.style = {
     densely dashed
   },
 }

 \newlength{\dontworryaboutit}

 \tikzset{
   inline diagram/.style = {
     commutative diagrams/every diagram,
     commutative diagrams/cramped,
     line width = .5pt,
     every node/.append style = {
       commutative diagrams/every cell,
       anchor = base,
       inner sep = 0pt
     },
     every path/.append style = {
       outer xsep = 2pt
     }
   }
 }

 \tikzset{
   square/nw/.style = {},
   square/ne/.style = {},
   square/se/.style = {},
   square/sw/.style = {},
   square/north/.style = {->},
   square/south/.style = {->},
   square/west/.style = {->},
   square/east/.style = {->},
   square/north/node/.style = {above},
   square/south/node/.style = {below},
   square/west/node/.style = {left},
   square/east/node/.style = {right},
 }

 \ExplSyntaxOn

 \bool_new:N \l_jon_glue_west

 \keys_define:nn { jon-tikz/diagram } {
   nw .tl_set:N = \l_jon_tikz_diagram_nw,
   sw .tl_set:N = \l_jon_tikz_diagram_sw,
   ne .tl_set:N = \l_jon_tikz_diagram_ne,
   se .tl_set:N = \l_jon_tikz_diagram_se,

   width .tl_set:N = \l_jon_tikz_diagram_width,
   height .tl_set:N = \l_jon_tikz_diagram_height,

   north .tl_set:N = \l_jon_tikz_diagram_north,
   south .tl_set:N = \l_jon_tikz_diagram_south,
   west .tl_set:N = \l_jon_tikz_diagram_west,
   east .tl_set:N = \l_jon_tikz_diagram_east,

   nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
   sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
   ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
   se/style .code:n = {\tikzset{square/se/.style = {#1}}},

   glue .choice:,
   glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

   glue~target .tl_set:N = \l_jon_tikz_glue_target,

   north/style .code:n = {\tikzset{square/north/.style = {#1}}},
   north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
   south/style .code:n = {\tikzset{square/south/.style = {#1}}},
   south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
   west/style .code:n = {\tikzset{square/west/.style = {#1}}},
   west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
   east/style .code:n = {\tikzset{square/east/.style = {#1}}},
   east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

   draft .meta:n = {
     nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
     sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
     se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
     ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
     north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
     south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
     west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
     east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
   }
 }

 \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
 \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


 \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
   \texttt{\textcolor{red}{#1}}
 }

 \keys_set:nn { jon-tikz/diagram } {
   glue~target = {},
 }


 \cs_new:Nn \__jon_tikz_render_square:nn {
   \group_begin:
   \keys_set:nn {jon-tikz/diagram} {#2}
   \bool_if:nTF \l_jon_glue_west {
     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   } {
     \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
     \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
     \draw[square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

     \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
     \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
     \draw[square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
     \draw[square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
     \draw[square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
   }
   \group_end:
 }

 \NewDocumentCommand\SpliceDiagramSquare{D<>{}m}{
   \__jon_tikz_render_square:nn {#1} {#2}
 }


 \NewDocumentCommand\DiagramSquare{D<>{}O{}m}{
   \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
     \__jon_tikz_render_square:nn {#1} {#3}
   \end{tikzpicture}
 }

 \ExplSyntaxOff

  ]]></fr:resource-source><fr:resource-source type="latex" part="body"><![CDATA[
  \DiagramSquare {
    height = 1.5cm,
    west/style = lies over,
    east/style = lies over,
    nw/style = pullback,
    south/style = {exists,>->},
    north/style = {->,exists},
    nw = \bar {v}\in \mathfrak {F},
    ne = \bar {u},
    se = u,
    sw = v,
  }
  \qquad 
  \begin {tikzpicture}[diagram,baseline=(l/sw.base)]
    \SpliceDiagramSquare <l/>{
      height = 1.5cm,
      width = 2.25cm,
      west/style = lies over,
      east/style = lies over,
      ne/style = pullback,
      nw = \bar {w}\in \mathfrak {F},
      sw = w,
      ne = \bar {v},
      se = v,
      south/style = {->,exists},
      north/style = {->,exists},
      south = \exists !,
      north = \exists !,
      north/node/style = upright desc,
    }
    \SpliceDiagramSquare <r/>{
      height = 1.5cm,
      glue = west,
      glue target = l/,
      east/style = lies over,
      south/style = >->,
      ne = \bar {u},
      se = u,
    }
    \draw [->,bend left=30] (l/nw) to node [above] {cart.} (r/ne);
  \end {tikzpicture}
]]></fr:resource-source></fr:resource></html:figure>
 
</fr:mainmatter>
                    </fr:tree>
                    <fr:tree show-metadata="false">
                      <fr:frontmatter>
                        <fr:authors>
                          <fr:author>
                            <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
                          </fr:author>
                        </fr:authors>
                        <fr:uri>https://www.jonmsterling.com/frct-002O/</fr:uri>
                        <fr:display-uri>frct-002O</fr:display-uri>
                        <fr:route>/frct-002O/</fr:route>
                        <fr:taxon>Remark</fr:taxon>
                      </fr:frontmatter>
                      <fr:mainmatter>
                        <html:p>Let <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> be a model of <fr:link href="/lawvere-1964-etcs/" title="An elementary theory of the category of sets" uri="https://www.jonmsterling.com/lawvere-1964-etcs/" display-uri="lawvere-1964-etcs" type="local">ETCS</fr:link>; and let <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> be a class of families of sets in <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex>. Then <fr:tex display="inline"><![CDATA[\mathfrak {C}]]></fr:tex> is a class of objects in the fundamental self-indexing <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> over <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex>. Furthermore, <fr:tex display="inline"><![CDATA[\mathscr {M}]]></fr:tex> a <fr:link href="/frct-002W/" title="Definable class in a fibration" uri="https://www.jonmsterling.com/frct-002W/" display-uri="frct-002W" type="local">definable class</fr:link> in <fr:tex display="inline"><![CDATA[\underline {\mathscr {M}}]]></fr:tex> if and only if it is a <fr:link href="/frct-002P/" title="Definable class of families of sets" uri="https://www.jonmsterling.com/frct-002P/" display-uri="frct-002P" type="local">definable class of families of sets</fr:link>.</html:p>
                      </fr:mainmatter>
                    </fr:tree>
                  </fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors />
            <fr:uri>https://www.jonmsterling.com/frct-002G/</fr:uri>
            <fr:display-uri>frct-002G</fr:display-uri>
            <fr:route>/frct-002G/</fr:route>
            <fr:title text="Separating family for a category">Separating family for a category</fr:title>
            <fr:taxon>Definition</fr:taxon>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>Given an ordinary category <fr:tex display="inline"><![CDATA[E]]></fr:tex>, a set-indexed family <fr:tex display="inline"><![CDATA[{\mathopen {}\left (s_{i}\right )\mathclose {}}_{i\in  I}]]></fr:tex> of <fr:tex display="inline"><![CDATA[E]]></fr:tex>-objects is called a <html:em>small separating family</html:em> for <fr:tex display="inline"><![CDATA[E]]></fr:tex> when, assuming that for all <fr:tex display="inline"><![CDATA[i\in  I]]></fr:tex> and all <fr:tex display="inline"><![CDATA[{s_i}\xrightarrow {{u}}{x}]]></fr:tex> we have <fr:tex display="inline"><![CDATA[u;f=u;g]]></fr:tex>, we then have <fr:tex display="inline"><![CDATA[f=g]]></fr:tex>.</html:p>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
