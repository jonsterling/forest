<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors>
      <fr:author>
        <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>
      </fr:author>
    </fr:authors>
    <fr:date>
      <fr:year>2021</fr:year>
      <fr:month>12</fr:month>
      <fr:day>9</fr:day>
    </fr:date>
    <fr:uri>https://www.jonmsterling.com/harper-2021-topos-institute/</fr:uri>
    <fr:display-uri>harper-2021-topos-institute</fr:display-uri>
    <fr:route>/harper-2021-topos-institute/</fr:route>
    <fr:title text="Phase distinctions in type theory">Phase distinctions in type theory</fr:title>
    <fr:taxon>Reference</fr:taxon>
    <fr:meta name="video">https://www.youtube.com/watch?v=7DYkyB1Rm3I</fr:meta>
    <fr:meta name="venue"><fr:link href="/toposinstitute/" title="Topos Institute" uri="https://www.jonmsterling.com/toposinstitute/" display-uri="toposinstitute" type="local">Topos Institute</fr:link> Colloquium</fr:meta>
  </fr:frontmatter>
  <fr:mainmatter>
    <html:p>(Joint work with <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link> and <fr:link href="/yueniu/" title="Yue Niu" uri="https://www.jonmsterling.com/yueniu/" display-uri="yueniu" type="local">Yue Niu</fr:link>)</html:p>
    <html:p>The informal phase distinction between compile-time and run-time in programming languages is formally manifested by the distinction between kinds, which classify types, and types, which classify code. The distinction underpins standard programming methodology whereby code is first type-checked for consistency before being compiled for execution. When used effectively, types help eliminate bugs before they occur.</html:p>
    <html:p>Program modules, in even the most rudimentary form, threaten the distinction, comprising as they do both types and programs in a single unit. Matters worsen when considerating “open” modules, with free module variables standing for its imports. To maintain the separation in their presence it is necessary to limit the dependency of types, the static parts of a module, to their imported types. Such restrictions are fundamental for using dependent types to express modular structure, as originally suggested by MacQueen.</html:p>
    <html:p>To address this question <fr:link href="/moggi-1989/" title="A category-theoretic account of program modules" uri="https://www.jonmsterling.com/moggi-1989/" display-uri="moggi-1989" type="local">Moggi</fr:link> gave an “analytic” formulation of program modules in which modules are explicitly separated into their static and dynamic components using tools from category theory. Recent work by Dreyer, Rossberg, and Russo develops this approach fully in their account of ML-like module systems. In this talk we consider instead a “synthetic” formulation using a proposition to segregate the static from the dynamic, in particular to define static equivalence to manage type sharing and type dependency.</html:p>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/eugeniomoggi/" title="Eugenio Moggi" uri="https://www.jonmsterling.com/eugeniomoggi/" display-uri="eugeniomoggi" type="local">Eugenio Moggi</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>1989</fr:year>
              <fr:month>1</fr:month>
              <fr:day>1</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/moggi-1989/</fr:uri>
            <fr:display-uri>moggi-1989</fr:display-uri>
            <fr:route>/moggi-1989/</fr:route>
            <fr:title text="A category-theoretic account of program modules">A category-theoretic account of program modules</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="doi">10.1007/BFb0018347</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>The type-theoretic explanation of modules proposed to date (for programming languages like ML) is unsatisfactory, in that it fails to reflect the distinction between compile-time, when type-expressions are evaluated, and run-time, when value-expressions are evaluated. This paper proposes a new explanation based on “programming languages as indexed categories” and illustrates, as an application, how ML should be extended to support higher order modules. The paper also outlines a methodology for a modular approach to programming languages, where programming languages (of a certain kind) are identified with objects in a 2-category and features are viewed as 2-categorical notions.</html:p>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors />
            <fr:uri>https://www.jonmsterling.com/jonmsterling/</fr:uri>
            <fr:display-uri>jonmsterling</fr:display-uri>
            <fr:route>/jonmsterling/</fr:route>
            <fr:title text="Jon Sterling">Jon Sterling</fr:title>
            <fr:taxon>Person</fr:taxon>
            <fr:meta name="external">https://www.jonmsterling.com/index/</fr:meta>
            <fr:meta name="institution"><fr:link href="/camcl/" title="Cambridge Computer Laboratory" uri="https://www.jonmsterling.com/camcl/" display-uri="camcl" type="local">Cambridge Computer Laboratory</fr:link>; <fr:link href="/jms-00GP/" title="Clare College" uri="https://www.jonmsterling.com/jms-00GP/" display-uri="jms-00GP" type="local">Clare College</fr:link></fr:meta>
            <fr:meta name="orcid">0000-0002-0585-5564</fr:meta>
            <fr:meta name="position">Associate Professor</fr:meta>
            <fr:meta name="phd-advisor">robertharper</fr:meta>
            <fr:meta name="postdoc-advisor">larsbirkedal</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>Associate Professor in Logical Foundations and Formal Methods at University of Cambridge. Formerly a <fr:link href="/jms-0061/" title="TypeSynth: synthetic methods in program verification" uri="https://www.jonmsterling.com/jms-0061/" display-uri="jms-0061" type="local">Marie Skłodowska-Curie Postdoctoral Fellow</fr:link> hosted at <fr:link href="/jms-00GC/" title="Aarhus University" uri="https://www.jonmsterling.com/jms-00GC/" display-uri="jms-00GC" type="local">Aarhus University</fr:link> by <fr:link href="/larsbirkedal/" title="Lars Birkedal" uri="https://www.jonmsterling.com/larsbirkedal/" display-uri="larsbirkedal" type="local">Lars Birkedal</fr:link>, and before this a PhD student of <fr:link href="/robertharper/" title="Robert Harper" uri="https://www.jonmsterling.com/robertharper/" display-uri="robertharper" type="local">Robert Harper</fr:link>.</html:p>
            <html:p>I am a Bye-Fellow of <fr:link href="/jms-00GP/" title="Clare College" uri="https://www.jonmsterling.com/jms-00GP/" display-uri="jms-00GP" type="local">Clare College</fr:link> from February 2024, and have been elected a Fellow for the coming year.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors />
            <fr:uri>https://www.jonmsterling.com/toposinstitute/</fr:uri>
            <fr:display-uri>toposinstitute</fr:display-uri>
            <fr:route>/toposinstitute/</fr:route>
            <fr:title text="Topos Institute">Topos Institute</fr:title>
            <fr:taxon>Institution</fr:taxon>
            <fr:meta name="external">https://topos.institute/</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:blockquote><html:p>We shape technology for public benefit by advancing sciences of connection and integration.</html:p>
  <html:p>Our goal is a world where the systems that surround us benefit us all.</html:p></html:blockquote>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors />
            <fr:uri>https://www.jonmsterling.com/yueniu/</fr:uri>
            <fr:display-uri>yueniu</fr:display-uri>
            <fr:route>/yueniu/</fr:route>
            <fr:title text="Yue Niu">Yue Niu</fr:title>
            <fr:taxon>Person</fr:taxon>
            <fr:meta name="position">Postdoc</fr:meta>
            <fr:meta name="phd-advisor">robertharper</fr:meta>
            <fr:meta name="institution">National Institute of Informatics</fr:meta>
            <fr:meta name="orcid">0000-0003-4888-6042</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter />
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
