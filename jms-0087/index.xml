<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/">
  <fr:frontmatter>
    <fr:authors>
      <fr:author>
        <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
      </fr:author>
    </fr:authors>
    <fr:date>
      <fr:year>2023</fr:year>
      <fr:month>8</fr:month>
      <fr:day>29</fr:day>
    </fr:date>
    <fr:uri>https://www.jonmsterling.com/jms-0087/</fr:uri>
    <fr:display-uri>jms-0087</fr:display-uri>
    <fr:route>/jms-0087/</fr:route>
    <fr:title text="An XSLT 2.0 transformer to convert Bike outlines to HTML">An XSLT 2.0 transformer to convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to HTML</fr:title>
    <fr:taxon>Listing</fr:taxon>
    <fr:meta name="external">https://git.sr.ht/~jonsterling/bike-convertors/tree/main/item/bike-to-html.xsl</fr:meta>
  </fr:frontmatter>
  <fr:mainmatter>
    <html:p>We can write convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to reasonable HTML using an XSLT 2.0 stylesheet, <html:code>bike-to-html.xsl</html:code> detailed below.</html:p>
    <html:pre><![CDATA[<?xml version="1.0"?>

<xsl:stylesheet version="2.0"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:html="http://www.w3.org/1999/xhtml"
  exclude-result-prefixes="xhtml">

  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
  <xsl:strip-space elements="*" />]]></html:pre>
    <html:p>We will allow several tags to be copied verbatim into the output, as <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> uses these in the same way that idiomatic HTML does.</html:p>
    <html:pre><![CDATA[  <xsl:template match="html:html | html:body | html:code | html:strong | html:em | html:mark">
    <xsl:copy>
      <xsl:apply-templates select="node()|@*" />
    </xsl:copy>
  </xsl:template>]]></html:pre>
    <html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> leaves behind a lot of empty <html:code>span</html:code> elements; we drop these.</html:p>
    <html:pre><![CDATA[  <xsl:template match="html:span">
    <xsl:apply-templates />
  </xsl:template>]]></html:pre>
    <html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> uses <html:code>ul</html:code> for all lists; the list type is determined not at this level, but rather by each individual item’s <html:code>@data-type</html:code> attribute. To get this data into the HTML list model, we must group items that have the same <html:code>@data-type</html:code> and wrap them in an appropriate list-forming element.</html:p>
    <html:p>To do this, we use XSLT 2.0’s <html:code>xsl:for-each-group</html:code> instruction to group adjacent <html:code>li</html:code> elements by their <html:code>@data-type</html:code> attribute.  (It is extremely difficult and error-prone to write equivalent code in the more widely available XSLT 1.0.) We must convert <html:code>@data-type</html:code> to a string: otherwise, the transformer will crash when it encounters an item without a <html:code>@data-type</html:code> attribute.</html:p>
    <html:pre><![CDATA[  <xsl:template match="html:ul">
    <xsl:for-each-group select="html:li" group-adjacent="string(@data-type)">
      <xsl:choose>
        <xsl:when test="@data-type='ordered' or @data-type='task'">
          <ol>
            <xsl:apply-templates select="current-group()" />
          </ol>
        </xsl:when>
        <xsl:when test="@data-type='unordered'">
          <ul>
            <xsl:apply-templates select="current-group()" />
          </ul>
        </xsl:when>
        <xsl:otherwise>
          <xsl:apply-templates select="current-group()" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each-group>
  </xsl:template>]]></html:pre>
    <html:p>Next, we match each individual <html:code>li</html:code> element; the content of a list item is stored in a <html:code>p</html:code> element directly under <html:code>li</html:code>, so we let the transformer fall thorugh the parent and then format the content underneath according to the <html:code>@data-type</html:code> of the item.</html:p>
    <html:pre><![CDATA[  <xsl:template match="html:li">
    <xsl:apply-templates />
  </xsl:template>

  <xsl:template
    match="html:li[@data-type='ordered' or @data-type='unordered' or @data-type='task']/html:p">
    <li>
      <xsl:apply-templates />
    </li>
  </xsl:template>]]></html:pre>
    <html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> has correctly adopted the optimal <fr:link href="https://www.forester-notes.org/tfmt-000D/" title="Implicit vs. explicit hierarchy in document markup languages" uri="https://www.forester-notes.org/tfmt-000D/" display-uri="https://www.forester-notes.org/tfmt-000D/" type="local">explicit</fr:link> and <fr:link href="https://www.forester-notes.org/tfmt-000B/" title="Absolute vs. relative hierarchy in document markup languages" uri="https://www.forester-notes.org/tfmt-000B/" display-uri="https://www.forester-notes.org/tfmt-000B/" type="local">relative</fr:link> model of hierarchy, in contrast to HTML; this means that the depth of a heading is not reflected in the element that introduces it, but is instead inferred from its actual position in the outline hierarchy. To convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to idiomatic HTML, we must flatten the hierarchy and introduce explicit heading levels; luckily, this is easy to accomplish in XSLT by counting the ancestors of <html:code>heading</html:code> type.</html:p>
    <html:pre><![CDATA[  <xsl:template match="html:li[@data-type='heading']/html:p">
    <xsl:element
      name="h{count(ancestor::html:li[@data-type='heading'])}">
      <xsl:apply-templates />
    </xsl:element>
  </xsl:template>]]></html:pre>
    <html:p>The remainder of the row types are not difficult to render; you may prefer alternative formatting depending on your goals.</html:p>
    <html:pre><![CDATA[  <xsl:template match="html:li[@data-type='quote']/html:p">
    <blockquote>
      <xsl:apply-templates />
    </blockquote>
  </xsl:template>

  <xsl:template match="html:li[@data-type='note']/html:p">
    <p>
      <em>
        <xsl:apply-templates />
      </em>
    </p>
  </xsl:template>

  <xsl:template match="html:li[not(@data-type)]/html:p">
    <p>
      <xsl:apply-templates />
    </p>
  </xsl:template>
</xsl:stylesheet>]]></html:pre>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jessegrosjean/" title="Jesse Grosjean" uri="https://www.jonmsterling.com/jessegrosjean/" display-uri="jessegrosjean" type="local">Jesse Grosjean</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>8</fr:month>
              <fr:day>28</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-0085/</fr:uri>
            <fr:display-uri>jms-0085</fr:display-uri>
            <fr:route>/jms-0085/</fr:route>
            <fr:title text="Bike Outliner: Structured focused writing">Bike Outliner: Structured focused writing</fr:title>
            <fr:taxon>Reference</fr:taxon>
            <fr:meta name="venue">Hog Bay Software</fr:meta>
            <fr:meta name="external">https://www.hogbaysoftware.com/bike/</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:blockquote><html:p>Use Bike to think, write, organize.</html:p>
  <html:p>Make lists, take notes, create documents.</html:p>
  <html:p>Bike’s an unusually fast outliner designed for your Mac.</html:p></html:blockquote>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>8</fr:month>
              <fr:day>31</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-008C/</fr:uri>
            <fr:display-uri>jms-008C</fr:display-uri>
            <fr:route>/jms-008C/</fr:route>
            <fr:title text="From an outline to a plain text referee report">From an outline to a plain text referee report</fr:title>
          </fr:frontmatter>
          <fr:mainmatter><html:p>Although we have seen how pleasant it is to use an outliner like <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> to draft a referee report, but we obviously cannot submit a <html:code>.bike</html:code> file to a conference reviewing website or a journal editor. Most conference reviewing systems accept plain text or Markdown responses, and so our goal will be to convert a <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline into reasonably formatted Markdown.</html:p><html:p>It happens that <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link>’s underlying format is HTML, so one idea would be to use <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> to process this HTML into Markdown. This would work, except that <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link>’s model is sufficiently structured that it must make deeply idiosyncratic use of HTML tags, as can be seen from the <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">listing</fr:link> below.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008G/</fr:uri><fr:display-uri>jms-008G</fr:display-uri><fr:route>/jms-008G/</fr:route><fr:title text="The source code to a typical Bike outline">The source code to a typical <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline</fr:title><fr:taxon>Listing</fr:taxon></fr:frontmatter><fr:mainmatter><html:pre><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8"/>
  </head>
  <body>
    <ul id="2sbcmmms">
      <li id="3C" data-type="heading">
        <p>Tasks</p>
        <ul>
          <li id="cs" data-type="task">
            <p>read through paper on iPad and highlight</p>
          </li>
        </ul>
      </li>
      <li id="XZ" data-type="heading">
        <p>Syntax and semantics of foo bar baz</p>
        <ul>
          <li id="Kp">
            <p><mark>Overall merit:</mark><span> </span></p>
          </li>
          <li id="d9">
            <p><mark>Reviewer Expertise:</mark></p>
          </li>
          <li id="uM" data-type="heading">
            <p>Summary of the paper</p>
            <ul>
              <li id="oB" data-type="note">
                <p>Please give a brief summary of the paper</p>
              </li>
              <li id="TWZ">
                <p>This paper describes the syntax and semantics of foo, bar, and baz.</p>
              </li>
            </ul>
          </li>
          <li id="V8" data-type="heading">
            <p>Assessment of the paper</p>
            <ul>
              <li id="vD" data-type="note">
                <p>Please give a balanced assessment of the paper's strengths and weaknesses and a clear justification for your review score.</p>
              </li>
            </ul>
          </li>
          <li id="zo" data-type="heading">
            <p>Detailed comments for authors</p>
            <ul>
              <li id="o0" data-type="note">
                <p>Please give here any additional detailed comments or questions that you would like the authors to address in revising the paper.</p>
              </li>
              <li id="bgy" data-type="heading">
                <p>Minor comments</p>
                <ul>
                  <li id="tMq" data-type="unordered">
                    <p>line 23: "teh" =&gt; "the"</p>
                  </li>
                  <li id="EmX" data-type="unordered">
                    <p>line 99: "fou" =&gt; "foo"</p>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li id="aN" data-type="heading">
            <p>Questions to be addressed by author response</p>
            <ul>
              <li id="7s" data-type="note">
                <p>Please list here any specific questions you would like the authors to address in their author response. Since authors have limited time in which to prepare their response, please only ask questions here that are likely to affect your accept/reject decision.</p>
              </li>
            </ul>
          </li>
          <li id="4S" data-type="heading">
            <p>Comments for PC and other reviewers</p>
            <ul>
              <li id="bN" data-type="note">
                <p>Please list here any additional comments you have which you want the PC and other reviewers to see, but not the authors.</p>
              </li>
              <li id="i2b">
                <p>In case any one is wondering, I am an expert in foo, but not in bar nor baz.</p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </body>
</html>]]></html:pre></fr:mainmatter></fr:tree><html:p>The Markdown that would result from postprocessing a <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline directly with <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> would be deeply unsuitable for submission. We will, however, use a version of this idea: first we will preprocess the <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> format into more conventional (unstructured) HTML using XSLT 2.0, and then we will use <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> to convert this into Markdown.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008E/</fr:uri><fr:display-uri>jms-008E</fr:display-uri><fr:route>/jms-008E/</fr:route><fr:title text="System requirements to convert Bike outlines to Markdown">System requirements to convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to Markdown</fr:title></fr:frontmatter><fr:mainmatter><html:p>XSLT 2.0 is unfortunately only implemented by proprietary tools like <fr:link href="https://saxonica.com/welcome/welcome.xml" type="external">Saxon</fr:link>, developed by Saxonica. Nonetheless, it is possible to freely install Saxon on macOS using Homebrew:</html:p><html:pre>brew install saxon</html:pre><html:p>You must also install <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>, which is also conveniently available as a binary on Homebrew:</html:p><html:pre>brew install pandoc</html:pre></fr:mainmatter></fr:tree><html:p>With the <fr:link href="/jms-008E/" title="System requirements to convert Bike outlines to Markdown" uri="https://www.jonmsterling.com/jms-008E/" display-uri="jms-008E" type="local">system requirements</fr:link> out of the way, we can proceed to prepare an XSLT stylesheet that will convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link>’s idiosyncratic use of HTML tags to more conventional HTML that can be processed into Markdown by <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>. The stylesheet <html:code>bike-to-html.xsl</html:code> is described and explained in the <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">listing</fr:link> below.</html:p>
  
  <fr:tree show-metadata="true"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>29</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-0087/</fr:uri><fr:display-uri>jms-0087</fr:display-uri><fr:route>/jms-0087/</fr:route><fr:title text="An XSLT 2.0 transformer to convert Bike outlines to HTML">An XSLT 2.0 transformer to convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to HTML</fr:title><fr:taxon>Listing</fr:taxon><fr:meta name="external">https://git.sr.ht/~jonsterling/bike-convertors/tree/main/item/bike-to-html.xsl</fr:meta></fr:frontmatter><fr:mainmatter><html:p>We can write convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to reasonable HTML using an XSLT 2.0 stylesheet, <html:code>bike-to-html.xsl</html:code> detailed below.</html:p><html:pre><![CDATA[<?xml version="1.0"?>

<xsl:stylesheet version="2.0"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:html="http://www.w3.org/1999/xhtml"
  exclude-result-prefixes="xhtml">

  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
  <xsl:strip-space elements="*" />]]></html:pre><html:p>We will allow several tags to be copied verbatim into the output, as <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> uses these in the same way that idiomatic HTML does.</html:p><html:pre><![CDATA[  <xsl:template match="html:html | html:body | html:code | html:strong | html:em | html:mark">
    <xsl:copy>
      <xsl:apply-templates select="node()|@*" />
    </xsl:copy>
  </xsl:template>]]></html:pre><html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> leaves behind a lot of empty <html:code>span</html:code> elements; we drop these.</html:p><html:pre><![CDATA[  <xsl:template match="html:span">
    <xsl:apply-templates />
  </xsl:template>]]></html:pre><html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> uses <html:code>ul</html:code> for all lists; the list type is determined not at this level, but rather by each individual item’s <html:code>@data-type</html:code> attribute. To get this data into the HTML list model, we must group items that have the same <html:code>@data-type</html:code> and wrap them in an appropriate list-forming element.</html:p><html:p>To do this, we use XSLT 2.0’s <html:code>xsl:for-each-group</html:code> instruction to group adjacent <html:code>li</html:code> elements by their <html:code>@data-type</html:code> attribute.  (It is extremely difficult and error-prone to write equivalent code in the more widely available XSLT 1.0.) We must convert <html:code>@data-type</html:code> to a string: otherwise, the transformer will crash when it encounters an item without a <html:code>@data-type</html:code> attribute.</html:p><html:pre><![CDATA[  <xsl:template match="html:ul">
    <xsl:for-each-group select="html:li" group-adjacent="string(@data-type)">
      <xsl:choose>
        <xsl:when test="@data-type='ordered' or @data-type='task'">
          <ol>
            <xsl:apply-templates select="current-group()" />
          </ol>
        </xsl:when>
        <xsl:when test="@data-type='unordered'">
          <ul>
            <xsl:apply-templates select="current-group()" />
          </ul>
        </xsl:when>
        <xsl:otherwise>
          <xsl:apply-templates select="current-group()" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each-group>
  </xsl:template>]]></html:pre><html:p>Next, we match each individual <html:code>li</html:code> element; the content of a list item is stored in a <html:code>p</html:code> element directly under <html:code>li</html:code>, so we let the transformer fall thorugh the parent and then format the content underneath according to the <html:code>@data-type</html:code> of the item.</html:p><html:pre><![CDATA[  <xsl:template match="html:li">
    <xsl:apply-templates />
  </xsl:template>

  <xsl:template
    match="html:li[@data-type='ordered' or @data-type='unordered' or @data-type='task']/html:p">
    <li>
      <xsl:apply-templates />
    </li>
  </xsl:template>]]></html:pre><html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> has correctly adopted the optimal <fr:link href="https://www.forester-notes.org/tfmt-000D/" title="Implicit vs. explicit hierarchy in document markup languages" uri="https://www.forester-notes.org/tfmt-000D/" display-uri="https://www.forester-notes.org/tfmt-000D/" type="local">explicit</fr:link> and <fr:link href="https://www.forester-notes.org/tfmt-000B/" title="Absolute vs. relative hierarchy in document markup languages" uri="https://www.forester-notes.org/tfmt-000B/" display-uri="https://www.forester-notes.org/tfmt-000B/" type="local">relative</fr:link> model of hierarchy, in contrast to HTML; this means that the depth of a heading is not reflected in the element that introduces it, but is instead inferred from its actual position in the outline hierarchy. To convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to idiomatic HTML, we must flatten the hierarchy and introduce explicit heading levels; luckily, this is easy to accomplish in XSLT by counting the ancestors of <html:code>heading</html:code> type.</html:p><html:pre><![CDATA[  <xsl:template match="html:li[@data-type='heading']/html:p">
    <xsl:element
      name="h{count(ancestor::html:li[@data-type='heading'])}">
      <xsl:apply-templates />
    </xsl:element>
  </xsl:template>]]></html:pre><html:p>The remainder of the row types are not difficult to render; you may prefer alternative formatting depending on your goals.</html:p><html:pre><![CDATA[  <xsl:template match="html:li[@data-type='quote']/html:p">
    <blockquote>
      <xsl:apply-templates />
    </blockquote>
  </xsl:template>

  <xsl:template match="html:li[@data-type='note']/html:p">
    <p>
      <em>
        <xsl:apply-templates />
      </em>
    </p>
  </xsl:template>

  <xsl:template match="html:li[not(@data-type)]/html:p">
    <p>
      <xsl:apply-templates />
    </p>
  </xsl:template>
</xsl:stylesheet>]]></html:pre></fr:mainmatter></fr:tree>
<html:p>Next, we can use Saxon to convert a <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">Bike</fr:link> outline to idiomatic HTML using the <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">stylesheet above</fr:link>.</html:p><html:pre>cat review.bike | saxon -xsl:bike-to-html.xsl - &gt; review.html</html:pre><html:p>Go ahead and open the resulting HTML file in a text editor and a browser to see the results.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008F/</fr:uri><fr:display-uri>jms-008F</fr:display-uri><fr:route>/jms-008F/</fr:route><fr:title text="A Bike outline transformed to idiomatic HTML">A <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">outline</fr:link> transformed to idiomatic HTML</fr:title><fr:taxon>Listing</fr:taxon></fr:frontmatter><fr:mainmatter><html:p>The following is the result of transforming an <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">example <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline</fr:link> to idiomatic HTML using an <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">XSLT stylesheet</fr:link>.</html:p><html:pre><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
   <body>
      <h1>Tasks</h1>
      <ol>
         <li>read through paper on iPad and highlight</li>
      </ol>
      <h1>Syntax and semantics of foo bar baz</h1>
      <p>
         <mark>Overall merit:</mark>
      </p>
      <p>
         <mark>Reviewer Expertise:</mark>
      </p>
      <h2>Summary of the paper</h2>
      <p>
         <em>Please give a brief summary of the paper</em>
      </p>
      <p>This paper describes the syntax and semantics of foo, bar, and baz.</p>
      <h2>Assessment of the paper</h2>
      <p>
         <em>Please give a balanced assessment of the paper's strengths and weaknesses and a clear justification for your review score.</em>
      </p>
      <h2>Detailed comments for authors</h2>
      <p>
         <em>Please give here any additional detailed comments or questions that you would like the authors to address in revising the paper.</em>
      </p>
      <h3>Minor comments</h3>
      <ul>
         <li>line 23: "teh" =&gt; "the"</li>
         <li>line 99: "fou" =&gt; "foo"</li>
      </ul>
      <h2>Questions to be addressed by author response</h2>
      <p>
         <em>Please list here any specific questions you would like the authors to address in their author response. Since authors have limited time in which to prepare their response, please only ask questions here that are likely to affect your accept/reject decision.</em>
      </p>
      <h2>Comments for PC and other reviewers</h2>
      <p>
         <em>Please list here any additional comments you have which you want the PC and other reviewers to see, but not the authors.</em>
      </p>
      <p>In case any one is wondering, I am an expert in foo, but not in bar nor baz.</p>
   </body>
</html>]]></html:pre></fr:mainmatter></fr:tree><html:p>Next, we will process this HTML file using <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>; unfortunately, <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> leaves behind a lot of garbage character escapes that are <html:em>not</html:em> suitable for submission anywhere, so we must filter those out using <html:code>sed</html:code>.</html:p><html:pre><![CDATA[cat review.html | pandoc -f html -t markdown-raw_html-native_divs-native_spans-fenced_divs-bracketed_spans-smart | sed 's/\\//g']]></html:pre><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008H/</fr:uri><fr:display-uri>jms-008H</fr:display-uri><fr:route>/jms-008H/</fr:route><fr:title text="A Bike outline transformed to Markdown">A <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">outline</fr:link> transformed to Markdown</fr:title><fr:taxon>Listing</fr:taxon></fr:frontmatter><fr:mainmatter><html:p>The following is the result of converting the <fr:link href="/jms-008F/" title="A Bike outline transformed to idiomatic HTML" uri="https://www.jonmsterling.com/jms-008F/" display-uri="jms-008F" type="local">idiomatic HTML representation</fr:link> of a <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">outline</fr:link> to Markdown using <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>, with some light postprocessing by <html:code>sed</html:code>.</html:p><html:pre><![CDATA[# Tasks

1.  read through paper on iPad and highlight

# Syntax and semantics of foo bar baz

Overall merit:

Reviewer Expertise:

## Summary of the paper

*Please give a brief summary of the paper*

This paper describes the syntax and semantics of foo, bar, and baz.

## Assessment of the paper

*Please give a balanced assessment of the paper's strengths and
weaknesses and a clear justification for your review score.*

## Detailed comments for authors

*Please give here any additional detailed comments or questions that you
would like the authors to address in revising the paper.*

### Minor comments

-   line 23: "teh" => "the"
-   line 99: "fou" => "foo"

## Questions to be addressed by author response

*Please list here any specific questions you would like the authors to
address in their author response. Since authors have limited time in
which to prepare their response, please only ask questions here that are
likely to affect your accept/reject decision.*

## Comments for PC and other reviewers

*Please list here any additional comments you have which you want the PC
and other reviewers to see, but not the authors.*

In case any one is wondering, I am an expert in foo, but not in bar nor
baz.]]></html:pre></fr:mainmatter></fr:tree><html:p>We can compose all these tasks into a one-liner as follows:</html:p><html:pre><![CDATA[cat review.bike | saxon -xsl:bike-to-html.xsl - | pandoc -f html -t markdown-raw_html-native_divs-native_spans-fenced_divs-bracketed_spans-smart | sed 's/\\//g']]></html:pre></fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>8</fr:month>
              <fr:day>31</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-008F/</fr:uri>
            <fr:display-uri>jms-008F</fr:display-uri>
            <fr:route>/jms-008F/</fr:route>
            <fr:title text="A Bike outline transformed to idiomatic HTML">A <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">outline</fr:link> transformed to idiomatic HTML</fr:title>
            <fr:taxon>Listing</fr:taxon>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>The following is the result of transforming an <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">example <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline</fr:link> to idiomatic HTML using an <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">XSLT stylesheet</fr:link>.</html:p>
            <html:pre><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
   <body>
      <h1>Tasks</h1>
      <ol>
         <li>read through paper on iPad and highlight</li>
      </ol>
      <h1>Syntax and semantics of foo bar baz</h1>
      <p>
         <mark>Overall merit:</mark>
      </p>
      <p>
         <mark>Reviewer Expertise:</mark>
      </p>
      <h2>Summary of the paper</h2>
      <p>
         <em>Please give a brief summary of the paper</em>
      </p>
      <p>This paper describes the syntax and semantics of foo, bar, and baz.</p>
      <h2>Assessment of the paper</h2>
      <p>
         <em>Please give a balanced assessment of the paper's strengths and weaknesses and a clear justification for your review score.</em>
      </p>
      <h2>Detailed comments for authors</h2>
      <p>
         <em>Please give here any additional detailed comments or questions that you would like the authors to address in revising the paper.</em>
      </p>
      <h3>Minor comments</h3>
      <ul>
         <li>line 23: "teh" =&gt; "the"</li>
         <li>line 99: "fou" =&gt; "foo"</li>
      </ul>
      <h2>Questions to be addressed by author response</h2>
      <p>
         <em>Please list here any specific questions you would like the authors to address in their author response. Since authors have limited time in which to prepare their response, please only ask questions here that are likely to affect your accept/reject decision.</em>
      </p>
      <h2>Comments for PC and other reviewers</h2>
      <p>
         <em>Please list here any additional comments you have which you want the PC and other reviewers to see, but not the authors.</em>
      </p>
      <p>In case any one is wondering, I am an expert in foo, but not in bar nor baz.</p>
   </body>
</html>]]></html:pre>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>8</fr:month>
              <fr:day>31</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-008I/</fr:uri>
            <fr:display-uri>jms-008I</fr:display-uri>
            <fr:route>/jms-008I/</fr:route>
            <fr:title text="A convenient Bike-to-Markdown script">A convenient <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link>-to-Markdown script</fr:title>
            <fr:meta name="external">https://git.sr.ht/~jonsterling/bike-convertors</fr:meta>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>I have gathered the scripts to convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines into Markdown via idiomatic HTML in a <fr:link href="https://git.sr.ht/~jonsterling/bike-convertors" type="external">Git repository</fr:link> where they can be easily downloaded. If you have any improvements to these scripts, please <fr:link href="https://git-send-email.io/" type="external">submit them as a patch</fr:link> to my <fr:link href="https://lists.sr.ht/~jonsterling/public-inbox" type="external">public inbox</fr:link>! I am also interested in whether it is possible to write the <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">XSLT 2.0 stylesheet</fr:link> as equivalent XSLT 1.0, to avoid <fr:link href="/jms-008E/" title="System requirements to convert Bike outlines to Markdown" uri="https://www.jonmsterling.com/jms-008E/" display-uri="jms-008E" type="local">requiring</fr:link> the proprietary <fr:link href="https://saxonica.com/welcome/welcome.xml" type="external">Saxon</fr:link> tool. Feel free also to send comments on this post to my public inbox, or discuss with me on <fr:link href="https://mathstodon.xyz/@jonmsterling" type="external">Mastodon</fr:link>.</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2023</fr:year>
              <fr:month>8</fr:month>
              <fr:day>31</fr:day>
            </fr:date>
            <fr:uri>https://www.jonmsterling.com/jms-008C/</fr:uri>
            <fr:display-uri>jms-008C</fr:display-uri>
            <fr:route>/jms-008C/</fr:route>
            <fr:title text="From an outline to a plain text referee report">From an outline to a plain text referee report</fr:title>
          </fr:frontmatter>
          <fr:mainmatter><html:p>Although we have seen how pleasant it is to use an outliner like <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> to draft a referee report, but we obviously cannot submit a <html:code>.bike</html:code> file to a conference reviewing website or a journal editor. Most conference reviewing systems accept plain text or Markdown responses, and so our goal will be to convert a <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline into reasonably formatted Markdown.</html:p><html:p>It happens that <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link>’s underlying format is HTML, so one idea would be to use <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> to process this HTML into Markdown. This would work, except that <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link>’s model is sufficiently structured that it must make deeply idiosyncratic use of HTML tags, as can be seen from the <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">listing</fr:link> below.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008G/</fr:uri><fr:display-uri>jms-008G</fr:display-uri><fr:route>/jms-008G/</fr:route><fr:title text="The source code to a typical Bike outline">The source code to a typical <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline</fr:title><fr:taxon>Listing</fr:taxon></fr:frontmatter><fr:mainmatter><html:pre><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8"/>
  </head>
  <body>
    <ul id="2sbcmmms">
      <li id="3C" data-type="heading">
        <p>Tasks</p>
        <ul>
          <li id="cs" data-type="task">
            <p>read through paper on iPad and highlight</p>
          </li>
        </ul>
      </li>
      <li id="XZ" data-type="heading">
        <p>Syntax and semantics of foo bar baz</p>
        <ul>
          <li id="Kp">
            <p><mark>Overall merit:</mark><span> </span></p>
          </li>
          <li id="d9">
            <p><mark>Reviewer Expertise:</mark></p>
          </li>
          <li id="uM" data-type="heading">
            <p>Summary of the paper</p>
            <ul>
              <li id="oB" data-type="note">
                <p>Please give a brief summary of the paper</p>
              </li>
              <li id="TWZ">
                <p>This paper describes the syntax and semantics of foo, bar, and baz.</p>
              </li>
            </ul>
          </li>
          <li id="V8" data-type="heading">
            <p>Assessment of the paper</p>
            <ul>
              <li id="vD" data-type="note">
                <p>Please give a balanced assessment of the paper's strengths and weaknesses and a clear justification for your review score.</p>
              </li>
            </ul>
          </li>
          <li id="zo" data-type="heading">
            <p>Detailed comments for authors</p>
            <ul>
              <li id="o0" data-type="note">
                <p>Please give here any additional detailed comments or questions that you would like the authors to address in revising the paper.</p>
              </li>
              <li id="bgy" data-type="heading">
                <p>Minor comments</p>
                <ul>
                  <li id="tMq" data-type="unordered">
                    <p>line 23: "teh" =&gt; "the"</p>
                  </li>
                  <li id="EmX" data-type="unordered">
                    <p>line 99: "fou" =&gt; "foo"</p>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li id="aN" data-type="heading">
            <p>Questions to be addressed by author response</p>
            <ul>
              <li id="7s" data-type="note">
                <p>Please list here any specific questions you would like the authors to address in their author response. Since authors have limited time in which to prepare their response, please only ask questions here that are likely to affect your accept/reject decision.</p>
              </li>
            </ul>
          </li>
          <li id="4S" data-type="heading">
            <p>Comments for PC and other reviewers</p>
            <ul>
              <li id="bN" data-type="note">
                <p>Please list here any additional comments you have which you want the PC and other reviewers to see, but not the authors.</p>
              </li>
              <li id="i2b">
                <p>In case any one is wondering, I am an expert in foo, but not in bar nor baz.</p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </body>
</html>]]></html:pre></fr:mainmatter></fr:tree><html:p>The Markdown that would result from postprocessing a <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline directly with <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> would be deeply unsuitable for submission. We will, however, use a version of this idea: first we will preprocess the <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> format into more conventional (unstructured) HTML using XSLT 2.0, and then we will use <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> to convert this into Markdown.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008E/</fr:uri><fr:display-uri>jms-008E</fr:display-uri><fr:route>/jms-008E/</fr:route><fr:title text="System requirements to convert Bike outlines to Markdown">System requirements to convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to Markdown</fr:title></fr:frontmatter><fr:mainmatter><html:p>XSLT 2.0 is unfortunately only implemented by proprietary tools like <fr:link href="https://saxonica.com/welcome/welcome.xml" type="external">Saxon</fr:link>, developed by Saxonica. Nonetheless, it is possible to freely install Saxon on macOS using Homebrew:</html:p><html:pre>brew install saxon</html:pre><html:p>You must also install <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>, which is also conveniently available as a binary on Homebrew:</html:p><html:pre>brew install pandoc</html:pre></fr:mainmatter></fr:tree><html:p>With the <fr:link href="/jms-008E/" title="System requirements to convert Bike outlines to Markdown" uri="https://www.jonmsterling.com/jms-008E/" display-uri="jms-008E" type="local">system requirements</fr:link> out of the way, we can proceed to prepare an XSLT stylesheet that will convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link>’s idiosyncratic use of HTML tags to more conventional HTML that can be processed into Markdown by <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>. The stylesheet <html:code>bike-to-html.xsl</html:code> is described and explained in the <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">listing</fr:link> below.</html:p>
  
  <fr:tree show-metadata="true"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>29</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-0087/</fr:uri><fr:display-uri>jms-0087</fr:display-uri><fr:route>/jms-0087/</fr:route><fr:title text="An XSLT 2.0 transformer to convert Bike outlines to HTML">An XSLT 2.0 transformer to convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to HTML</fr:title><fr:taxon>Listing</fr:taxon><fr:meta name="external">https://git.sr.ht/~jonsterling/bike-convertors/tree/main/item/bike-to-html.xsl</fr:meta></fr:frontmatter><fr:mainmatter><html:p>We can write convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to reasonable HTML using an XSLT 2.0 stylesheet, <html:code>bike-to-html.xsl</html:code> detailed below.</html:p><html:pre><![CDATA[<?xml version="1.0"?>

<xsl:stylesheet version="2.0"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:html="http://www.w3.org/1999/xhtml"
  exclude-result-prefixes="xhtml">

  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
  <xsl:strip-space elements="*" />]]></html:pre><html:p>We will allow several tags to be copied verbatim into the output, as <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> uses these in the same way that idiomatic HTML does.</html:p><html:pre><![CDATA[  <xsl:template match="html:html | html:body | html:code | html:strong | html:em | html:mark">
    <xsl:copy>
      <xsl:apply-templates select="node()|@*" />
    </xsl:copy>
  </xsl:template>]]></html:pre><html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> leaves behind a lot of empty <html:code>span</html:code> elements; we drop these.</html:p><html:pre><![CDATA[  <xsl:template match="html:span">
    <xsl:apply-templates />
  </xsl:template>]]></html:pre><html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> uses <html:code>ul</html:code> for all lists; the list type is determined not at this level, but rather by each individual item’s <html:code>@data-type</html:code> attribute. To get this data into the HTML list model, we must group items that have the same <html:code>@data-type</html:code> and wrap them in an appropriate list-forming element.</html:p><html:p>To do this, we use XSLT 2.0’s <html:code>xsl:for-each-group</html:code> instruction to group adjacent <html:code>li</html:code> elements by their <html:code>@data-type</html:code> attribute.  (It is extremely difficult and error-prone to write equivalent code in the more widely available XSLT 1.0.) We must convert <html:code>@data-type</html:code> to a string: otherwise, the transformer will crash when it encounters an item without a <html:code>@data-type</html:code> attribute.</html:p><html:pre><![CDATA[  <xsl:template match="html:ul">
    <xsl:for-each-group select="html:li" group-adjacent="string(@data-type)">
      <xsl:choose>
        <xsl:when test="@data-type='ordered' or @data-type='task'">
          <ol>
            <xsl:apply-templates select="current-group()" />
          </ol>
        </xsl:when>
        <xsl:when test="@data-type='unordered'">
          <ul>
            <xsl:apply-templates select="current-group()" />
          </ul>
        </xsl:when>
        <xsl:otherwise>
          <xsl:apply-templates select="current-group()" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each-group>
  </xsl:template>]]></html:pre><html:p>Next, we match each individual <html:code>li</html:code> element; the content of a list item is stored in a <html:code>p</html:code> element directly under <html:code>li</html:code>, so we let the transformer fall thorugh the parent and then format the content underneath according to the <html:code>@data-type</html:code> of the item.</html:p><html:pre><![CDATA[  <xsl:template match="html:li">
    <xsl:apply-templates />
  </xsl:template>

  <xsl:template
    match="html:li[@data-type='ordered' or @data-type='unordered' or @data-type='task']/html:p">
    <li>
      <xsl:apply-templates />
    </li>
  </xsl:template>]]></html:pre><html:p><fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> has correctly adopted the optimal <fr:link href="https://www.forester-notes.org/tfmt-000D/" title="Implicit vs. explicit hierarchy in document markup languages" uri="https://www.forester-notes.org/tfmt-000D/" display-uri="https://www.forester-notes.org/tfmt-000D/" type="local">explicit</fr:link> and <fr:link href="https://www.forester-notes.org/tfmt-000B/" title="Absolute vs. relative hierarchy in document markup languages" uri="https://www.forester-notes.org/tfmt-000B/" display-uri="https://www.forester-notes.org/tfmt-000B/" type="local">relative</fr:link> model of hierarchy, in contrast to HTML; this means that the depth of a heading is not reflected in the element that introduces it, but is instead inferred from its actual position in the outline hierarchy. To convert <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outlines to idiomatic HTML, we must flatten the hierarchy and introduce explicit heading levels; luckily, this is easy to accomplish in XSLT by counting the ancestors of <html:code>heading</html:code> type.</html:p><html:pre><![CDATA[  <xsl:template match="html:li[@data-type='heading']/html:p">
    <xsl:element
      name="h{count(ancestor::html:li[@data-type='heading'])}">
      <xsl:apply-templates />
    </xsl:element>
  </xsl:template>]]></html:pre><html:p>The remainder of the row types are not difficult to render; you may prefer alternative formatting depending on your goals.</html:p><html:pre><![CDATA[  <xsl:template match="html:li[@data-type='quote']/html:p">
    <blockquote>
      <xsl:apply-templates />
    </blockquote>
  </xsl:template>

  <xsl:template match="html:li[@data-type='note']/html:p">
    <p>
      <em>
        <xsl:apply-templates />
      </em>
    </p>
  </xsl:template>

  <xsl:template match="html:li[not(@data-type)]/html:p">
    <p>
      <xsl:apply-templates />
    </p>
  </xsl:template>
</xsl:stylesheet>]]></html:pre></fr:mainmatter></fr:tree>
<html:p>Next, we can use Saxon to convert a <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">Bike</fr:link> outline to idiomatic HTML using the <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">stylesheet above</fr:link>.</html:p><html:pre>cat review.bike | saxon -xsl:bike-to-html.xsl - &gt; review.html</html:pre><html:p>Go ahead and open the resulting HTML file in a text editor and a browser to see the results.</html:p><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008F/</fr:uri><fr:display-uri>jms-008F</fr:display-uri><fr:route>/jms-008F/</fr:route><fr:title text="A Bike outline transformed to idiomatic HTML">A <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">outline</fr:link> transformed to idiomatic HTML</fr:title><fr:taxon>Listing</fr:taxon></fr:frontmatter><fr:mainmatter><html:p>The following is the result of transforming an <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">example <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> outline</fr:link> to idiomatic HTML using an <fr:link href="/jms-0087/" title="An XSLT 2.0 transformer to convert Bike outlines to HTML" uri="https://www.jonmsterling.com/jms-0087/" display-uri="jms-0087" type="local">XSLT stylesheet</fr:link>.</html:p><html:pre><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
   <body>
      <h1>Tasks</h1>
      <ol>
         <li>read through paper on iPad and highlight</li>
      </ol>
      <h1>Syntax and semantics of foo bar baz</h1>
      <p>
         <mark>Overall merit:</mark>
      </p>
      <p>
         <mark>Reviewer Expertise:</mark>
      </p>
      <h2>Summary of the paper</h2>
      <p>
         <em>Please give a brief summary of the paper</em>
      </p>
      <p>This paper describes the syntax and semantics of foo, bar, and baz.</p>
      <h2>Assessment of the paper</h2>
      <p>
         <em>Please give a balanced assessment of the paper's strengths and weaknesses and a clear justification for your review score.</em>
      </p>
      <h2>Detailed comments for authors</h2>
      <p>
         <em>Please give here any additional detailed comments or questions that you would like the authors to address in revising the paper.</em>
      </p>
      <h3>Minor comments</h3>
      <ul>
         <li>line 23: "teh" =&gt; "the"</li>
         <li>line 99: "fou" =&gt; "foo"</li>
      </ul>
      <h2>Questions to be addressed by author response</h2>
      <p>
         <em>Please list here any specific questions you would like the authors to address in their author response. Since authors have limited time in which to prepare their response, please only ask questions here that are likely to affect your accept/reject decision.</em>
      </p>
      <h2>Comments for PC and other reviewers</h2>
      <p>
         <em>Please list here any additional comments you have which you want the PC and other reviewers to see, but not the authors.</em>
      </p>
      <p>In case any one is wondering, I am an expert in foo, but not in bar nor baz.</p>
   </body>
</html>]]></html:pre></fr:mainmatter></fr:tree><html:p>Next, we will process this HTML file using <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>; unfortunately, <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link> leaves behind a lot of garbage character escapes that are <html:em>not</html:em> suitable for submission anywhere, so we must filter those out using <html:code>sed</html:code>.</html:p><html:pre><![CDATA[cat review.html | pandoc -f html -t markdown-raw_html-native_divs-native_spans-fenced_divs-bracketed_spans-smart | sed 's/\\//g']]></html:pre><fr:tree show-metadata="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/jonmsterling/" title="Jon Sterling" uri="https://www.jonmsterling.com/jonmsterling/" display-uri="jonmsterling" type="local">Jon Sterling</fr:link></fr:author></fr:authors><fr:date><fr:year>2023</fr:year><fr:month>8</fr:month><fr:day>31</fr:day></fr:date><fr:uri>https://www.jonmsterling.com/jms-008H/</fr:uri><fr:display-uri>jms-008H</fr:display-uri><fr:route>/jms-008H/</fr:route><fr:title text="A Bike outline transformed to Markdown">A <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">outline</fr:link> transformed to Markdown</fr:title><fr:taxon>Listing</fr:taxon></fr:frontmatter><fr:mainmatter><html:p>The following is the result of converting the <fr:link href="/jms-008F/" title="A Bike outline transformed to idiomatic HTML" uri="https://www.jonmsterling.com/jms-008F/" display-uri="jms-008F" type="local">idiomatic HTML representation</fr:link> of a <fr:link href="/jms-0085/" title="Bike Outliner: Structured focused writing" uri="https://www.jonmsterling.com/jms-0085/" display-uri="jms-0085" type="local">Bike</fr:link> <fr:link href="/jms-008G/" title="The source code to a typical Bike outline" uri="https://www.jonmsterling.com/jms-008G/" display-uri="jms-008G" type="local">outline</fr:link> to Markdown using <fr:link href="/jms-008D/" title="Pandoc: a universal document convertor" uri="https://www.jonmsterling.com/jms-008D/" display-uri="jms-008D" type="local">Pandoc</fr:link>, with some light postprocessing by <html:code>sed</html:code>.</html:p><html:pre><![CDATA[# Tasks

1.  read through paper on iPad and highlight

# Syntax and semantics of foo bar baz

Overall merit:

Reviewer Expertise:

## Summary of the paper

*Please give a brief summary of the paper*

This paper describes the syntax and semantics of foo, bar, and baz.

## Assessment of the paper

*Please give a balanced assessment of the paper's strengths and
weaknesses and a clear justification for your review score.*

## Detailed comments for authors

*Please give here any additional detailed comments or questions that you
would like the authors to address in revising the paper.*

### Minor comments

-   line 23: "teh" => "the"
-   line 99: "fou" => "foo"

## Questions to be addressed by author response

*Please list here any specific questions you would like the authors to
address in their author response. Since authors have limited time in
which to prepare their response, please only ask questions here that are
likely to affect your accept/reject decision.*

## Comments for PC and other reviewers

*Please list here any additional comments you have which you want the PC
and other reviewers to see, but not the authors.*

In case any one is wondering, I am an expert in foo, but not in bar nor
baz.]]></html:pre></fr:mainmatter></fr:tree><html:p>We can compose all these tasks into a one-liner as follows:</html:p><html:pre><![CDATA[cat review.bike | saxon -xsl:bike-to-html.xsl - | pandoc -f html -t markdown-raw_html-native_divs-native_spans-fenced_divs-bracketed_spans-smart | sed 's/\\//g']]></html:pre></fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="https://www.forester-notes.org/jonmsterling/" title="Jon Sterling" uri="https://www.forester-notes.org/jonmsterling/" display-uri="https://www.forester-notes.org/jonmsterling/" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2022</fr:year>
              <fr:month>12</fr:month>
              <fr:day>29</fr:day>
            </fr:date>
            <fr:uri>https://www.forester-notes.org/tfmt-000D/</fr:uri>
            <fr:display-uri>https://www.forester-notes.org/tfmt-000D/</fr:display-uri>
            <fr:route>https://www.forester-notes.org/tfmt-000D/</fr:route>
            <fr:title text="Implicit vs. explicit hierarchy in document markup languages">Implicit vs. explicit hierarchy in document markup languages</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>Many document markup languages, including LaTeX and HTML, use sectioning commands that evince an <html:em>implicit</html:em> hierarchical structure: for instance, consider the following HTML code:</html:p>
            <html:pre><![CDATA[<h1>Foo</h1>
<h2>Bar</h2>
<h3>Baz</h3>
<h3>Qux</h4>
<h1>Boo</h1>]]></html:pre>
            <html:p>The above corresponds to the tree <html:code><![CDATA[[Foo > [Bar > [Baz, Qux]], Boo]]]></html:code>. On the other hand, it is also possible to consider a model in which the hierarchy is made explicit through the syntactical tree structure of the markup language. This style is also supported (but not forced) in HTML:</html:p>
            <html:pre><![CDATA[<section>
  <h1>Foo</h1>
  <section>
    <h2>Bar</h2>
    <section>
      <h3>Baz</h3>
    </section>
    <section>
      <h3>Qux</h3>
    </section>
  </section>
</section>

<section>
  <h1>Boo</h1>
</section>]]></html:pre>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="https://www.forester-notes.org/jonmsterling/" title="Jon Sterling" uri="https://www.forester-notes.org/jonmsterling/" display-uri="https://www.forester-notes.org/jonmsterling/" type="local">Jon Sterling</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2022</fr:year>
              <fr:month>12</fr:month>
              <fr:day>29</fr:day>
            </fr:date>
            <fr:uri>https://www.forester-notes.org/tfmt-000B/</fr:uri>
            <fr:display-uri>https://www.forester-notes.org/tfmt-000B/</fr:display-uri>
            <fr:route>https://www.forester-notes.org/tfmt-000B/</fr:route>
            <fr:title text="Absolute vs. relative hierarchy in document markup languages">Absolute vs. relative hierarchy in document markup languages</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>Both HTML and LaTeX support a form of hierarchical organization with “absolute” heading levels, i.e. levels that count upward from a single root. In HTML, there is <html:code><![CDATA[<h1>]]></html:code>, <html:code><![CDATA[<h2>]]></html:code>, <html:code><![CDATA[<h3>]]></html:code>..., and in LaTeX there is <html:code><![CDATA[\part]]></html:code>, <html:code><![CDATA[\chapter]]></html:code>, <html:code><![CDATA[\section]]></html:code>, <html:code><![CDATA[\subsection]]></html:code>,<html:code><![CDATA[\subsubsection]]></html:code>, ..., <html:code><![CDATA[\paragraph]]></html:code> depending on the document class. This is in contrast to a <html:em>relative</html:em> model of hierarchy, in which there is a single command to introduce a section heading at the “current” level, and there are other commands to introduce hierarchical nesting.</html:p>
            <html:p>The absolute sectioning model is completely inadequate for the hierarchical organization of ideas, for the simple reason that it is the <html:em>context</html:em> of a node that determines what its level in the hierarchy is, not the node itself. When this is mixed up, it makes re-contextualization an extremely painful and time-consuming process: you must recursively increment or decrement all section levels that occur underneath a given node, as anyone who has used LaTeX for any significant writing project can attest.</html:p>
            <html:p>In traditional texts, re-contextualization occurs when you want to move a section from one place in the hierarchy to another; in the more fluid media I am pursuing, there may be  <fr:link href="https://www.forester-notes.org/tfmt-0006/" title="Hierarchical structure as non-unique narrative" uri="https://www.forester-notes.org/tfmt-0006/" display-uri="https://www.forester-notes.org/tfmt-0006/" type="local">many orthogonal hierarchical structures</fr:link> imposed on the network, so re-contextualization ceases to be a <html:em>refactoring task</html:em> and is elevated as a <fr:link href="https://www.forester-notes.org/tfmt-0006/" title="Hierarchical structure as non-unique narrative" uri="https://www.forester-notes.org/tfmt-0006/" display-uri="https://www.forester-notes.org/tfmt-0006/" type="local">basic unit of scientific activity</fr:link>. In either case, we are drawn to prefer <html:strong>relative hierarchy</html:strong> over <html:strong>absolute</html:strong> hierarchy. See <fr:link href="https://www.forester-notes.org/tfmt-000C/" title="Relative hierarchy in existing tools" uri="https://www.forester-notes.org/tfmt-000C/" display-uri="https://www.forester-notes.org/tfmt-000C/" type="local">existing implementations of this idea</fr:link>.</html:p>
            <html:p>This is similar to the relationship between De Bruijn levels (global levels) and De Bruijn indices (local levels) in type theory: conventional section headings are like De Bruijn indices in that they count from the <html:strong>root</html:strong> node, whereas what we would want are section headings that count from the <html:strong>present</html:strong> node.</html:p>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
