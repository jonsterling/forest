\import{jms-0075}
\title{policy relevant evidence of the project}
\author{jonmsterling}
\date{2023-08-15}

\p{Research in program semantics and verification is essentially of two kinds. On the one hand, there is work that pushes the envelope of what kinds of programs can be verified — demonstrating (at great exertion and expense) the potential to verify the correctness of the extremely complex software that makes our society work, including onboard software used in air planes, industrial production, agricultural production, artificial intelligence, etc.  On the other hand, there is research that aims to rethink from the ground up the mathematical understanding of programming, radically simplifying the foundations on which the program verification tools are built. Both kinds of research are important and rely heavily on each other. Applied program verification is critical because the need to prevent software faults is ever-present, and in order to get any kind of uptake and adoption, we must demonstrate the capability of our tools to handle the very complex problems that are raised by industrial and governmental use of software. Likewise, foundational research is extremely important because when applied program verification hits its conceptual limitations, it can only advance by becoming bigger and more expensive — requiring larger and larger teams and budgets to make smaller and smaller incremental improvements. In just one year, the \TypeSynth project has achieved (through careful attention to building bridges between different mathematical disciplines) what many researchers in this area considered impossible or at least significantly farther off in the future; this experience must be replicated with further grants and fellowships to theoretically and foundationally minded researchers who are willing to undertake interdisciplinary work.}

\p{At the present time, my perception is that applied program verification is significantly more intelligible to funders and agencies because it speaks directly to the fears and concerns that we all have for our society in the age of software domination, artificial intelligence, and quantum computing; this is understandable, but it has regrettably led to the neglect of foundational research at the time when it is most urgent — it is now that we must lay the foundations for the next generation of program verifiers, before rather than after applied work in program verification reaches the hard limitations that more theoretically-oriented researchers have been working to remove. Therefore, I urge the European Commission and relevant policy makers to increase their consideration of foundational research as an investment in the future, alongside their continued funding of the very important applied direction in program semantics and verification.}
