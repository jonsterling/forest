\title{the git distributed version control system}
\taxon{requirement}
\author{jonmsterling}
\date{2023-08-14}

\let\forester{[forester](jms-005P)}
\let\forest{[forest](tfmt-000R)}
\let\trees{[trees](tfmt-000R)}
\let\dvc{[distributed version control](https://en.wikipedia.org/wiki/Distributed_version_control)}
\let\link/git[x]{[\x](https://git-scm.com/)}
\let\git{\link/git{git}}
\let\Git{\link/git{Git}}

\p{It is best practice to maintain your \forest inside of \dvc. This serves not only as a way to prevent data loss (because you will be pushing frequently to a remote repository); it also allows you to easily roll back to an earlier version of your \forest, or to create “branches” in which you prepare \trees that are not yet ready to be integrated into the \forest.}

\p{The recommended \dvc system is \git, which comes preinstalled on many unix-based systems and is easy to install otherwise. \Git is not the most user-friendly piece of software, unfortunately, but it is ubiquitous. It is possible (but not recommended) to use \forester without version control, but note that the simplest way to [initialize your own \forest](jms-006X) involves cloning a \git repository.}
