\title{chapter 6: cartesian cubical type theory}
\date{2023-01-19T20:03:57-05:00}
\author{jonmsterling}

\export{base-macros}
\def\II{\mathbb{I}}
\def\TpPath[arg1][arg2][arg3]{{\arg2}\mathrel{{\sim}\Sub{\arg1}}{\arg3}}


\p{This expository chapter introduces cubical type theory as an extension to Martin-Löf’s type theory by an interval #{\II} with two distinct endpoints #{0, 1 : \II}. The interval is a basic “figure” that defines a notion of \em{path} or \em{identification} #{\TpPath{A}{u}{v}} between two elements of any type; for instance, to identify #{u,v:A} is the same as to construct a function #{p:\II\to A} such that #{p0 = u} and #{p1=v}. Terms involving \em{variables} of type #{\II} can exhibit complex computational behavior that is difficult to account for: for instance, if #{p:\TpPath{A}{u}{v}} and #{i:\II} are variables, then the application #{pi:A} is a normal form, but it must nonetheless reduce to either #{u} or #{v} when #{i} is substituted for by a constant. Despite appearances, this scenario is fundamentally different from the way that #{pi} must reduce when #{p} is replaced
by a #{\lambda}-abstraction, as normal forms must \em{a priori} be closed under arbitrary #{\II}-substitutions — a necessity, because the normal form of an #{n}-cube must be an #{n}-cube of normal forms. One of the main technical contributions of this dissertation, introduced in the [next chapter](jms-0014), is to generalization of the notion of neutral form and the Tait saturation yoga that smoothly accommodates the problematic computational behavior of the interval.}
