\title{first steps in synthetic guarded domain theory: step-indexing in the topos of trees}
\date{2011}
\taxon{reference}

\author{larsbirkedal}
\author{rasmusmøgelberg}
\author{Jan Schwinghammer}
\author{Kristian Støvring}
\tag{refereed}
\tag{gdt}
\meta{bibtex}{\startverb%
@inproceedings{bmss-2011,
  author = {Birkedal, Lars and M{\o{}}gelberg, Rasmus Ejlers and Schwinghammer, Jan and St\o{}vring, Kristian},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  booktitle = {Proceedings of the 2011 IEEE 26th Annual Symposium on Logic in Computer Science},
  year = {2011},
  doi = {10.1109/LICS.2011.16},
  eprint = {1208.3596},
  eprintclass = {cs.LO},
  eprinttype = {arXiv},
  isbn = {978-0-7695-4412-0},
  pages = {55--64},
  title = {First Steps in Synthetic Guarded Domain Theory: Step-Indexing in the Topos of Trees},
}\stopverb}

\meta{doi}{10.1109/LICS.2011.16}
\meta{venue}{Proceedings of the 2011 IEEE 26th Annual Symposium on Logic in Computer Science}

\let\S{#{\mathcal{S}}}

\p{We present the topos \S of trees as a model of guarded recursion. We study the internal dependently-typed higher-order logic of \S and show that \S models two modal operators, on predicates and types, which serve as guards in recursive definitions of terms, predicates, and types. In particular, we show how to solve recursive type equations involving dependent types. We propose that the internal logic of \S provides the right setting for the synthetic construction of abstract versions of step-indexed models of programming languages and program logics. As an example, we show how to construct a model of a programming language with higher-order store and recursive types entirely inside the internal logic of \S.}
