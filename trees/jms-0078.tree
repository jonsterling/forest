\import{jms-0075}
\title{denotational semantics of higher-order store}
\author{jonmsterling}
\date{2023-08-15}

\p{The \TypeSynth plan to develop denotational semantics of higher-order store had two components: the first was to develop a practical semantic model of polymorphic higher-order store without garbage collection, and the second was to extend this model to support the equational theory of garbage collection. For the former, the results have greatly outstripped expectations: I have succeeded in constructing not only the indended model of store with polymorphism, but in fact a [model of full dependent type theory with higher-order store](sterling-gratzer-birkedal-2022) — posing the prospect for being able to write and verify the correctness of programs in the same language. This result is the first of its kind for higher-order store, and is a significant advance. In the final months of the project, we have also gone further beyond this result in a different direction, and constructed a version of the model of higher-order store satisfying a new gamut of compelling representation independence equations which I refer to as the theory of [“univalent reference types”](sterling-gratzer-birkedal-2023-univalent): in short, two programs can be considered equal even if they allocate memory cells of different types, so long as the two types are in bijection and programs' interaction with the memory cell respects this bijection.}

\p{I have begun to extend these results to include the equational theory of garbage collection, but as the \TypeSynth project has been terminated nearly one year early (due to my recent appointment as Associate Professor at University of Cambridge), this further exploitation of the \TypeSynth methodology will continue beyond the conclusion of the project.}
