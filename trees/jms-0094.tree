\def\QTT{[QTT](atkey-2018)}
\def\STC{[STC](sterling-2021-thesis)}

\title{on the relationship between \QTT and \STC}
\date{2023-09-17}
\author{jonmsterling}

\import{base-macros}

\let\ECat{#{\mathscr{E}}}
\let\One{#{\mathbf{1}}}
\let\QCat{#{\mathscr{Q}}}
\let\FCat{#{\mathscr{F}}}

\p{I have been thinking again about the relationship between [quantitative type theory](atkey-2018) and [synthetic Tait computability](sterling-2021-thesis) and other approaches to type refinements. One of the defining characteristics of \QTT that I thought distinguished it from \STC was the treatment of types: \strong{in \QTT, types only depend on the “computational” / unrefined aspect of their context, whereas types in \STC are allowed to depend on everything}. In the past, I mistakenly believed that this was due to the \em{realizability-style interpretation} of \QTT, in contrast with \STC’s \em{gluing interpretation}. It is now clear to me that (1) \QTT is actually glued (in the sense of \em{q-realizability}, no pun intended), and (2) \mark{the nonstandard interpretation of types in \QTT corresponds to adding an \em{additional} axiom to \STC, namely the tininess of the generic proposition.}}

\p{It has been suggested to me by [Neel Krishnaswami](neelkrishnaswami) that this property of \QTT may not be desirable in all cases (sometimes you want the types to depend on quantitative information), and that for this reason, \em{graded type theories} might be a better way forward in some applications. My results today show that \STC is, in essence, what you get when you relax the \QTT’s assumption that types do not depend on quantitative information. This suggests that we should explore the idea of multiplicities within the context of \STC — as any monoidal product on the subuniverse spanned by closed-modal types induces quite directly a form of variable multiplicity in \STC, I expect this direction to be fruitful.}

\p{My thoughts on the precise relationship between the \QTT models and Artin gluing will be elucidated at a different time. Today, I will restrict myself to sketching an interpretation of a QTT-style language in STC assuming the generic proposition is internally tiny.}

\p{Let \QCat be an elementary topos equipped with a subterminal object #{\P\hookrightarrow\One} inducing an open subtopos #{\ECat\simeq\Sl{\QCat}{\P}\hookrightarrow\QCat} and its complementary closed subtopos #{\FCat\hookrightarrow\QCat}. This structure is the basis of the interpretation of \STC; if you think of \STC in terms of refinements, then stuff from \ECat is “computational” and stuff from \FCat is “logical”.}

\p{We now consider the interpretation of a language of (potentially quantitative) refinements into \QCat. A context #{\Gamma} is interpreted by an object of #{\QCat}; a type #{\Gamma\vdash A} is interpreted by a family #{A\to \bigcirc{\Gamma}}; a term #{\Gamma\vdash a : A} is interpreted as a map #{\Gamma\to A} such that #{\Gamma\to A \to \bigcirc\Gamma} is the unit of the monad.}

\let\VV{#{\mathcal{V}}}
\let\UU{#{\mathcal{U}}}

\p{So far we have not needed anything beyond the base structure of \STC in order to give an interpretation of types in \QTT’s style. But to extend this interpretation to a universe, we must additionally assume that #{\P} is internally tiny, in the sense that the exponential functor #{\prn{-}^\P} is a left adjoint. Under these circumstances, the idempotent monad #{\bigcirc \equiv j_*j^* : \QCat\to\QCat} corresponding to the open immersion #{j : \ECat\hookrightarrow\QCat} has a right adjoint #{\square : \QCat\to \QCat}, an idempotent comonad.}

\proof{
  \p{As #{\bigcirc \equiv j_*j^*} is the exponential functor #{\prn{-}^\P}, its right adjoint #{\square} is therefore the “root functor” #{\prn{-}_\P} that exhibits #{\P} as an internally tiny object.}
}

\p{Although #{\square} lifts to each slice of \QCat, these liftings do not commute with base change; this will, however, not be an obstacle for us.}


\p{We will now see how to use the adjunction #{\bigcirc\dashv\square} to interpret a universe, either for the purpose of interpreting universes of refinement types, or for the purpose of strictifying the model that we have sketched. Let \VV be a (standard) universe in \QCat, e.g. a [Hofmann–Streicher universe](hofmann-streicher-1997); we shall then interpret the corresponding universe of refinements as #{\UU:\equiv \square\VV}. To see that #{\UU} classifies #{\VV}-small families of refinements, we compute as follows:}

\ol{
  \li{A code #{\Gamma\vdash\hat{A} : \UU} amounts to nothing more than a morphism #{\hat{A}:\Gamma\to\square{\VV}}.}
  \li{By adjoint transpose, this is the same as a morphism #{\hat{A}^\sharp : \bigcirc{\Gamma}\to\VV}.}
}

\p{Thus we see that if \VV is generic for #{\VV}-small families of (arbitrary) types in \QCat, then #{\UU \equiv \square\VV} is generic for #{\VV}-small families of type refinements, i.e. types whose context is #{\bigcirc}-modal.}

\p{Finally, we comment that the tininess of #{\P} is satisfied in many standard examples, the simplest of which is the Sierpiński topos #{\SET^{\to}}.}
